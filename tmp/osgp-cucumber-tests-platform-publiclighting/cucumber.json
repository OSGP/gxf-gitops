[
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T11:52:33.066Z",
        "before": [
          {
            "result": {
              "duration": 325875286,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 33208166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44110954,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3963267,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 22,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;2",
        "after": [
          {
            "result": {
              "duration": 119302,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 114285,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 34376,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 79073678,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 504786314,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52373099,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:34.197Z",
        "before": [
          {
            "result": {
              "duration": 58544749,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12408690,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 20060645,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1601677,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;3",
        "after": [
          {
            "result": {
              "duration": 40543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12684,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 34740220,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50950794,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5046792,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:34.391Z",
        "before": [
          {
            "result": {
              "duration": 52734893,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8791569,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13129427,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 874276,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 24,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;4",
        "after": [
          {
            "result": {
              "duration": 26102,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 16396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11363,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 24426159,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 107157366,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 710790,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:34.608Z",
        "before": [
          {
            "result": {
              "duration": 171884466,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10178604,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 19695592,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3146170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 25,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;5",
        "after": [
          {
            "result": {
              "duration": 30777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11161,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29827250,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42402228,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 684540,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:34.895Z",
        "before": [
          {
            "result": {
              "duration": 53519014,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7465974,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13323196,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 812987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 26,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;6",
        "after": [
          {
            "result": {
              "duration": 50405,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 29680,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 23424,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 23183210,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41418934,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 975300,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.046Z",
        "before": [
          {
            "result": {
              "duration": 47460224,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9116946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11180606,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 868831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 27,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;7",
        "after": [
          {
            "result": {
              "duration": 26974,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18027,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12465,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20197347,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37694460,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 715086,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.182Z",
        "before": [
          {
            "result": {
              "duration": 41729639,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7498816,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13163045,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1561752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 28,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;8",
        "after": [
          {
            "result": {
              "duration": 26147,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15239,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22241504,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36419481,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 675297,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.315Z",
        "before": [
          {
            "result": {
              "duration": 37172264,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7046461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11835661,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 687714,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 29,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;9",
        "after": [
          {
            "result": {
              "duration": 28282,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 16888,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11039,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20086635,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35571141,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 781110,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.436Z",
        "before": [
          {
            "result": {
              "duration": 33271975,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6414031,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13091133,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 668294,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 30,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;10",
        "after": [
          {
            "result": {
              "duration": 51381,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 39376,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 17269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19019422,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33863370,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1130333,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.552Z",
        "before": [
          {
            "result": {
              "duration": 33440567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6364546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11699970,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1250812,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 31,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;11",
        "after": [
          {
            "result": {
              "duration": 27120,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 111746,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11985,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21709245,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36034325,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 579678,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.671Z",
        "before": [
          {
            "result": {
              "duration": 32753857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5640915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10221184,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 583829,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 32,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;12",
        "after": [
          {
            "result": {
              "duration": 26914,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 40287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 17585,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18452862,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 119135087,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 780996,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.868Z",
        "before": [
          {
            "result": {
              "duration": 30424149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5686545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8351863,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 770903,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 33,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;13",
        "after": [
          {
            "result": {
              "duration": 28379,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10718,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18166104,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38290038,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 875530,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:35.979Z",
        "before": [
          {
            "result": {
              "duration": 30981920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8569314,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 26802503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 2032811,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 34,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;14",
        "after": [
          {
            "result": {
              "duration": 114985,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 54577,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 23874,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41711644,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 147937598,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 789707,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.249Z",
        "before": [
          {
            "result": {
              "duration": 32233965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9580564,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9754519,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 645573,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 35,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;15",
        "after": [
          {
            "result": {
              "duration": 53252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 14707,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19770287,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37840533,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1571141,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.369Z",
        "before": [
          {
            "result": {
              "duration": 39949114,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9378601,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11594989,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1283123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 36,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;16",
        "after": [
          {
            "result": {
              "duration": 26275,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9432,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18186131,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41263209,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 657281,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.502Z",
        "before": [
          {
            "result": {
              "duration": 36343710,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6287446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10201396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1266619,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 37,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;17",
        "after": [
          {
            "result": {
              "duration": 122792,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 94817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 87021,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22760308,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35427768,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1452256,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.623Z",
        "before": [
          {
            "result": {
              "duration": 34002142,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7639960,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9630085,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 765678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 38,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;18",
        "after": [
          {
            "result": {
              "duration": 31568,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13427,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12028,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20344444,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38799341,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 792561,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.742Z",
        "before": [
          {
            "result": {
              "duration": 34270124,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8399788,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12921922,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 725909,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 39,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;19",
        "after": [
          {
            "result": {
              "duration": 26682,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11729,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10272,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20312333,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36252803,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 774320,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.865Z",
        "before": [
          {
            "result": {
              "duration": 33714771,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7923228,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13496595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 711040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 40,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;20",
        "after": [
          {
            "result": {
              "duration": 25720,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10852,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13916,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19833978,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30964632,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 675712,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:36.979Z",
        "before": [
          {
            "result": {
              "duration": 32362172,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8184338,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12020022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 601700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 41,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;21",
        "after": [
          {
            "result": {
              "duration": 23361,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 14170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19336750,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32839425,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_LIGHT_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 798899,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.092Z",
        "before": [
          {
            "result": {
              "duration": 29637395,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7075185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10207063,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 583788,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 42,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;22",
        "after": [
          {
            "result": {
              "duration": 30673,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18145,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11534,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14255246,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 117213816,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 896056,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.281Z",
        "before": [
          {
            "result": {
              "duration": 47709680,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11164337,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 15119081,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1456193,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 43,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;23",
        "after": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11584,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15581,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 32053257,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66687480,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 866024,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.468Z",
        "before": [
          {
            "result": {
              "duration": 39219116,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8627802,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 15446902,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 842432,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 44,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;24",
        "after": [
          {
            "result": {
              "duration": 21995,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8683,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17463162,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 123585999,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 564053,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.681Z",
        "before": [
          {
            "result": {
              "duration": 36124000,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7911184,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13625309,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 752407,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 45,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;25",
        "after": [
          {
            "result": {
              "duration": 95306,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9560,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19421115,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40380736,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 721347,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.807Z",
        "before": [
          {
            "result": {
              "duration": 29894470,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9057745,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8677295,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 759761,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 46,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;26",
        "after": [
          {
            "result": {
              "duration": 22422,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8327,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7152,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16843684,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32525421,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 817347,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:37.912Z",
        "before": [
          {
            "result": {
              "duration": 25460208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6626169,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9704261,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 496332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 47,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;27",
        "after": [
          {
            "result": {
              "duration": 37125,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7455,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7078,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15486136,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36150264,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 639964,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.013Z",
        "before": [
          {
            "result": {
              "duration": 27095337,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7012652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8289626,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 530089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 48,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;28",
        "after": [
          {
            "result": {
              "duration": 80249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 19097,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11940,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16737004,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35907223,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 893160,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.116Z",
        "before": [
          {
            "result": {
              "duration": 23237022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5563951,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9739294,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 494598,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 49,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;29",
        "after": [
          {
            "result": {
              "duration": 30441,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6902,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14763588,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36208117,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 799579,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.215Z",
        "before": [
          {
            "result": {
              "duration": 26886027,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8978036,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8850621,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1754659,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 50,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;30",
        "after": [
          {
            "result": {
              "duration": 28950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7833,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6940,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17408361,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36537491,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 949999,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.323Z",
        "before": [
          {
            "result": {
              "duration": 27608242,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5209546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9487639,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 649654,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 51,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;31",
        "after": [
          {
            "result": {
              "duration": 23208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7527,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12478792,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30228904,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "GET_TARIFF_STATUS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 560895,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.415Z",
        "before": [
          {
            "result": {
              "duration": 25035973,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4821135,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9142085,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 485586,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 52,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;32",
        "after": [
          {
            "result": {
              "duration": 33342,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18882,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14770110,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54029892,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 877131,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.534Z",
        "before": [
          {
            "result": {
              "duration": 32321199,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8657300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9836958,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 667431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 53,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;33",
        "after": [
          {
            "result": {
              "duration": 51312,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 14226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11669,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 32447646,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71802953,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2084726,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.704Z",
        "before": [
          {
            "result": {
              "duration": 45287140,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7048122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 17622298,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 722471,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 54,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;34",
        "after": [
          {
            "result": {
              "duration": 124036,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 53371,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 24454,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20534483,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60107147,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2846991,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:38.875Z",
        "before": [
          {
            "result": {
              "duration": 44989500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7456436,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 17515508,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 918593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 55,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;35",
        "after": [
          {
            "result": {
              "duration": 28314,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7148,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7064,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 25374596,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67078798,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 628514,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.046Z",
        "before": [
          {
            "result": {
              "duration": 43455014,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11284540,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 16208535,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1000255,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 56,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;36",
        "after": [
          {
            "result": {
              "duration": 136266,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 27735,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 36915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20888240,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37165116,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1271082,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.189Z",
        "before": [
          {
            "result": {
              "duration": 32333185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6130813,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11373186,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 876976,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 57,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;37",
        "after": [
          {
            "result": {
              "duration": 26570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13401,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7636,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17115001,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110185518,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 838795,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.375Z",
        "before": [
          {
            "result": {
              "duration": 36443391,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6144869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 15209502,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 966030,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 58,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;38",
        "after": [
          {
            "result": {
              "duration": 42835,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5891,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 24233841,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31958037,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 930811,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.497Z",
        "before": [
          {
            "result": {
              "duration": 28603289,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9175917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11656781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 753056,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 59,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;39",
        "after": [
          {
            "result": {
              "duration": 24264,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6804,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6705,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18909351,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34640397,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 550394,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.607Z",
        "before": [
          {
            "result": {
              "duration": 30650357,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5532368,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9952317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 583961,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 60,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;40",
        "after": [
          {
            "result": {
              "duration": 31413,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6839,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6302,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11486440,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28688686,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 527937,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.701Z",
        "before": [
          {
            "result": {
              "duration": 27240609,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6341112,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7637723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 575939,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 61,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;41",
        "after": [
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6635,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14079222,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29080643,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_LIGHT_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 628369,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.792Z",
        "before": [
          {
            "result": {
              "duration": 32033062,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6977788,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7458456,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 508885,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 62,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;42",
        "after": [
          {
            "result": {
              "duration": 42842,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10547,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6905,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15891338,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 119438799,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 647282,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:39.982Z",
        "before": [
          {
            "result": {
              "duration": 29020215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5786225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10118386,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 547360,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 63,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;43",
        "after": [
          {
            "result": {
              "duration": 26518,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10095,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16213106,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36928756,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1097838,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.088Z",
        "before": [
          {
            "result": {
              "duration": 28421850,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5949697,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12156362,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 662059,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 64,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;44",
        "after": [
          {
            "result": {
              "duration": 23719,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6625,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6238,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 25728893,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35771710,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1073398,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.204Z",
        "before": [
          {
            "result": {
              "duration": 28454955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5475464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10946907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 504096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 65,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;45",
        "after": [
          {
            "result": {
              "duration": 32481,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 88173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 30237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12290533,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33722245,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 628762,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.303Z",
        "before": [
          {
            "result": {
              "duration": 26120466,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6135950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8664334,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1480640,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 66,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;46",
        "after": [
          {
            "result": {
              "duration": 33654,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5441,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12369384,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34730547,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 613517,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.399Z",
        "before": [
          {
            "result": {
              "duration": 27315350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6643238,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6530177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 451567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 67,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;47",
        "after": [
          {
            "result": {
              "duration": 18538,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6422,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5897,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12856461,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34000145,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 537984,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.493Z",
        "before": [
          {
            "result": {
              "duration": 23544762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4745041,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7535029,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 656235,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 68,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;48",
        "after": [
          {
            "result": {
              "duration": 19459,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5585,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11384916,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 113725043,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 551049,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.662Z",
        "before": [
          {
            "result": {
              "duration": 25291339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4714493,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7873638,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 596421,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 69,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;49",
        "after": [
          {
            "result": {
              "duration": 22684,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5934,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5174,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12366658,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30205227,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 767536,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.751Z",
        "before": [
          {
            "result": {
              "duration": 23458859,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5579892,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6828247,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 476183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 70,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;50",
        "after": [
          {
            "result": {
              "duration": 19691,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6053,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13046177,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32611922,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 537404,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.839Z",
        "before": [
          {
            "result": {
              "duration": 26948118,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5045445,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7722552,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 831121,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 71,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;51",
        "after": [
          {
            "result": {
              "duration": 65950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 14918,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15041738,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33978616,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TARIFF_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1076371,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:40.937Z",
        "before": [
          {
            "result": {
              "duration": 23989169,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6305959,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8122394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 576447,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 72,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;52",
        "after": [
          {
            "result": {
              "duration": 47868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 22915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12961,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15688999,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 103169877,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1784025,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.106Z",
        "before": [
          {
            "result": {
              "duration": 30691321,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5079898,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9046868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 704416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 73,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;53",
        "after": [
          {
            "result": {
              "duration": 46319,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8655,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4771,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12565207,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32074939,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1436742,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.204Z",
        "before": [
          {
            "result": {
              "duration": 22476995,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6628563,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6210552,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 402012,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 74,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;54",
        "after": [
          {
            "result": {
              "duration": 19603,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20351,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7009,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10422455,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92881859,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 681492,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.350Z",
        "before": [
          {
            "result": {
              "duration": 50891301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4882929,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7853095,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 432134,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 75,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;55",
        "after": [
          {
            "result": {
              "duration": 17789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5238,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11133216,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30310048,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 684597,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.462Z",
        "before": [
          {
            "result": {
              "duration": 25684141,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5499457,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8775720,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 512125,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 76,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;56",
        "after": [
          {
            "result": {
              "duration": 28480,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10637,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5792,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18313376,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30097455,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 594041,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.558Z",
        "before": [
          {
            "result": {
              "duration": 30020623,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6331972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 14156608,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1241211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 77,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;57",
        "after": [
          {
            "result": {
              "duration": 21141,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6036,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16741911,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39265651,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 575034,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.673Z",
        "before": [
          {
            "result": {
              "duration": 32239319,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12772010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 20229175,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1026180,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 78,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;58",
        "after": [
          {
            "result": {
              "duration": 111250,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 27765,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 25243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22770661,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 47202013,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1701997,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.819Z",
        "before": [
          {
            "result": {
              "duration": 29614884,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6354756,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13818533,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 950539,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 79,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;59",
        "after": [
          {
            "result": {
              "duration": 45215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8189,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14275349,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51701754,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 837819,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:41.944Z",
        "before": [
          {
            "result": {
              "duration": 38777131,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11746886,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9767692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 530643,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 80,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;60",
        "after": [
          {
            "result": {
              "duration": 19670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8827,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18109168,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46309673,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 707789,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.078Z",
        "before": [
          {
            "result": {
              "duration": 34732416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5500670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7131328,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 486369,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 81,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;61",
        "after": [
          {
            "result": {
              "duration": 19189,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6024,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5758,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11470304,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25934613,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "RESUME_SCHEDULE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 554816,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.170Z",
        "before": [
          {
            "result": {
              "duration": 25358070,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5362894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6954098,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 445712,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 82,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;62",
        "after": [
          {
            "result": {
              "duration": 19019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5750,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4967,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11932687,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 105241630,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 556531,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.331Z",
        "before": [
          {
            "result": {
              "duration": 43755847,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7260745,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8448371,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 585449,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 83,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;63",
        "after": [
          {
            "result": {
              "duration": 18468,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5354,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4960,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12037374,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "INSTALLATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33351767,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 544634,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.442Z",
        "before": [
          {
            "result": {
              "duration": 19901953,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5287975,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6716322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 400468,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 84,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;64",
        "after": [
          {
            "result": {
              "duration": 23632,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6184,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5639,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10574077,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "AD_HOC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 99374373,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 968706,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"true\"",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.593Z",
        "before": [
          {
            "result": {
              "duration": 31996879,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8537500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10165688,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1627871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 85,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;65",
        "after": [
          {
            "result": {
              "duration": 101942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 26890,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22850937,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83202821,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1097303,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.765Z",
        "before": [
          {
            "result": {
              "duration": 38407070,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7657867,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10870239,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 648124,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 86,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;66",
        "after": [
          {
            "result": {
              "duration": 48298,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12427,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12194,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16116124,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "FIRMWARE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39764090,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1326360,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.887Z",
        "before": [
          {
            "result": {
              "duration": 30894752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5925634,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9615763,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 482225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 87,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;67",
        "after": [
          {
            "result": {
              "duration": 42100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20721,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15515,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11701383,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35541043,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1239855,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:42.989Z",
        "before": [
          {
            "result": {
              "duration": 26475209,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4676398,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7253464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 850973,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 88,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;68",
        "after": [
          {
            "result": {
              "duration": 18525,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6279,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4927,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13679390,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "TARIFF_SCHEDULING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30632924,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 572732,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:43.080Z",
        "before": [
          {
            "result": {
              "duration": 27838132,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4925333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7280168,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 436582,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 89,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;69",
        "after": [
          {
            "result": {
              "duration": 24413,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6677,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10934696,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "CONFIGURATION"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25205246,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 618875,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:43.163Z",
        "before": [
          {
            "result": {
              "duration": 21923373,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4405147,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8031214,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 506819,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 90,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;70",
        "after": [
          {
            "result": {
              "duration": 22249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5645,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5352,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11177525,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "MONITORING"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24227933,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 528643,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:43.240Z",
        "before": [
          {
            "result": {
              "duration": 20895708,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4947129,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7841206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 440767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 91,
        "name": "Call a device function and verify whether this is allowed",
        "description": "",
        "id": "basicosgpfunctions-publiclighting-authorizing-device-functions;call-a-device-function-and-verify-whether-this-is-allowed;;71",
        "after": [
          {
            "result": {
              "duration": 18567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5463,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5530,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13365386,
              "status": "passed"
            },
            "line": 12,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "METADATA_MANAGEMENT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26942604,
              "status": "passed"
            },
            "line": 15,
            "name": "receiving a publiclighting device function request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.receivingAPublicLightingDeviceFunctionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceFunction",
                  "SET_TRANSITION"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 562801,
              "status": "passed"
            },
            "line": 18,
            "name": "the publiclighting device function response is \"false\"",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.basicosgpfunctions.AuthorizeDeviceFunctionsSteps.thePublicLightingDeviceFunctionResponseIsSuccessful(java.lang.Boolean)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          }
        ]
      }
    ],
    "name": "BasicOsgpFunctions PublicLighting Authorizing Device Functions",
    "description": "  As a ...\n  I want to ...\n  In order to ...",
    "id": "basicosgpfunctions-publiclighting-authorizing-device-functions",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/basic-osgp-functions/AuthorizeDeviceFunctions.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@BasicOsgpFunctions",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T11:52:43.325Z",
        "before": [
          {
            "result": {
              "duration": 24618945,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4527474,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8021268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 544215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 25,
        "name": "Instances of one protocol with or without variant",
        "description": "",
        "id": "basicosgpfunctions-protocol-functions;instances-of-one-protocol-with-or-without-variant;;2",
        "after": [
          {
            "result": {
              "duration": 40068,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5404,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6765204,
              "status": "passed"
            },
            "line": 10,
            "name": "a protocol",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.aProtocol(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "null"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19196364,
              "status": "passed"
            },
            "line": 14,
            "name": "I validate that there is only one protocol record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.validateProtocol(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "null"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7398053,
              "status": "passed"
            },
            "line": 18,
            "name": "I delete the protocol record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.iDeleteTheProtocolRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "null"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@ProtocolFunctions"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:52:43.412Z",
        "before": [
          {
            "result": {
              "duration": 26106490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4829056,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13103381,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 540705,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 26,
        "name": "Instances of one protocol with or without variant",
        "description": "",
        "id": "basicosgpfunctions-protocol-functions;instances-of-one-protocol-with-or-without-variant;;3",
        "after": [
          {
            "result": {
              "duration": 42727,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6391,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3822110,
              "status": "passed"
            },
            "line": 10,
            "name": "a protocol",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.aProtocol(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "test"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3396570,
              "status": "passed"
            },
            "line": 14,
            "name": "I validate that there is only one protocol record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.validateProtocol(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "test"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5492475,
              "status": "passed"
            },
            "line": 18,
            "name": "I delete the protocol record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.ProtocolInfoSteps.iDeleteTheProtocolRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "test"
                ]
              },
              {
                "cells": [
                  "ProtocolVersion",
                  "1.0"
                ]
              },
              {
                "cells": [
                  "ProtocolVariant",
                  "test"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@ProtocolFunctions"
          }
        ]
      }
    ],
    "name": "BasicOsgpFunctions Protocol functions",
    "description": "  I want to check the protocol version and variant",
    "id": "basicosgpfunctions-protocol-functions",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/basic-osgp-functions/ProtocolRequests.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@BasicOsgpFunctions",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@ProtocolFunctions",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 47
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T11:52:43.484Z",
        "before": [
          {
            "result": {
              "duration": 29049918,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10941089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9324178,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 795681,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1576372,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 33,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;2",
        "after": [
          {
            "result": {
              "duration": 56482,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6934,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8973,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 28345036,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120585998,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2295490,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"-5\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-5",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34953259,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1419184,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002312539,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30574037301,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:53:15.324Z",
        "before": [
          {
            "result": {
              "duration": 27258116,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5991553,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11208966,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 716907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 79358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 34,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;3",
        "after": [
          {
            "result": {
              "duration": 80681,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15039322,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 962418,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 378415,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"-4\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-4",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 233779776,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 675432,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000997273,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30428338522,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:53:47.058Z",
        "before": [
          {
            "result": {
              "duration": 28429138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6355516,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12086482,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 539067,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72140,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 35,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;4",
        "after": [
          {
            "result": {
              "duration": 63403,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10763,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5080,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15992309,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1157805,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 352587,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"-3\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-3",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89516366,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 497024,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000824842,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30364697061,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:54:18.587Z",
        "before": [
          {
            "result": {
              "duration": 27571186,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5902337,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11613360,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 721301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 86746,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 36,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;5",
        "after": [
          {
            "result": {
              "duration": 57288,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10724,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5398,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20380860,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1163288,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 444099,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"-2\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-2",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86987477,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 750062,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000917355,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30430043236,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:54:50.185Z",
        "before": [
          {
            "result": {
              "duration": 27244577,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7714383,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 14264336,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1623183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 104812,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 37,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;6",
        "after": [
          {
            "result": {
              "duration": 48777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5072,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 24330965,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1531382,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 901407,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"-1\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-1",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104231789,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 538887,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000914027,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30367206250,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:55:21.744Z",
        "before": [
          {
            "result": {
              "duration": 27940944,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5660824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10499474,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 563593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 67420,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;7",
        "after": [
          {
            "result": {
              "duration": 49437,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5953,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18356198,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1051883,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306409,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"0\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95128373,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 845483,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000726113,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30369661375,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:55:53.282Z",
        "before": [
          {
            "result": {
              "duration": 26798053,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5709440,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10458558,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 581921,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 74526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;8",
        "after": [
          {
            "result": {
              "duration": 74361,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9622,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17274732,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2581704,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 321086,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"1\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87484062,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 763669,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001125548,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30376570153,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:56:24.819Z",
        "before": [
          {
            "result": {
              "duration": 30909901,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6497825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9353725,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 523777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66377,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;9",
        "after": [
          {
            "result": {
              "duration": 46381,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5622,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4808,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14898317,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1092852,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 434346,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"2\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99383342,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1116229,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001139259,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30474787267,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:56:56.467Z",
        "before": [
          {
            "result": {
              "duration": 24165132,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5699052,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11923825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 699610,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 91205,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;10",
        "after": [
          {
            "result": {
              "duration": 74840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14445318,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1199946,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 354060,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"3\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85767418,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 743845,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001313748,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30288740930,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:57:27.910Z",
        "before": [
          {
            "result": {
              "duration": 29507920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5576336,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11495639,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 668730,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 81950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;11",
        "after": [
          {
            "result": {
              "duration": 50180,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6016,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5270,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18065860,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1636832,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 479015,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"4\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100347637,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1256442,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001321444,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30260849368,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:57:59.349Z",
        "before": [
          {
            "result": {
              "duration": 24787359,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4557428,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9257842,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 550282,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 69475,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;12",
        "after": [
          {
            "result": {
              "duration": 205088,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20257,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12021209,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 996672,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320432,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"5\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81394052,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 502179,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000850408,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30217026341,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:58:30.712Z",
        "before": [
          {
            "result": {
              "duration": 39550769,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6983426,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 14752905,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 2005810,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 342162,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;13",
        "after": [
          {
            "result": {
              "duration": 57056,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5875,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5236,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22697965,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3039432,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 979892,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"6\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 226329532,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 681649,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002050840,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30248421182,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:02.289Z",
        "before": [
          {
            "result": {
              "duration": 22406688,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7212995,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9175464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 547545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 92787,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Valid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-platform-initiates-communication;;14",
        "after": [
          {
            "result": {
              "duration": 47733,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6063,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7291,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13472192,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1004801,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 359333,
              "status": "passed"
            },
            "line": 22,
            "name": "the device adds \"7\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104081569,
              "status": "passed"
            },
            "line": 23,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 557799,
              "status": "passed"
            },
            "line": 25,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000825423,
              "status": "passed"
            },
            "line": 27,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:28)\n",
              "duration": 30176183135,
              "status": "failed"
            },
            "line": 28,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:33.631Z",
        "before": [
          {
            "result": {
              "duration": 25496333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4455942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9581473,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 542273,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 62719,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 69,
        "name": "Invalid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-platform-initiates-communication;;2",
        "after": [
          {
            "result": {
              "duration": 55084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5212,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4847,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13142474,
              "status": "passed"
            },
            "line": 49,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1258000,
              "status": "passed"
            },
            "line": 52,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 305382,
              "status": "passed"
            },
            "line": 58,
            "name": "the device adds \"-7\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-7",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95598889,
              "status": "passed"
            },
            "line": 59,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 700771,
              "status": "passed"
            },
            "line": 61,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000858464,
              "status": "passed"
            },
            "line": 63,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.ClassCastException: class org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse cannot be cast to class org.springframework.ws.soap.client.SoapFaultClientException (org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse and org.springframework.ws.soap.client.SoapFaultClientException are in unnamed module of loader \u0027app\u0027)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:35)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(GetStatusSteps.java:326)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:64)\n",
              "duration": 129025355,
              "status": "failed"
            },
            "line": 64,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "No response from device"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:34.920Z",
        "before": [
          {
            "result": {
              "duration": 22980888,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4451032,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8454701,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 722759,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 70,
        "name": "Invalid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-platform-initiates-communication;;3",
        "after": [
          {
            "result": {
              "duration": 43175,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6604,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4943,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14028489,
              "status": "passed"
            },
            "line": 49,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1157650,
              "status": "passed"
            },
            "line": 52,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326724,
              "status": "passed"
            },
            "line": 58,
            "name": "the device adds \"-6\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "-6",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79481030,
              "status": "passed"
            },
            "line": 59,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 496221,
              "status": "passed"
            },
            "line": 61,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000701753,
              "status": "passed"
            },
            "line": 63,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.ClassCastException: class org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse cannot be cast to class org.springframework.ws.soap.client.SoapFaultClientException (org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse and org.springframework.ws.soap.client.SoapFaultClientException are in unnamed module of loader \u0027app\u0027)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:35)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(GetStatusSteps.java:326)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:64)\n",
              "duration": 114151134,
              "status": "failed"
            },
            "line": 64,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "No response from device"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:36.174Z",
        "before": [
          {
            "result": {
              "duration": 21925399,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5820730,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11732936,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 680807,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 403657,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 71,
        "name": "Invalid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-platform-initiates-communication;;4",
        "after": [
          {
            "result": {
              "duration": 42442,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5896,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5008,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16486614,
              "status": "passed"
            },
            "line": 49,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1403316,
              "status": "passed"
            },
            "line": 52,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 467246,
              "status": "passed"
            },
            "line": 58,
            "name": "the device adds \"8\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89829814,
              "status": "passed"
            },
            "line": 59,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 766537,
              "status": "passed"
            },
            "line": 61,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001091366,
              "status": "passed"
            },
            "line": 63,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.ClassCastException: class org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse cannot be cast to class org.springframework.ws.soap.client.SoapFaultClientException (org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse and org.springframework.ws.soap.client.SoapFaultClientException are in unnamed module of loader \u0027app\u0027)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:35)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(GetStatusSteps.java:326)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:64)\n",
              "duration": 113855570,
              "status": "failed"
            },
            "line": 64,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "No response from device"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:37.446Z",
        "before": [
          {
            "result": {
              "duration": 20728380,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4333634,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9953728,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 450926,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 68515,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 72,
        "name": "Invalid sequence number ranges platform initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-platform-initiates-communication;;5",
        "after": [
          {
            "result": {
              "duration": 74578,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4988,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4906,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11886058,
              "status": "passed"
            },
            "line": 49,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 865772,
              "status": "passed"
            },
            "line": 52,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 386820,
              "status": "passed"
            },
            "line": 58,
            "name": "the device adds \"9\" to the sequencenumber in the \"OSLP ELSTER\" response",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 17
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 50
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.basicosgpfunctions.ProtocolSequenceNumberSteps.receivingAConfirmRequest(java.lang.Integer,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96611582,
              "status": "passed"
            },
            "line": 59,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 554344,
              "status": "passed"
            },
            "line": 61,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000830110,
              "status": "passed"
            },
            "line": 63,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.ClassCastException: class org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse cannot be cast to class org.springframework.ws.soap.client.SoapFaultClientException (org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.GetStatusAsyncResponse and org.springframework.ws.soap.client.SoapFaultClientException are in unnamed module of loader \u0027app\u0027)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:35)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(GetStatusSteps.java:326)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:64)\n",
              "duration": 115649297,
              "status": "failed"
            },
            "line": 64,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\" which contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDeviceWhichContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "No response from device"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:38.715Z",
        "before": [
          {
            "result": {
              "duration": 24578243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4752222,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9393329,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 464561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55600,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 93,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;2",
        "after": [
          {
            "result": {
              "duration": 25817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5428,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14277295,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-5\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 6901916,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"-5\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-5",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 158499,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 167545,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:38.784Z",
        "before": [
          {
            "result": {
              "duration": 21099303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4841006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8966762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 489868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 74871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 94,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;3",
        "after": [
          {
            "result": {
              "duration": 59385,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9147,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11897391,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-4\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3826524,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"-4\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-4",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177491,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 171152,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:38.844Z",
        "before": [
          {
            "result": {
              "duration": 20880590,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4492634,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8334454,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 382006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 95,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;4",
        "after": [
          {
            "result": {
              "duration": 26586,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 17347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6326,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14222984,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-3\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 2998300,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"-3\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-3",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 171295,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 146187,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:38.909Z",
        "before": [
          {
            "result": {
              "duration": 20541332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4443336,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8767703,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 424847,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64005,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 96,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;5",
        "after": [
          {
            "result": {
              "duration": 17220,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4717,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4457,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14290525,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-2\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3097237,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"-2\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-2",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 167654,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 165534,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:38.967Z",
        "before": [
          {
            "result": {
              "duration": 17737101,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4451425,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9978313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 594045,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 100855,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 97,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;6",
        "after": [
          {
            "result": {
              "duration": 24564,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4722,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4194,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13565065,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-1\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 2820231,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"-1\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-1",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140815,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 149201,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.023Z",
        "before": [
          {
            "result": {
              "duration": 16648123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5602681,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8456127,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 391965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 59922,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 98,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;7",
        "after": [
          {
            "result": {
              "duration": 38752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5214,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4330,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12434191,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"0\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3215032,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"0\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 168044,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 246794,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.076Z",
        "before": [
          {
            "result": {
              "duration": 27057857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4335648,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10062195,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 497390,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 77275,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 99,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;8",
        "after": [
          {
            "result": {
              "duration": 23384,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13544678,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"1\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3071670,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"1\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 139614,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 144732,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.141Z",
        "before": [
          {
            "result": {
              "duration": 19890561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5626152,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8567079,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 488479,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 75674,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 100,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;9",
        "after": [
          {
            "result": {
              "duration": 16247,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12975699,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"2\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 2955520,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"2\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 149203,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 133745,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.198Z",
        "before": [
          {
            "result": {
              "duration": 18821499,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4961338,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8853086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 452651,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 108563,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 101,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;10",
        "after": [
          {
            "result": {
              "duration": 17332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4947,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3813,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12712568,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"3\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3557027,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"3\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 144620,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 153606,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.253Z",
        "before": [
          {
            "result": {
              "duration": 19417237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4226910,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8085623,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 406130,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72853,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 102,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;11",
        "after": [
          {
            "result": {
              "duration": 15926,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5124,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4232,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13940381,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"4\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3198748,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"4\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138366,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 144386,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.309Z",
        "before": [
          {
            "result": {
              "duration": 17599274,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4495955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11494292,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 465972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 103,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;12",
        "after": [
          {
            "result": {
              "duration": 20474,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 16304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15604569,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"5\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 3430605,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"5\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 139900,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 148753,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.368Z",
        "before": [
          {
            "result": {
              "duration": 17138326,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4032930,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8077049,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 360155,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57708,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 104,
        "name": "Valid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;valid-sequence-number-ranges-device-initiates-communication;;13",
        "after": [
          {
            "result": {
              "duration": 23198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5958,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4120,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11035225,
              "status": "passed"
            },
            "line": 76,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"6\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:79)\n",
              "duration": 4713952,
              "status": "failed"
            },
            "line": 79,
            "name": "the device sends an event notification request with sequencenumber \"6\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 277437,
              "status": "skipped"
            },
            "line": 84,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 168398,
              "status": "skipped"
            },
            "line": 86,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.420Z",
        "before": [
          {
            "result": {
              "duration": 17042545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3898433,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8373807,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 394537,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 58819,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 121,
        "name": "Invalid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-device-initiates-communication;;2",
        "after": [
          {
            "result": {
              "duration": 17988,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5437,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4568,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13424531,
              "status": "passed"
            },
            "line": 108,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-7\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:111)\n",
              "duration": 3431360,
              "status": "failed"
            },
            "line": 111,
            "name": "the device sends an event notification request with sequencenumber \"-7\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-7",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 142178,
              "status": "skipped"
            },
            "line": 116,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.475Z",
        "before": [
          {
            "result": {
              "duration": 16190297,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4070548,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7789920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 449793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54050,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 122,
        "name": "Invalid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-device-initiates-communication;;3",
        "after": [
          {
            "result": {
              "duration": 16781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4801,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11349321,
              "status": "passed"
            },
            "line": 108,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"-6\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:111)\n",
              "duration": 3131912,
              "status": "failed"
            },
            "line": 111,
            "name": "the device sends an event notification request with sequencenumber \"-6\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "-6",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 94
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 149614,
              "status": "skipped"
            },
            "line": 116,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.524Z",
        "before": [
          {
            "result": {
              "duration": 18780246,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4732422,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8375141,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 601123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 63862,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 123,
        "name": "Invalid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-device-initiates-communication;;4",
        "after": [
          {
            "result": {
              "duration": 20687,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5387,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6351,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13313857,
              "status": "passed"
            },
            "line": 108,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"8\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:111)\n",
              "duration": 3187052,
              "status": "failed"
            },
            "line": 111,
            "name": "the device sends an event notification request with sequencenumber \"8\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140906,
              "status": "skipped"
            },
            "line": 116,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T11:59:39.579Z",
        "before": [
          {
            "result": {
              "duration": 18902882,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4452126,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8742252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 443293,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 124,
        "name": "Invalid sequence number ranges device initiates communication",
        "description": "",
        "id": "basicosgpfunctions-protocol-sequence-number;invalid-sequence-number-ranges-device-initiates-communication;;5",
        "after": [
          {
            "result": {
              "duration": 22022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6912,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19028313,
              "status": "passed"
            },
            "line": 108,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(OslpDeviceSteps.java:1408)\n\tat ✽.the device sends an event notification request with sequencenumber \"9\" to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature:111)\n",
              "duration": 3468576,
              "status": "failed"
            },
            "line": 111,
            "name": "the device sends an event notification request with sequencenumber \"9\" to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 68
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 93
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAStartDeviceResponseOver(java.lang.Integer,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 155732,
              "status": "skipped"
            },
            "line": 116,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@BasicOsgpFunctions"
          },
          {
            "name": "@SequenceNumber"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "BasicOsgpFunctions Protocol Sequence Number",
    "description": "  As a ...\n  I want to ...\n  In order to ...",
    "id": "basicosgpfunctions-protocol-sequence-number",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/basic-osgp-functions/ProtocolSequenceNumber.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@BasicOsgpFunctions",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@SequenceNumber",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 47
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T11:59:39.644Z",
        "before": [
          {
            "result": {
              "duration": 21392446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4951089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10376326,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 687861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 96493,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          },
          {
            "result": {
              "duration": 1227402,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.initMockServerLightMeasurement()"
            }
          }
        ],
        "line": 45,
        "name": "Switch public lighting upon receiving a light measurement event",
        "description": "",
        "id": "light-measurement-using-iec-60870-device;switch-public-lighting-upon-receiving-a-light-measurement-event;;2",
        "after": [
          {
            "result": {
              "duration": 31076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5403,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4392,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49658954,
              "status": "passed"
            },
            "line": 13,
            "name": "a light measurement RTU using IEC60870 protocol",
            "match": {
              "arguments": [
                {
                  "val": "light measurement RTU",
                  "offset": 2
                },
                {
                  "val": "IEC60870",
                  "offset": 30
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.DeviceSteps.givenADeviceUsingProtocol(org.opensmartgridplatform.cucumber.platform.helpers.DeviceType,org.opensmartgridplatform.cucumber.platform.helpers.Protocol,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35594252,
              "status": "passed"
            },
            "line": 15,
            "name": "a light measurement device using IEC60870 protocol",
            "match": {
              "arguments": [
                {
                  "val": "light measurement device",
                  "offset": 2
                },
                {
                  "val": "IEC60870",
                  "offset": 33
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.DeviceSteps.givenADeviceUsingProtocol(org.opensmartgridplatform.cucumber.platform.helpers.DeviceType,org.opensmartgridplatform.cucumber.platform.helpers.Protocol,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "LMD-1"
                ]
              },
              {
                "cells": [
                  "GatewayDeviceIdentification",
                  "RTU-1"
                ]
              },
              {
                "cells": [
                  "InformationObjectAddress",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3368022,
              "status": "passed"
            },
            "line": 19,
            "name": "a process image on the IEC60870 server",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.steps.ProcessImageSteps.givenAProcessImageOnTheIec60870Server(org.opensmartgridplatform.iec60870.Iec60870ProcessImage)"
            },
            "rows": [
              {
                "cells": [
                  "InformationObjectAddress",
                  "InformationObjectType",
                  "InformationElementValue"
                ]
              },
              {
                "cells": [
                  "1",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "true"
                ]
              },
              {
                "cells": [
                  "2",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "false"
                ]
              },
              {
                "cells": [
                  "3",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "true"
                ]
              },
              {
                "cells": [
                  "4",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23672278,
              "status": "passed"
            },
            "line": 25,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "SSLD-1"
                ]
              },
              {
                "cells": [
                  "LightMeasurementDeviceIdentification",
                  "LMD-1"
                ]
              },
              {
                "cells": [
                  "TechnicalInstallationDate",
                  "2020-01-01"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1757122,
              "status": "passed"
            },
            "line": 29,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25030729007,
              "status": "passed"
            },
            "line": 30,
            "name": "an existing connection with the RTU",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.givenAnExistingConnectionWithTheRTU(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1854554,
              "status": "passed"
            },
            "line": 32,
            "name": "the RTU sends a light measurement event",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.whenTheRtuSendsALightMeasurementEvent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "InformationObjectAddress",
                  "1"
                ]
              },
              {
                "cells": [
                  "SinglePointInformation",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 504035606,
              "status": "passed"
            },
            "line": 35,
            "name": "the device message for the light measurement event should be logged",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.theDeviceMessageForTheLightMeasurementEventShouldBeLogged(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4115475,
              "status": "passed"
            },
            "line": 37,
            "name": "the light measurement event should be logged",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.theLightMeasurementEventShouldBeLogged(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "LMD-1"
                ]
              },
              {
                "cells": [
                  "LightMeasurementEvent",
                  "LIGHT"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001188583,
              "status": "passed"
            },
            "line": 40,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"SSLD-1\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "SSLD-1",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "NIGHT_DAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@LightMeasurement"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@Iec60870MockServerLightMeasurement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:00:06.350Z",
        "before": [
          {
            "result": {
              "duration": 30691076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5569824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10081220,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3552040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 68407,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          },
          {
            "result": {
              "duration": 62317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.initMockServerLightMeasurement()"
            }
          }
        ],
        "line": 46,
        "name": "Switch public lighting upon receiving a light measurement event",
        "description": "",
        "id": "light-measurement-using-iec-60870-device;switch-public-lighting-upon-receiving-a-light-measurement-event;;3",
        "after": [
          {
            "result": {
              "duration": 34813,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4726,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4308,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20934390,
              "status": "passed"
            },
            "line": 13,
            "name": "a light measurement RTU using IEC60870 protocol",
            "match": {
              "arguments": [
                {
                  "val": "light measurement RTU",
                  "offset": 2
                },
                {
                  "val": "IEC60870",
                  "offset": 30
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.DeviceSteps.givenADeviceUsingProtocol(org.opensmartgridplatform.cucumber.platform.helpers.DeviceType,org.opensmartgridplatform.cucumber.platform.helpers.Protocol,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30680931,
              "status": "passed"
            },
            "line": 15,
            "name": "a light measurement device using IEC60870 protocol",
            "match": {
              "arguments": [
                {
                  "val": "light measurement device",
                  "offset": 2
                },
                {
                  "val": "IEC60870",
                  "offset": 33
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.DeviceSteps.givenADeviceUsingProtocol(org.opensmartgridplatform.cucumber.platform.helpers.DeviceType,org.opensmartgridplatform.cucumber.platform.helpers.Protocol,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "LMD-2"
                ]
              },
              {
                "cells": [
                  "GatewayDeviceIdentification",
                  "RTU-1"
                ]
              },
              {
                "cells": [
                  "InformationObjectAddress",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 517186,
              "status": "passed"
            },
            "line": 19,
            "name": "a process image on the IEC60870 server",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.steps.ProcessImageSteps.givenAProcessImageOnTheIec60870Server(org.opensmartgridplatform.iec60870.Iec60870ProcessImage)"
            },
            "rows": [
              {
                "cells": [
                  "InformationObjectAddress",
                  "InformationObjectType",
                  "InformationElementValue"
                ]
              },
              {
                "cells": [
                  "1",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "true"
                ]
              },
              {
                "cells": [
                  "2",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "false"
                ]
              },
              {
                "cells": [
                  "3",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "true"
                ]
              },
              {
                "cells": [
                  "4",
                  "SINGLE_POINT_INFORMATION_WITH_QUALITY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21997316,
              "status": "passed"
            },
            "line": 25,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "SSLD-2"
                ]
              },
              {
                "cells": [
                  "LightMeasurementDeviceIdentification",
                  "LMD-2"
                ]
              },
              {
                "cells": [
                  "TechnicalInstallationDate",
                  "2020-01-01"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 780826,
              "status": "passed"
            },
            "line": 29,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55028760729,
              "status": "passed"
            },
            "line": 30,
            "name": "an existing connection with the RTU",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.givenAnExistingConnectionWithTheRTU(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 769707,
              "status": "passed"
            },
            "line": 32,
            "name": "the RTU sends a light measurement event",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.whenTheRtuSendsALightMeasurementEvent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "InformationObjectAddress",
                  "2"
                ]
              },
              {
                "cells": [
                  "SinglePointInformation",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 503491377,
              "status": "passed"
            },
            "line": 35,
            "name": "the device message for the light measurement event should be logged",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.theDeviceMessageForTheLightMeasurementEventShouldBeLogged(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "RTU-1"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1811932,
              "status": "passed"
            },
            "line": 37,
            "name": "the light measurement event should be logged",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.LightMeasurementSteps.theLightMeasurementEventShouldBeLogged(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "LMD-2"
                ]
              },
              {
                "cells": [
                  "LightMeasurementEvent",
                  "DARK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001016189,
              "status": "passed"
            },
            "line": 40,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"SSLD-2\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "SSLD-2",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@LightMeasurement"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@Iec60870MockServerLightMeasurement"
          }
        ]
      }
    ],
    "name": "Light Measurement using IEC-60870 device",
    "description": "  As a grid operator\n  I want to receive light measurement events\n  So that I can switch public lighting based on light measurements",
    "id": "light-measurement-using-iec-60870-device",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/light-measurements/LightMeasurements.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@LightMeasurement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:01:03.018Z",
        "before": [
          {
            "result": {
              "duration": 24030786,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5661788,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9990466,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3995152,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 106826,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 28,
        "name": "Set reboot",
        "description": "",
        "id": "coreadhocmanagement-set-reboot;set-reboot;;2",
        "after": [
          {
            "result": {
              "duration": 47629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4419,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14517926,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 983660,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 446435280,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reboot request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 722415,
              "status": "passed"
            },
            "line": 20,
            "name": "the set reboot async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000879842,
              "status": "passed"
            },
            "line": 22,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(SetRebootSteps.java:111)\n\tat ✽.the platform buffers a set reboot response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/AdHocManagement/SetReboot.feature:23)\n",
              "duration": 30054312455,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a set reboot response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:01:34.588Z",
        "before": [
          {
            "result": {
              "duration": 23231009,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4142107,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10868532,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 711165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 30,
        "name": "Set reboot as an unknown organization",
        "description": "",
        "id": "coreadhocmanagement-set-reboot;set-reboot-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 15830,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4653,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4115,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 45616662,
              "status": "passed"
            },
            "line": 31,
            "name": "receiving a set reboot request by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequestByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 297152,
              "status": "passed"
            },
            "line": 33,
            "name": "the set reboot async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:01:34.677Z",
        "before": [
          {
            "result": {
              "duration": 20102353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3743044,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5740924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 532022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 36,
        "name": "Set reboot for an unknown device",
        "description": "",
        "id": "coreadhocmanagement-set-reboot;set-reboot-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 16276,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4265,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22266944,
              "status": "passed"
            },
            "line": 37,
            "name": "receiving a set reboot request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 287865,
              "status": "passed"
            },
            "line": 40,
            "name": "the set reboot async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreAdhocManagement"
          }
        ]
      }
    ],
    "name": "CoreAdhocManagement Set Reboot",
    "description": "  As OSGP\n  I want to asynchronously handle set reboot requests\n  In order to reboot devices As a platform\n  NOTE: Authorisation is tested in Basic OSGP Functions - PBI119",
    "id": "coreadhocmanagement-set-reboot",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/AdHocManagement/SetReboot.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:01:34.746Z",
        "before": [
          {
            "result": {
              "duration": 22013173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5010683,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6234060,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 425739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 156304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 67627,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4398,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4323,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15747540,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1339743,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116934693,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 972864,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000759684,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30518928975,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:02:06.452Z",
        "before": [
          {
            "result": {
              "duration": 27341226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4838048,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9165111,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 710282,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 59521,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;3",
        "after": [
          {
            "result": {
              "duration": 42397,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5537,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4443,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15773890,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1039835,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92192914,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 480042,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000870809,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30494677173,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:02:38.107Z",
        "before": [
          {
            "result": {
              "duration": 23399523,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4453625,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11189850,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 617341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 84979,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;4",
        "after": [
          {
            "result": {
              "duration": 37255,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4481,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4923,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13457158,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1152442,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92795883,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 635535,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000998474,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30442710697,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:03:09.706Z",
        "before": [
          {
            "result": {
              "duration": 24752545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6734240,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9456642,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 508028,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 65991,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;5",
        "after": [
          {
            "result": {
              "duration": 40215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5494,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4433,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13934776,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1031752,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93835549,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 493411,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001018465,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30437800942,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:03:41.301Z",
        "before": [
          {
            "result": {
              "duration": 24307452,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5108122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9505343,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 749045,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 88105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;6",
        "after": [
          {
            "result": {
              "duration": 34874,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4795,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3809,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13447117,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1209085,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,2;2,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100397935,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 504099,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000818018,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30448688194,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,2;2,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:04:12.914Z",
        "before": [
          {
            "result": {
              "duration": 23040752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5414239,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9183047,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 673037,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 65419,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;7",
        "after": [
          {
            "result": {
              "duration": 35993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4277,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3803,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13626964,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 937379,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94672640,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 667403,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001369906,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30411385853,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:04:44.482Z",
        "before": [
          {
            "result": {
              "duration": 24314808,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5963545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8963243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 854217,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 62026,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;8",
        "after": [
          {
            "result": {
              "duration": 36452,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4460,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12342399,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 902523,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95530947,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 512379,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001034792,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30383398284,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:05:16.023Z",
        "before": [
          {
            "result": {
              "duration": 22055016,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5347065,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9271050,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 515154,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66319,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;9",
        "after": [
          {
            "result": {
              "duration": 49304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5571,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12155204,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1053425,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98080783,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 425918,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000750759,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30372959262,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:05:47.553Z",
        "before": [
          {
            "result": {
              "duration": 23592322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4183775,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9547857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 553299,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 153012,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;10",
        "after": [
          {
            "result": {
              "duration": 86661,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16487642,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1068038,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92177990,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 428201,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000970690,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30114904283,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:06:18.826Z",
        "before": [
          {
            "result": {
              "duration": 40241455,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6968275,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 22675925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3216643,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 449671,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;11",
        "after": [
          {
            "result": {
              "duration": 40498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13024,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49984402,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1790015,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 366705147,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1903043,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002233558,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30239880334,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:06:50.572Z",
        "before": [
          {
            "result": {
              "duration": 30943228,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5171836,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9438464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 767451,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 160652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;12",
        "after": [
          {
            "result": {
              "duration": 66819,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6866,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17917922,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1089087,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96023927,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 653195,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001116148,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30124225693,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:07:21.869Z",
        "before": [
          {
            "result": {
              "duration": 27202584,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8648631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11500859,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 835297,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 102959,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-of-a-device;;13",
        "after": [
          {
            "result": {
              "duration": 47139,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7406,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14549815,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2434328,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109362903,
              "status": "passed"
            },
            "line": 25,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 472791,
              "status": "passed"
            },
            "line": 27,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001048732,
              "status": "passed"
            },
            "line": 29,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(GetConfigurationSteps.java:130)\n\tat ✽.the platform buffers a get configuration response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature:30)\n",
              "duration": 30164496054,
              "status": "failed"
            },
            "line": 30,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:07:53.218Z",
        "before": [
          {
            "result": {
              "duration": 33927310,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7511493,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12006672,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 831322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 56,
        "name": "Get configuration data with unknown device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;get-configuration-data-with-unknown-device",
        "after": [
          {
            "result": {
              "duration": 118166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26455838,
              "status": "passed"
            },
            "line": 57,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1119561413,
              "status": "passed"
            },
            "line": 59,
            "name": "the get configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:07:54.427Z",
        "before": [
          {
            "result": {
              "duration": 26119284,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8608440,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11536632,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 848920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 106134,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 84,
        "name": "Failed get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;failed-get-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 37700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5740,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4681,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20998611,
              "status": "passed"
            },
            "line": 64,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1242955,
              "status": "passed"
            },
            "line": 67,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "FAILURE"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 170741900,
              "status": "passed"
            },
            "line": 74,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 475767,
              "status": "passed"
            },
            "line": 76,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000835250,
              "status": "passed"
            },
            "line": 78,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15669168,
              "status": "passed"
            },
            "line": 79,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\" contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports failure"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@GetConfigurationFailed"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:07:55.696Z",
        "before": [
          {
            "result": {
              "duration": 29180561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8086764,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 16511608,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 680651,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 89269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 108,
        "name": "Rejected get configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-getconfiguration;rejected-get-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 34621,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4921,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21451065,
              "status": "passed"
            },
            "line": 88,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1360301,
              "status": "passed"
            },
            "line": 91,
            "name": "the device returns a get configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97283946,
              "status": "passed"
            },
            "line": 98,
            "name": "receiving a get configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.receivingAGetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 442662,
              "status": "passed"
            },
            "line": 100,
            "name": "the get configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001323574,
              "status": "passed"
            },
            "line": 102,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15468895,
              "status": "passed"
            },
            "line": 103,
            "name": "the platform buffers a get configuration response message for device \"TEST1024000000001\" contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.thePlatformBuffersAGetConfigurationResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports rejected"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "CoreConfigurationManagement GetConfiguration",
    "description": "  As a ...\n  I want to ...\n  In order to ...",
    "id": "coreconfigurationmanagement-getconfiguration",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/GetConfiguration.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreConfigurationManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:07:56.898Z",
        "before": [
          {
            "result": {
              "duration": 27707822,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6598590,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11990456,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 859995,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 119649,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 92512,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9785,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10004,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15974594,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 897061,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 278605,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133596748,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 770248,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1009060051,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31015251504,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 232033,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:08:29.140Z",
        "before": [
          {
            "result": {
              "duration": 24784651,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4781953,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13386838,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 896853,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 78782,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;3",
        "after": [
          {
            "result": {
              "duration": 45784,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6142,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6710,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16166223,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 776779,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 310579,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177630684,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,TARIFF"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 855860,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002579202,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,TARIFF"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31016983471,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 197654,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:09:01.412Z",
        "before": [
          {
            "result": {
              "duration": 33151793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6120127,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 16231521,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 626997,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 76825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;4",
        "after": [
          {
            "result": {
              "duration": 58016,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10113,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7468,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16709644,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 910980,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 346111,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127730780,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1285599,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001148766,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31015359007,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 269048,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:09:33.643Z",
        "before": [
          {
            "result": {
              "duration": 36579593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 14542109,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 14854598,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 973920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 130603,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;5",
        "after": [
          {
            "result": {
              "duration": 31419,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4247,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 37663237,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2319971,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1045078,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 152176021,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1929110,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001608246,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31012157378,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 210150,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:10:05.927Z",
        "before": [
          {
            "result": {
              "duration": 20284409,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4838553,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8709481,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 419284,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55441,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;6",
        "after": [
          {
            "result": {
              "duration": 33296,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5113,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4427,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13953495,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 817986,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 625280,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116660996,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,2;2,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 519747,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001045790,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,2;2,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31014687836,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238625,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:10:38.117Z",
        "before": [
          {
            "result": {
              "duration": 21481335,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4565669,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8524104,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 610534,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 68723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;7",
        "after": [
          {
            "result": {
              "duration": 30319,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4650,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5371,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11969286,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 790712,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 255497,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 602337317,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 554216,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001236631,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31012174086,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157721,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:11:10.789Z",
        "before": [
          {
            "result": {
              "duration": 21832655,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4106093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8387875,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 665087,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;8",
        "after": [
          {
            "result": {
              "duration": 33878,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12589456,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 877557,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 269447,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117659505,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 535041,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001129883,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31011714176,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 147511,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:11:42.977Z",
        "before": [
          {
            "result": {
              "duration": 23477002,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5097773,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9972980,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 591344,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 83821,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;9",
        "after": [
          {
            "result": {
              "duration": 34035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4658,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4581,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14828710,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 785625,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 251299,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 121638752,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 397134,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000935733,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31013206364,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 216032,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:12:15.175Z",
        "before": [
          {
            "result": {
              "duration": 21069975,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4073211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8027926,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 461086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 69149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;10",
        "after": [
          {
            "result": {
              "duration": 34717,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5951,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 34022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12725075,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 926002,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271445,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111599177,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 422206,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001271371,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31011895976,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 178266,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:12:47.355Z",
        "before": [
          {
            "result": {
              "duration": 21061889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4538710,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8840553,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 462033,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 62172,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;11",
        "after": [
          {
            "result": {
              "duration": 36655,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5223,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7963,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10896410,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1058022,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 321002,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172037182,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 446990,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000939216,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31013069236,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158958,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:13:19.598Z",
        "before": [
          {
            "result": {
              "duration": 40682104,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5061125,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9656690,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 566772,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73537,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;12",
        "after": [
          {
            "result": {
              "duration": 34290,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4658,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4326,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 31363643,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 751727,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 252825,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137462179,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 449321,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001782020,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31010769697,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177838,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:13:51.848Z",
        "before": [
          {
            "result": {
              "duration": 24634613,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4149411,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9499243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 511369,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 63117,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;13",
        "after": [
          {
            "result": {
              "duration": 33871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12468438,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 784907,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 264140,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115814666,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 474363,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001087923,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31012828791,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158547,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:14:24.037Z",
        "before": [
          {
            "result": {
              "duration": 19727388,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6192366,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9270720,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 475414,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 61781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 55,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;14",
        "after": [
          {
            "result": {
              "duration": 34142,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5079,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4397,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12618780,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 766642,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 260782,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119023133,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 437611,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000916522,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31011007879,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177565,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:14:56.226Z",
        "before": [
          {
            "result": {
              "duration": 20066046,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5262975,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7259227,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 425020,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 79091,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 56,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;15",
        "after": [
          {
            "result": {
              "duration": 158878,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15948,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21167,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11260934,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 708754,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239481,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123339458,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "1"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 405039,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001446770,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "1"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31012049825,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 276604,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:15:28.420Z",
        "before": [
          {
            "result": {
              "duration": 22750047,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6301430,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10694002,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 914743,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 91590,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 57,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;16",
        "after": [
          {
            "result": {
              "duration": 34107,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4611,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4633,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16683908,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1349084,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1387542,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 131390430,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1;2,2"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 643296,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001159284,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "2"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1;2,2"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31011197478,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 197633,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:00.631Z",
        "before": [
          {
            "result": {
              "duration": 19809659,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4034938,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10678116,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 457024,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 56376,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 58,
        "name": "Set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-a-device;;17",
        "after": [
          {
            "result": {
              "duration": 33833,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6101,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4596,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11215420,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1009261,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 584421,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193945011,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 605479,
              "status": "passed"
            },
            "line": 27,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000982088,
              "status": "passed"
            },
            "line": 29,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.50"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature:37)\n",
              "duration": 31010900502,
              "status": "failed"
            },
            "line": 37,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161323,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:32.891Z",
        "before": [
          {
            "result": {
              "duration": 21187296,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5758865,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8332029,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 470052,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 60,
        "name": "Set configuration of an unknown device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-of-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 19868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4336,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47746189,
              "status": "passed"
            },
            "line": 61,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1287763,
              "status": "passed"
            },
            "line": 68,
            "name": "the get configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.GetConfigurationSteps.theGetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:32.989Z",
        "before": [
          {
            "result": {
              "duration": 16960334,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4160191,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6341040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 381508,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66625,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 92,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;2",
        "after": [
          {
            "result": {
              "duration": 16757,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4904,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4235,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12990474,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 759370,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17682683,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 500961,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.b: The content of element \u0027ns2:RelayMap\u0027 is not complete. One of \u0027{\"http://www.opensmartgridplatform.org/schemas/configurationmanagement/2014/10\":RelayType}\u0027 is expected."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.058Z",
        "before": [
          {
            "result": {
              "duration": 17871011,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3958898,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9232129,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 499899,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 80207,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 93,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;3",
        "after": [
          {
            "result": {
              "duration": 21724,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6160,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4934,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15243375,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 801943,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16033946,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ",,TARIFF"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 655532,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_IndexRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Index\u0027 is not valid.;cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_AddressRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Address\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.128Z",
        "before": [
          {
            "result": {
              "duration": 15709506,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5223430,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9523846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 391783,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 94,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;4",
        "after": [
          {
            "result": {
              "duration": 16906,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4826,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11380195,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 681376,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13656324,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ",,TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 457946,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_IndexRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Index\u0027 is not valid.;cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_AddressRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Address\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.189Z",
        "before": [
          {
            "result": {
              "duration": 19784697,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4558124,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9369932,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 537998,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 114773,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 95,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;5",
        "after": [
          {
            "result": {
              "duration": 16498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5763,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13605,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16350872,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 851777,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18537691,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 410206,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.b: The content of element \u0027ns2:RelayMap\u0027 is not complete. One of \u0027{\"http://www.opensmartgridplatform.org/schemas/configurationmanagement/2014/10\":RelayType}\u0027 is expected."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.266Z",
        "before": [
          {
            "result": {
              "duration": 21343640,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4017066,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10800837,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 463652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 77544,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 96,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;6",
        "after": [
          {
            "result": {
              "duration": 16967,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4808,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4156,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12516871,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 972305,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17692275,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ",,TARIFF"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 513448,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_IndexRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Index\u0027 is not valid.;cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_AddressRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Address\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.340Z",
        "before": [
          {
            "result": {
              "duration": 21132424,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5773211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8903336,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 422216,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 128290,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 97,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;7",
        "after": [
          {
            "result": {
              "duration": 25840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7220,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17006895,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1025491,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16002712,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ",,TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 641352,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_IndexRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Index\u0027 is not valid.;cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_AddressRelayMap\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns2:Address\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.419Z",
        "before": [
          {
            "result": {
              "duration": 20955108,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4417624,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10735503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 435137,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 70950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 98,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;8",
        "after": [
          {
            "result": {
              "duration": 22622,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8820,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12635897,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 812771,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14108206,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "5"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1;2,2;3,3;4,4;5,5"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 470649,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-maxInclusive-valid: Value \u00275\u0027 is not facet-valid with respect to maxInclusive \u00274\u0027 for type \u0027#AnonType_NumberOfLightsDaliConfiguration\u0027.;cvc-type.3.1.3: The value \u00275\u0027 of element \u0027ns2:NumberOfLights\u0027 is not valid.;cvc-complex-type.2.4.d: Invalid content was found starting with element \u0027ns2:IndexAddressMap\u0027. No child element is expected at this point.;cvc-maxInclusive-valid: Value \u00275\u0027 is not facet-valid with respect to maxInclusive \u00274\u0027 for type \u0027#AnonType_IndexIndexAddressMap\u0027.;cvc-type.3.1.3: The value \u00275\u0027 of element \u0027ns2:Index\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.489Z",
        "before": [
          {
            "result": {
              "duration": 20036986,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5665568,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11075713,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 656407,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 95927,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 99,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;9",
        "after": [
          {
            "result": {
              "duration": 20108,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4456,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18820501,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1220730,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21099207,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT;2,2,LIGHT;3,3,LIGHT;4,4,LIGHT;5,5,LIGHT;6,6,LIGHT;7,7,LIGHT"
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 626304,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.d: Invalid content was found starting with element \u0027ns2:RelayMap\u0027. No child element is expected at this point.;cvc-maxInclusive-valid: Value \u00277\u0027 is not facet-valid with respect to maxInclusive \u00276\u0027 for type \u0027#AnonType_IndexRelayMap\u0027.;cvc-type.3.1.3: The value \u00277\u0027 of element \u0027ns2:Index\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.574Z",
        "before": [
          {
            "result": {
              "duration": 22639579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6003355,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11310720,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 563185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 252577,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 100,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;10",
        "after": [
          {
            "result": {
              "duration": 20326,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5118,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4112,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15138219,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 859681,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14182307,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "256.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 516841,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-pattern-valid: Value \u0027256.20.30.40\u0027 is not facet-valid with respect to pattern \u0027((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\u0027 for type \u0027IPType\u0027.;cvc-type.3.1.3: The value \u0027256.20.30.40\u0027 of element \u0027ns1:OsgpIpAddress\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.653Z",
        "before": [
          {
            "result": {
              "duration": 17486208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5276604,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7829605,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 425291,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 76269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 101,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;11",
        "after": [
          {
            "result": {
              "duration": 16096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4529,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4505,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11328047,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 862214,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15873946,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30."
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 456056,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-pattern-valid: Value \u002710.20.30.\u0027 is not facet-valid with respect to pattern \u0027((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\u0027 for type \u0027IPType\u0027.;cvc-type.3.1.3: The value \u002710.20.30.\u0027 of element \u0027ns1:OsgpIpAddress\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.718Z",
        "before": [
          {
            "result": {
              "duration": 20012054,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4262729,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8810446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 438158,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 79489,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 102,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;12",
        "after": [
          {
            "result": {
              "duration": 17738,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5048,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13850566,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1310785,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13517562,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 425393,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u00270\u0027 is not facet-valid with respect to minInclusive \u00271\u0027 for type \u0027#AnonType_OsgpPortNumberConfiguration\u0027.;cvc-type.3.1.3: The value \u00270\u0027 of element \u0027ns1:OsgpPortNumber\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.786Z",
        "before": [
          {
            "result": {
              "duration": 17746514,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3923332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8987993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 727046,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 182928,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 103,
        "name": "Set configuration data with invalid data which result in validation errors",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data-which-result-in-validation-errors;;13",
        "after": [
          {
            "result": {
              "duration": 18436,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5053,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4620,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17683415,
              "status": "passed"
            },
            "line": 73,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 860509,
              "status": "passed"
            },
            "line": 76,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19356941,
              "status": "passed"
            },
            "line": 77,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "65536"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 510008,
              "status": "passed"
            },
            "line": 85,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-maxInclusive-valid: Value \u002765536\u0027 is not facet-valid with respect to maxInclusive \u002765535\u0027 for type \u0027#AnonType_OsgpPortNumberConfiguration\u0027.;cvc-type.3.1.3: The value \u002765536\u0027 of element \u0027ns1:OsgpPortNumber\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.860Z",
        "before": [
          {
            "result": {
              "duration": 21630979,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4456696,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9458000,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 572578,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 105101,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 126,
        "name": "Set configuration data with invalid data",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data;;2",
        "after": [
          {
            "result": {
              "duration": 19314,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4750,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4927,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14498991,
              "status": "passed"
            },
            "line": 107,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 749953,
              "status": "passed"
            },
            "line": 110,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23471820,
              "status": "passed"
            },
            "line": 111,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  "1"
                ]
              },
              {
                "cells": [
                  "DcMap",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1086465,
              "status": "passed"
            },
            "line": 117,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Code",
                  "401"
                ]
              },
              {
                "cells": [
                  "Message",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "Component",
                  "WS_CORE"
                ]
              },
              {
                "cells": [
                  "InnerException",
                  "org.opensmartgridplatform.domain.core.exceptions.ValidationException"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: Light type (e.g. relay, dali) must match configuration type (e.g. relay, dali).;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:33.943Z",
        "before": [
          {
            "result": {
              "duration": 16568324,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5349863,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10942146,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 427381,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 127,
        "name": "Set configuration data with invalid data",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data;;3",
        "after": [
          {
            "result": {
              "duration": 20481,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5420,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4081,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12209082,
              "status": "passed"
            },
            "line": 107,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 664464,
              "status": "passed"
            },
            "line": 110,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18208794,
              "status": "passed"
            },
            "line": 111,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000230,
              "status": "passed"
            },
            "line": 117,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Code",
                  "401"
                ]
              },
              {
                "cells": [
                  "Message",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "Component",
                  "WS_CORE"
                ]
              },
              {
                "cells": [
                  "InnerException",
                  "org.opensmartgridplatform.domain.core.exceptions.ValidationException"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: Light type (e.g. relay, dali) must match configuration type (e.g. relay, dali).;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:34.014Z",
        "before": [
          {
            "result": {
              "duration": 16010182,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5063554,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8269193,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 369570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 128,
        "name": "Set configuration data with invalid data",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data;;4",
        "after": [
          {
            "result": {
              "duration": 17675,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6462,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11891800,
              "status": "passed"
            },
            "line": 107,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 852946,
              "status": "passed"
            },
            "line": 110,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19108404,
              "status": "passed"
            },
            "line": 111,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,TARIFF"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1361723,
              "status": "passed"
            },
            "line": 117,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Code",
                  "401"
                ]
              },
              {
                "cells": [
                  "Message",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "Component",
                  "WS_CORE"
                ]
              },
              {
                "cells": [
                  "InnerException",
                  "org.opensmartgridplatform.domain.core.exceptions.ValidationException"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: Light type (e.g. relay, dali) must match configuration type (e.g. relay, dali).;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:34.082Z",
        "before": [
          {
            "result": {
              "duration": 35650925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5593039,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8650317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1004570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 203150,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 129,
        "name": "Set configuration data with invalid data",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;set-configuration-data-with-invalid-data;;5",
        "after": [
          {
            "result": {
              "duration": 22761,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4768,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5538,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29970214,
              "status": "passed"
            },
            "line": 107,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 875628,
              "status": "passed"
            },
            "line": 110,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18957062,
              "status": "passed"
            },
            "line": 111,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,TARIFF_REVERSED"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1364896,
              "status": "passed"
            },
            "line": 117,
            "name": "the set configuration async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Code",
                  "401"
                ]
              },
              {
                "cells": [
                  "Message",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "Component",
                  "WS_CORE"
                ]
              },
              {
                "cells": [
                  "InnerException",
                  "org.opensmartgridplatform.domain.core.exceptions.ValidationException"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: Light type (e.g. relay, dali) must match configuration type (e.g. relay, dali).;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:34.190Z",
        "before": [
          {
            "result": {
              "duration": 19363805,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4456653,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 24304470,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 438011,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 71630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 158,
        "name": "Failed set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;failed-set-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 33399,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5288,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4371,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12214852,
              "status": "passed"
            },
            "line": 133,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 788650,
              "status": "passed"
            },
            "line": 136,
            "name": "the device returns a set configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "FAILURE"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99064503,
              "status": "passed"
            },
            "line": 143,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 544069,
              "status": "passed"
            },
            "line": 145,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001104011,
              "status": "passed"
            },
            "line": 147,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18342760,
              "status": "passed"
            },
            "line": 153,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\" contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports failure"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:16:35.378Z",
        "before": [
          {
            "result": {
              "duration": 21873791,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4854774,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9272877,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1104895,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 88063,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 187,
        "name": "Rejected set configuration of a device",
        "description": "",
        "id": "coreconfigurationmanagement-setconfiguration;rejected-set-configuration-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 33403,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5863,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4551,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13847232,
              "status": "passed"
            },
            "line": 162,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 880195,
              "status": "passed"
            },
            "line": 165,
            "name": "the device returns a set configuration status over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "REJECTED"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "ETHERNET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101005627,
              "status": "passed"
            },
            "line": 172,
            "name": "receiving a set configuration request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.receivingASetConfigurationRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 480877,
              "status": "passed"
            },
            "line": 174,
            "name": "the set configuration async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.theSetConfigurationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000957238,
              "status": "passed"
            },
            "line": 176,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  "1,1,LIGHT"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20977639,
              "status": "passed"
            },
            "line": 182,
            "name": "the platform buffers a set configuration response message for device \"TEST1024000000001\" contains soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.configurationmanagement.SetConfigurationSteps.thePlatformBufferesASetConfigurationResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports rejected"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreConfigurationManagement"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@SetConfigurationRejected"
          }
        ]
      }
    ],
    "name": "CoreConfigurationManagement SetConfiguration",
    "description": "  As a ...\n  I want to ...\n  In order to ...",
    "id": "coreconfigurationmanagement-setconfiguration",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/ConfigurationManagement/SetConfiguration.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreConfigurationManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:16:36.562Z",
        "before": [
          {
            "result": {
              "duration": 24298291,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7310317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9169143,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 473278,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 63019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 35,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 34137,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3919,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15049886,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 787352,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109494838,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 306128,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000681967,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30150044573,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:17:07.892Z",
        "before": [
          {
            "result": {
              "duration": 27527753,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5264350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8169510,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 493701,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57676,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 36,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;3",
        "after": [
          {
            "result": {
              "duration": 35757,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4782,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3601,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11714278,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1165758,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87428147,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 389501,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000803454,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30486762555,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:17:39.529Z",
        "before": [
          {
            "result": {
              "duration": 20281765,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5754383,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9757433,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 554424,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 53746,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 37,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;4",
        "after": [
          {
            "result": {
              "duration": 38850,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5508,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4414,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12347471,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 929135,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94184672,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 293370,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000768935,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30477616692,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:18:11.157Z",
        "before": [
          {
            "result": {
              "duration": 18988415,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3892673,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7916942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 560475,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 95944,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;5",
        "after": [
          {
            "result": {
              "duration": 51589,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7411,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15388886,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 971135,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85982556,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 268061,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000643569,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30455068386,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:18:42.753Z",
        "before": [
          {
            "result": {
              "duration": 27614341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6001766,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8058700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 452528,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54928,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;6",
        "after": [
          {
            "result": {
              "duration": 34951,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6553,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3948,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11081881,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 815962,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86068444,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 303347,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000713524,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30393646125,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:19:14.295Z",
        "before": [
          {
            "result": {
              "duration": 21843037,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5575332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10844122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 403547,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;7",
        "after": [
          {
            "result": {
              "duration": 36258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6470,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4643,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12095062,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 924222,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95652062,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 413871,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000821563,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30412673947,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:19:45.862Z",
        "before": [
          {
            "result": {
              "duration": 22275526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4751809,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9783642,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 497747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;8",
        "after": [
          {
            "result": {
              "duration": 33711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4167,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3592,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11841775,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 948199,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98676441,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 464734,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000736846,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30385923480,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:20:17.405Z",
        "before": [
          {
            "result": {
              "duration": 23309083,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4820546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10334747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 532182,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47584,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;9",
        "after": [
          {
            "result": {
              "duration": 95526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8014,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5506,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11738733,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 898871,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165287745,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 285253,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000870930,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30386298518,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:20:49.017Z",
        "before": [
          {
            "result": {
              "duration": 20381924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4584542,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8217435,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 412260,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57320,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Get status of a device",
        "description": "",
        "id": "coredeviceinstallation-get-status;get-status-of-a-device;;10",
        "after": [
          {
            "result": {
              "duration": 53200,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4612,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6620,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10980518,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 962938,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89896739,
              "status": "passed"
            },
            "line": 22,
            "name": "receiving a device installation get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.receivingADeviceInstallationGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 411969,
              "status": "passed"
            },
            "line": 24,
            "name": "the device installation get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.theDeviceInstallationGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000889317,
              "status": "passed"
            },
            "line": 26,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(GetStatusSteps.java:89)\n\tat ✽.the platform buffers a device installation get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature:27)\n",
              "duration": 30383352467,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a device installation get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 82
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.GetStatusSteps.thePlatformBuffersADeviceInstallationGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "CoreDeviceInstallation Get Status",
    "description": "  As a ...\n  I want to be able to perform DeviceInstallation operations on a device\n  In order to ...",
    "id": "coredeviceinstallation-get-status",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/GetStatus.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceInstallation",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:21:20.544Z",
        "before": [
          {
            "result": {
              "duration": 29813011,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5035041,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10119466,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 585199,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51437,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 28,
        "name": "Start an ssld device",
        "description": "",
        "id": "coredeviceinstallation-device-starting;start-an-ssld-device;;2",
        "after": [
          {
            "result": {
              "duration": 36869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4135,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4025,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11309018,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 937786,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a start device response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 44
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAStartDeviceResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86146595,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a start device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.receivingAStartDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 309772,
              "status": "passed"
            },
            "line": 20,
            "name": "the start device async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.theStartDeviceAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000886900,
              "status": "passed"
            },
            "line": 22,
            "name": "a start device \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 16
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aStartDeviceOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.thePlatformBuffersAStartDeviceResponseMessageForDevice(StartDeviceSteps.java:65)\n\tat ✽.the platform buffers a start device response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/StartDevice.feature:23)\n",
              "duration": 30290817302,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a start device response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.thePlatformBuffersAStartDeviceResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:21:51.989Z",
        "before": [
          {
            "result": {
              "duration": 31672667,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 17275502,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10209431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1395554,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 42,
        "name": "Start device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-starting;start-device-with-incorrect-parameters;;2",
        "after": [
          {
            "result": {
              "duration": 16616,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4878,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4088,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9862661,
              "status": "passed"
            },
            "line": 31,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION-01"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 96236148,
              "status": "passed"
            },
            "line": 35,
            "name": "receiving a start device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.receivingAStartDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 692405,
              "status": "passed"
            },
            "line": 37,
            "name": "the start device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.theStartDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:21:52.161Z",
        "before": [
          {
            "result": {
              "duration": 24093178,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4161506,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5119183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 409156,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 43,
        "name": "Start device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-starting;start-device-with-incorrect-parameters;;3",
        "after": [
          {
            "result": {
              "duration": 16924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4884,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4210,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11333267,
              "status": "passed"
            },
            "line": 31,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_UNKNOWN"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26671845,
              "status": "passed"
            },
            "line": 35,
            "name": "receiving a start device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.receivingAStartDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 597009,
              "status": "passed"
            },
            "line": 37,
            "name": "the start device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.theStartDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:21:52.238Z",
        "before": [
          {
            "result": {
              "duration": 21746739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4367910,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5752921,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 415195,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 44,
        "name": "Start device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-starting;start-device-with-incorrect-parameters;;4",
        "after": [
          {
            "result": {
              "duration": 19112,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5026,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4085,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8649279,
              "status": "passed"
            },
            "line": 31,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_EMPTY"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28825122,
              "status": "passed"
            },
            "line": 35,
            "name": "receiving a start device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.receivingAStartDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 719586,
              "status": "passed"
            },
            "line": 37,
            "name": "the start device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.theStartDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:21:52.313Z",
        "before": [
          {
            "result": {
              "duration": 22372831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4995003,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7020812,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 459226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 45,
        "name": "Start device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-starting;start-device-with-incorrect-parameters;;5",
        "after": [
          {
            "result": {
              "duration": 19923,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3982,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17716510,
              "status": "passed"
            },
            "line": 31,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_SPACES"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30990547,
              "status": "passed"
            },
            "line": 35,
            "name": "receiving a start device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.receivingAStartDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 651077,
              "status": "passed"
            },
            "line": 37,
            "name": "the start device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StartDeviceSteps.theStartDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      }
    ],
    "name": "CoreDeviceInstallation Device Starting",
    "description": "  As a ...\n  I want to be able to perform DeviceInstallation operations on a device\n  In order to ...",
    "id": "coredeviceinstallation-device-starting",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/StartDevice.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceInstallation",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:21:52.403Z",
        "before": [
          {
            "result": {
              "duration": 22563206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4355608,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5370096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 560214,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47083,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 27,
        "name": "Stop an ssld oslp Device",
        "description": "",
        "id": "coredeviceinstallation-device-stopping;stop-an-ssld-oslp-device;;2",
        "after": [
          {
            "result": {
              "duration": 52594,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13134101,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 887015,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a stop device response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 43
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 53
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAStopDeviceResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110089511,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a stop device test request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.receivingAStopDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 731054,
              "status": "passed"
            },
            "line": 19,
            "name": "the stop device async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.theStopDeviceAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000687874,
              "status": "passed"
            },
            "line": 21,
            "name": "a stop device \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 15
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 55
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aStopDeviceOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.thePlatformBuffersAStopDeviceResponseMessageForDevice(StopDeviceSteps.java:96)\n\tat ✽.the platform buffers a stop device response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/StopDevice.feature:22)\n",
              "duration": 30120515134,
              "status": "failed"
            },
            "line": 22,
            "name": "the platform buffers a stop device response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "\"TEST1024000000001\"",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.thePlatformBuffersAStopDeviceResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:23.690Z",
        "before": [
          {
            "result": {
              "duration": 24495035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5659755,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 17559598,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 602058,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 41,
        "name": "Stop device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-stopping;stop-device-with-incorrect-parameters;;2",
        "after": [
          {
            "result": {
              "duration": 58177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10708,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9528323,
              "status": "passed"
            },
            "line": 30,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION-01"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35512463,
              "status": "passed"
            },
            "line": 34,
            "name": "receiving a stop device test request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.receivingAStopDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1340387,
              "status": "passed"
            },
            "line": 36,
            "name": "the stop device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.theStopDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:23.792Z",
        "before": [
          {
            "result": {
              "duration": 20362193,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5747394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10026223,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 442708,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 42,
        "name": "Stop device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-stopping;stop-device-with-incorrect-parameters;;3",
        "after": [
          {
            "result": {
              "duration": 20656,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5345,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4527,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12729240,
              "status": "passed"
            },
            "line": 30,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_UNKNOWN"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31999321,
              "status": "passed"
            },
            "line": 34,
            "name": "receiving a stop device test request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.receivingAStopDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 648029,
              "status": "passed"
            },
            "line": 36,
            "name": "the stop device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.theStopDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:23.879Z",
        "before": [
          {
            "result": {
              "duration": 18052098,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5870857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9551924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 438012,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 43,
        "name": "Stop device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-stopping;stop-device-with-incorrect-parameters;;4",
        "after": [
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4214,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10580275,
              "status": "passed"
            },
            "line": 30,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_EMPTY"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27416748,
              "status": "passed"
            },
            "line": 34,
            "name": "receiving a stop device test request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.receivingAStopDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 618264,
              "status": "passed"
            },
            "line": 36,
            "name": "the stop device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.theStopDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:23.956Z",
        "before": [
          {
            "result": {
              "duration": 16125651,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3887860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5620631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 365376,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 44,
        "name": "Stop device with incorrect parameters",
        "description": "",
        "id": "coredeviceinstallation-device-stopping;stop-device-with-incorrect-parameters;;5",
        "after": [
          {
            "result": {
              "duration": 24258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7736,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6732,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8483852,
              "status": "passed"
            },
            "line": 30,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "ORGANIZATION_ID_SPACES"
                ]
              },
              {
                "cells": [
                  "Status",
                  "unknown"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25346347,
              "status": "passed"
            },
            "line": 34,
            "name": "receiving a stop device test request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.receivingAStopDeviceRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1098855,
              "status": "passed"
            },
            "line": 36,
            "name": "the stop device response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.deviceinstallation.StopDeviceSteps.theStopDeviceResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNAUTHORIZED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceInstallation"
          }
        ]
      }
    ],
    "name": "CoreDeviceInstallation Device Stopping",
    "description": "  As a ...\n  I want to be able to perform DeviceInstallation operations on a device\n  In order to ...",
    "id": "coredeviceinstallation-device-stopping",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceInstallation/StopDevice.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceInstallation",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:22:24.023Z",
        "before": [
          {
            "result": {
              "duration": 18951034,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4150840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8110828,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 422243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;2",
        "after": [
          {
            "result": {
              "duration": 33581,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5699,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6908,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13013037,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 123466968,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 561908274,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:24.761Z",
        "before": [
          {
            "result": {
              "duration": 16293427,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4164428,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 30082303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 612060,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 24,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;3",
        "after": [
          {
            "result": {
              "duration": 32335,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7137,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4174,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12701472,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98568396,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "READY_FOR_USE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 552294955,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "READY_FOR_USE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:25.480Z",
        "before": [
          {
            "result": {
              "duration": 18253796,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5380982,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10428192,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 671295,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 25,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;4",
        "after": [
          {
            "result": {
              "duration": 31727,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14678563,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 111476835,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 549636761,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:26.196Z",
        "before": [
          {
            "result": {
              "duration": 18141241,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3895179,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8723428,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 538985,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 26,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;5",
        "after": [
          {
            "result": {
              "duration": 31289,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4944,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4068,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13599943,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 101711524,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "IN_USE"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 552439531,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "IN_USE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:26.899Z",
        "before": [
          {
            "result": {
              "duration": 16535280,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4129214,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10283622,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 562085,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 27,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;6",
        "after": [
          {
            "result": {
              "duration": 30629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5162,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4278,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14327016,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 117700140,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "RETURNED_TO_INVENTORY"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 551447353,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "RETURNED_TO_INVENTORY"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:27.620Z",
        "before": [
          {
            "result": {
              "duration": 25467774,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6242589,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9984937,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 459225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 28,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;7",
        "after": [
          {
            "result": {
              "duration": 70747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9606,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13219841,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 107448225,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "UNDER_TEST"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 569948058,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "UNDER_TEST"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:22:28.358Z",
        "before": [
          {
            "result": {
              "duration": 17322886,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5334380,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8243570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 479394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 29,
        "name": "Set ssld device status",
        "description": "",
        "id": "core-operations--devicelifecycle;set-ssld-device-status;;8",
        "after": [
          {
            "result": {
              "duration": 28952,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4560,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4276,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14391417,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 108712163,
              "status": "passed"
            },
            "line": 14,
            "name": "a SetDeviceLifecycleStatus request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.aSetDeviceLifecycleStatusRequestIsReceived(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 548466333,
              "status": "passed"
            },
            "line": 17,
            "name": "the device lifecycle status in the database is",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.DeviceLifecycleStatusSteps.theDeviceLifecycleStatusInTheDatabaseIs(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          }
        ]
      }
    ],
    "name": "Core Operations, DeviceLifeCycle",
    "description": "  As a grid operator\n  I want to distinguish the various statuses of a device\n  So I know what I can or cannot do with the device",
    "id": "core-operations--devicelifecycle",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/DeviceLifeCycle.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:22:29.066Z",
        "before": [
          {
            "result": {
              "duration": 15901935,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4120278,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8585271,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 755203,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 67063,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 28,
        "name": "Set event notifications",
        "description": "",
        "id": "coredevicemanagement-set-event-notifications;set-event-notifications;;2",
        "after": [
          {
            "result": {
              "duration": 53660,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11680,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4025,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12396893,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 775796,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set event notification \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 45
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 55
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetEventNotificationOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91410122,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set event notification message request on OSGP",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.receivingASetEventNotificationMessageRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 569673,
              "status": "passed"
            },
            "line": 20,
            "name": "the set event notification async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.theSetEventNotificationAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000675368,
              "status": "passed"
            },
            "line": 22,
            "name": "a set event notification \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 26
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetEventNotificationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(SetEventNotificationsSteps.java:109)\n\tat ✽.the platform buffers a set event notification response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/SetEventNotifications.feature:23)\n",
              "duration": 30079712815,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a set event notification response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:23:00.289Z",
        "before": [
          {
            "result": {
              "duration": 22845518,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6176962,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11036723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 574320,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 70105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 29,
        "name": "Set event notifications",
        "description": "",
        "id": "coredevicemanagement-set-event-notifications;set-event-notifications;;3",
        "after": [
          {
            "result": {
              "duration": 42509,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14719074,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 779596,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set event notification \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 45
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 55
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetEventNotificationOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98648503,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set event notification message request on OSGP",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.receivingASetEventNotificationMessageRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "TARIFF_EVENTS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 681206,
              "status": "passed"
            },
            "line": 20,
            "name": "the set event notification async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.theSetEventNotificationAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001335298,
              "status": "passed"
            },
            "line": 22,
            "name": "a set event notification \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 26
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetEventNotificationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(SetEventNotificationsSteps.java:109)\n\tat ✽.the platform buffers a set event notification response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/SetEventNotifications.feature:23)\n",
              "duration": 30102559828,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a set event notification response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:23:31.556Z",
        "before": [
          {
            "result": {
              "duration": 28213827,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5903911,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9135052,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 527159,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 108565,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 30,
        "name": "Set event notifications",
        "description": "",
        "id": "coredevicemanagement-set-event-notifications;set-event-notifications;;4",
        "after": [
          {
            "result": {
              "duration": 43229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15364,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4181,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16592041,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1591341,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set event notification \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 45
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 55
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetEventNotificationOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 225830040,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set event notification message request on OSGP",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.receivingASetEventNotificationMessageRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "COMM_EVENTS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 641497,
              "status": "passed"
            },
            "line": 20,
            "name": "the set event notification async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.theSetEventNotificationAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000883953,
              "status": "passed"
            },
            "line": 22,
            "name": "a set event notification \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 26
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetEventNotificationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(SetEventNotificationsSteps.java:109)\n\tat ✽.the platform buffers a set event notification response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/SetEventNotifications.feature:23)\n",
              "duration": 30028647464,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a set event notification response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:24:02.881Z",
        "before": [
          {
            "result": {
              "duration": 23067959,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5545084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9549081,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1108441,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 305345,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 31,
        "name": "Set event notifications",
        "description": "",
        "id": "coredevicemanagement-set-event-notifications;set-event-notifications;;5",
        "after": [
          {
            "result": {
              "duration": 331068,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4171,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14487488,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1131595,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set event notification \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 45
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 55
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetEventNotificationOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97139848,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set event notification message request on OSGP",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.receivingASetEventNotificationMessageRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS, TARIFF_EVENTS"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 502476,
              "status": "passed"
            },
            "line": 20,
            "name": "the set event notification async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.theSetEventNotificationAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001407508,
              "status": "passed"
            },
            "line": 22,
            "name": "a set event notification \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 26
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetEventNotificationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(SetEventNotificationsSteps.java:109)\n\tat ✽.the platform buffers a set event notification response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/SetEventNotifications.feature:23)\n",
              "duration": 30024593466,
              "status": "failed"
            },
            "line": 23,
            "name": "the platform buffers a set event notification response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.SetEventNotificationsSteps.thePlatformBuffersASetEventNotificationResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "CoreDeviceManagement Set Event Notifications",
    "description": "  As a ...\n  I want to be able to perform DeviceManagement operations on a device\n  So that ...",
    "id": "coredevicemanagement-set-event-notifications",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/SetEventNotifications.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:24:34.069Z",
        "before": [
          {
            "result": {
              "duration": 24753629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5255823,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13098490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 558226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 27,
        "name": "Successfully update device CDMA settings",
        "description": "",
        "id": "osgp---core---update-device-cdma-settings;successfully-update-device-cdma-settings;;2",
        "after": [
          {
            "result": {
              "duration": 34154,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5154,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4472,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17836543,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110502589,
              "status": "passed"
            },
            "line": 15,
            "name": "an update device CDMA settings request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.receiveAnUpdateDeviceCdmaSettingsRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MastSegment",
                  "575-1"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "1"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 547360633,
              "status": "passed"
            },
            "line": 19,
            "name": "the platform should buffer an update device CDMA settings response message",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.thePlatformShouldBufferAnUpdateDeviceCdmaSettingsResponseMessage(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4882073,
              "status": "passed"
            },
            "line": 21,
            "name": "the device CDMA settings should be stored in the platform",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.theDeviceCdmaSettingsShouldBeSet(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MastSegment",
                  "575-1"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@UpdateDeviceCdmaSettings"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:24:34.803Z",
        "before": [
          {
            "result": {
              "duration": 20325347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4622453,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11654877,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 659731,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 28,
        "name": "Successfully update device CDMA settings",
        "description": "",
        "id": "osgp---core---update-device-cdma-settings;successfully-update-device-cdma-settings;;3",
        "after": [
          {
            "result": {
              "duration": 33768,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13654857,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98015558,
              "status": "passed"
            },
            "line": 15,
            "name": "an update device CDMA settings request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.receiveAnUpdateDeviceCdmaSettingsRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MastSegment",
                  "575-2"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 537014646,
              "status": "passed"
            },
            "line": 19,
            "name": "the platform should buffer an update device CDMA settings response message",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.thePlatformShouldBufferAnUpdateDeviceCdmaSettingsResponseMessage(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4478485,
              "status": "passed"
            },
            "line": 21,
            "name": "the device CDMA settings should be stored in the platform",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.theDeviceCdmaSettingsShouldBeSet(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MastSegment",
                  "575-2"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "null"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@UpdateDeviceCdmaSettings"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:24:35.501Z",
        "before": [
          {
            "result": {
              "duration": 22315782,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5038001,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12106555,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 817093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 29,
        "name": "Successfully update device CDMA settings",
        "description": "",
        "id": "osgp---core---update-device-cdma-settings;successfully-update-device-cdma-settings;;4",
        "after": [
          {
            "result": {
              "duration": 30228,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5364,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5357,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16295303,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 93372909,
              "status": "passed"
            },
            "line": 15,
            "name": "an update device CDMA settings request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.receiveAnUpdateDeviceCdmaSettingsRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MastSegment",
                  "null"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "2"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 540758037,
              "status": "passed"
            },
            "line": 19,
            "name": "the platform should buffer an update device CDMA settings response message",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.thePlatformShouldBufferAnUpdateDeviceCdmaSettingsResponseMessage(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4178852,
              "status": "passed"
            },
            "line": 21,
            "name": "the device CDMA settings should be stored in the platform",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.theDeviceCdmaSettingsShouldBeSet(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MastSegment",
                  "null"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@UpdateDeviceCdmaSettings"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:24:36.201Z",
        "before": [
          {
            "result": {
              "duration": 19045092,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5647656,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7454384,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 448787,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 30,
        "name": "Successfully update device CDMA settings",
        "description": "",
        "id": "osgp---core---update-device-cdma-settings;successfully-update-device-cdma-settings;;5",
        "after": [
          {
            "result": {
              "duration": 23488,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4918,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14668624,
              "status": "passed"
            },
            "line": 12,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 103497718,
              "status": "passed"
            },
            "line": 15,
            "name": "an update device CDMA settings request is received",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.receiveAnUpdateDeviceCdmaSettingsRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MastSegment",
                  "null"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "null"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 542560029,
              "status": "passed"
            },
            "line": 19,
            "name": "the platform should buffer an update device CDMA settings response message",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.thePlatformShouldBufferAnUpdateDeviceCdmaSettingsResponseMessage(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3659111,
              "status": "passed"
            },
            "line": 21,
            "name": "the device CDMA settings should be stored in the platform",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.UpdateDeviceCdmaSettingsSteps.theDeviceCdmaSettingsShouldBeSet(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MastSegment",
                  "null"
                ]
              },
              {
                "cells": [
                  "BatchNumber",
                  "null"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@CoreDeviceManagement"
          },
          {
            "name": "@UpdateDeviceCdmaSettings"
          }
        ]
      }
    ],
    "name": "OSGP - Core - Update Device CDMA Settings",
    "description": "  As a grid operator\n  I want to be able to spread out the communication with devices using the CDMA network in batches\n  So that I can prevent connection errors due to CDMA network overload",
    "id": "osgp---core---update-device-cdma-settings",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/DeviceManagement/UpdateDeviceCdmaSettings.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@CoreDeviceManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@UpdateDeviceCdmaSettings",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 49
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:24:36.906Z",
        "before": [
          {
            "result": {
              "duration": 20330037,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4755539,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8551298,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 474873,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 61841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Get firmware version, version returned by device is not in history",
        "description": "",
        "id": "firmwaremanagement-get-firmware;get-firmware-version--version-returned-by-device-is-not-in-history;;2",
        "after": [
          {
            "result": {
              "duration": 33901,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 23993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5058,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11485197,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39680191,
              "status": "passed"
            },
            "line": 19,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "R01"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 817745,
              "status": "passed"
            },
            "line": 27,
            "name": "the device returns firmware version \"R01\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "R01",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117470614,
              "status": "passed"
            },
            "line": 28,
            "name": "receiving a get firmware version request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 582309,
              "status": "passed"
            },
            "line": 30,
            "name": "the get firmware version async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.theGetFirmwareVersionResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000711445,
              "status": "passed"
            },
            "line": 32,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.thePlatformBuffersAGetFirmwareVersionResponseMessage(GetFirmwareVersionSteps.java:107)\n\tat ✽.the platform buffers a get firmware version response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature:33)\n",
              "duration": 30012691397,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a get firmware version response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.thePlatformBuffersAGetFirmwareVersionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "R01"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleType",
                  "FUNCTIONAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 184332,
              "status": "skipped"
            },
            "line": 37,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:25:08.133Z",
        "before": [
          {
            "result": {
              "duration": 26393941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4520946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11022826,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 567283,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64282,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Get firmware version, version returned by device is not in history",
        "description": "",
        "id": "firmwaremanagement-get-firmware;get-firmware-version--version-returned-by-device-is-not-in-history;;3",
        "after": [
          {
            "result": {
              "duration": 32353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4110,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12830094,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17226250,
              "status": "passed"
            },
            "line": 19,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "R02"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 989858,
              "status": "passed"
            },
            "line": 27,
            "name": "the device returns firmware version \"R02\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "R02",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95603221,
              "status": "passed"
            },
            "line": 28,
            "name": "receiving a get firmware version request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 701314,
              "status": "passed"
            },
            "line": 30,
            "name": "the get firmware version async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.theGetFirmwareVersionResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001250334,
              "status": "passed"
            },
            "line": 32,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.thePlatformBuffersAGetFirmwareVersionResponseMessage(GetFirmwareVersionSteps.java:107)\n\tat ✽.the platform buffers a get firmware version response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature:33)\n",
              "duration": 30427056496,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a get firmware version response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.thePlatformBuffersAGetFirmwareVersionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "R02"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleType",
                  "FUNCTIONAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 181035,
              "status": "skipped"
            },
            "line": 37,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:25:39.739Z",
        "before": [
          {
            "result": {
              "duration": 24339025,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3866391,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9799861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 556711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 71484,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Get firmware version, version returned by device is not in history",
        "description": "",
        "id": "firmwaremanagement-get-firmware;get-firmware-version--version-returned-by-device-is-not-in-history;;4",
        "after": [
          {
            "result": {
              "duration": 27804,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14449616,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12072409,
              "status": "passed"
            },
            "line": 19,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "0123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1177873,
              "status": "passed"
            },
            "line": 27,
            "name": "the device returns firmware version \"0123\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "0123",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 49
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.springframework.ws.client.WebServiceTransportException: Service Unavailable [503]\n\tat org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:666)\n\tat org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:588)\n\tat org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:391)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:385)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:375)\n\tat org.opensmartgridplatform.cucumber.platform.common.support.ws.core.CoreFirmwareManagementClient.getFirmwareVersion(CoreFirmwareManagementClient.java:48)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(GetFirmwareVersionSteps.java:58)\n\tat ✽.receiving a get firmware version request(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature:28)\n",
              "duration": 9085034,
              "status": "failed"
            },
            "line": 28,
            "name": "receiving a get firmware version request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138674,
              "status": "skipped"
            },
            "line": 30,
            "name": "the get firmware version async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.theGetFirmwareVersionResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96005,
              "status": "skipped"
            },
            "line": 32,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146896,
              "status": "skipped"
            },
            "line": 33,
            "name": "the platform buffers a get firmware version response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.thePlatformBuffersAGetFirmwareVersionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "0123"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleType",
                  "FUNCTIONAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 128019,
              "status": "skipped"
            },
            "line": 37,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:25:39.821Z",
        "before": [
          {
            "result": {
              "duration": 21288226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4333825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9316685,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 662009,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 47,
        "name": "Get the firmware version for an unknown device",
        "description": "",
        "id": "firmwaremanagement-get-firmware;get-the-firmware-version-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 34159,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6228,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4072,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "org.springframework.ws.client.WebServiceTransportException: Service Unavailable [503]\n\tat org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:666)\n\tat org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:588)\n\tat org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:391)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:385)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:375)\n\tat org.opensmartgridplatform.cucumber.platform.common.support.ws.core.CoreFirmwareManagementClient.getFirmwareVersion(CoreFirmwareManagementClient.java:48)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(GetFirmwareVersionSteps.java:58)\n\tat ✽.receiving a get firmware version request(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature:48)\n",
              "duration": 1055990025,
              "status": "failed"
            },
            "line": 48,
            "name": "receiving a get firmware version request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 174525,
              "status": "skipped"
            },
            "line": 50,
            "name": "the get firmware version response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.theGetFirmwareVersionResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:25:40.917Z",
        "before": [
          {
            "result": {
              "duration": 24402218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4337595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8331692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1000059,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 54,
        "name": "Get the firmware version for an unregistered device",
        "description": "",
        "id": "firmwaremanagement-get-firmware;get-the-firmware-version-for-an-unregistered-device",
        "after": [
          {
            "result": {
              "duration": 34071,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4345,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15813543,
              "status": "passed"
            },
            "line": 55,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.springframework.ws.client.WebServiceTransportException: Service Unavailable [503]\n\tat org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:666)\n\tat org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:588)\n\tat org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:391)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:385)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:375)\n\tat org.opensmartgridplatform.cucumber.platform.common.support.ws.core.CoreFirmwareManagementClient.getFirmwareVersion(CoreFirmwareManagementClient.java:48)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(GetFirmwareVersionSteps.java:58)\n\tat ✽.receiving a get firmware version request(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature:58)\n",
              "duration": 1070649886,
              "status": "failed"
            },
            "line": 58,
            "name": "receiving a get firmware version request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.receivingAGetFirmwareVersionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 156498,
              "status": "skipped"
            },
            "line": 60,
            "name": "the get firmware version response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.firmwaremanagement.GetFirmwareVersionSteps.theGetFirmwareVersionResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "Message",
                  "UNREGISTERED_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          }
        ]
      }
    ],
    "name": "FirmwareManagement get firmware",
    "description": "  As OSGP \n  I want to manage the firmware of a device\n  In order to ...",
    "id": "firmwaremanagement-get-firmware",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/GetFirmware.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@FirmwareManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:25:42.050Z",
        "before": [
          {
            "result": {
              "duration": 20349100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3988165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9243603,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 564216,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64766,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 61,
        "name": "Get firmware version, because a pending firmware update record exists when an SSLD registers",
        "description": "",
        "id": "firmwaremanagement-pending-firmware-update;get-firmware-version--because-a-pending-firmware-update-record-exists-when-an-ssld-registers;;2",
        "after": [
          {
            "result": {
              "duration": 35349,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5251,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5118539,
              "status": "passed"
            },
            "line": 13,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Test Organization"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON;PUBLIC_LIGHTING;TARIFF_SWITCHING"
                ]
              },
              {
                "cells": [
                  "Prefix",
                  "TOR"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12153844,
              "status": "passed"
            },
            "line": 18,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10401410,
              "status": "passed"
            },
            "line": 23,
            "name": "a device authorization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceAuthorizationSteps.aDeviceAuthorization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13408792,
              "status": "passed"
            },
            "line": 27,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "R01"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 658303,
              "status": "passed"
            },
            "line": 35,
            "name": "the device returns firmware version \"R01\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "R01",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 231268,
              "status": "passed"
            },
            "line": 36,
            "name": "the device returns firmware version \"R01\" over \"OSLP ELSTER\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "R01",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 77
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5304249,
              "status": "passed"
            },
            "line": 37,
            "name": "a pending firmware update record for an ssld",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aPendingFirmwareUpdateRecordForAnSsld(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "FUNCTIONAL"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "R01"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4335964,
              "status": "passed"
            },
            "line": 42,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/PendingFirmwareUpdate.feature:47)\n",
              "duration": 30030837248,
              "status": "failed"
            },
            "line": 47,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 180614,
              "status": "skipped"
            },
            "line": 49,
            "name": "the device sends a confirm register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAConfirmRegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 144034,
              "status": "skipped"
            },
            "line": 52,
            "name": "the confirm register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theConfirmRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97528,
              "status": "skipped"
            },
            "line": 54,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024010101010\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024010101010",
                  "offset": 64
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 99
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToSpecificDevice(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124027,
              "status": "skipped"
            },
            "line": 55,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@PendingFirmwareUpdate"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:26:12.179Z",
        "before": [
          {
            "result": {
              "duration": 21402638,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4214036,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11995010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 531831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 78941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 62,
        "name": "Get firmware version, because a pending firmware update record exists when an SSLD registers",
        "description": "",
        "id": "firmwaremanagement-pending-firmware-update;get-firmware-version--because-a-pending-firmware-update-record-exists-when-an-ssld-registers;;3",
        "after": [
          {
            "result": {
              "duration": 31934,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8245,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7501,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5912701,
              "status": "passed"
            },
            "line": 13,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Test Organization"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON;PUBLIC_LIGHTING;TARIFF_SWITCHING"
                ]
              },
              {
                "cells": [
                  "Prefix",
                  "TOR"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15845751,
              "status": "passed"
            },
            "line": 18,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10872470,
              "status": "passed"
            },
            "line": 23,
            "name": "a device authorization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceAuthorizationSteps.aDeviceAuthorization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16326902,
              "status": "passed"
            },
            "line": 27,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "R02"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 738667,
              "status": "passed"
            },
            "line": 35,
            "name": "the device returns firmware version \"R02\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "R02",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 241173,
              "status": "passed"
            },
            "line": 36,
            "name": "the device returns firmware version \"R02\" over \"OSLP ELSTER\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "R02",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 77
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5859715,
              "status": "passed"
            },
            "line": 37,
            "name": "a pending firmware update record for an ssld",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aPendingFirmwareUpdateRecordForAnSsld(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "FUNCTIONAL"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "R02"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2950397,
              "status": "passed"
            },
            "line": 42,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/PendingFirmwareUpdate.feature:47)\n",
              "duration": 30036132250,
              "status": "failed"
            },
            "line": 47,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 222121,
              "status": "skipped"
            },
            "line": 49,
            "name": "the device sends a confirm register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAConfirmRegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 120492,
              "status": "skipped"
            },
            "line": 52,
            "name": "the confirm register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theConfirmRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 164222,
              "status": "skipped"
            },
            "line": 54,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024010101010\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024010101010",
                  "offset": 64
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 99
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToSpecificDevice(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272337,
              "status": "skipped"
            },
            "line": 55,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@PendingFirmwareUpdate"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:26:42.322Z",
        "before": [
          {
            "result": {
              "duration": 18633551,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6613196,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10415319,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 429144,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 52786,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 63,
        "name": "Get firmware version, because a pending firmware update record exists when an SSLD registers",
        "description": "",
        "id": "firmwaremanagement-pending-firmware-update;get-firmware-version--because-a-pending-firmware-update-record-exists-when-an-ssld-registers;;4",
        "after": [
          {
            "result": {
              "duration": 33886,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4311,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3873124,
              "status": "passed"
            },
            "line": 13,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Name",
                  "Test Organization"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON;PUBLIC_LIGHTING;TARIFF_SWITCHING"
                ]
              },
              {
                "cells": [
                  "Prefix",
                  "TOR"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11796858,
              "status": "passed"
            },
            "line": 18,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6050381,
              "status": "passed"
            },
            "line": 23,
            "name": "a device authorization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceAuthorizationSteps.aDeviceAuthorization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "DeviceFunctionGroup",
                  "OWNER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9886649,
              "status": "passed"
            },
            "line": 27,
            "name": "a firmware",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aFirmware(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              },
              {
                "cells": [
                  "FirmwarePushToNewDevices",
                  "true"
                ]
              },
              {
                "cells": [
                  "ManufacturerName",
                  "Test"
                ]
              },
              {
                "cells": [
                  "ModelCode",
                  "Test"
                ]
              },
              {
                "cells": [
                  "Description",
                  ""
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "0123"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 811484,
              "status": "passed"
            },
            "line": 35,
            "name": "the device returns firmware version \"0123\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "0123",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 49
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 259110,
              "status": "passed"
            },
            "line": 36,
            "name": "the device returns firmware version \"0123\" over \"OSLP ELSTER\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "0123",
                  "offset": 37
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 49
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 78
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsFirmwareVersionOverOslp(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3149419,
              "status": "passed"
            },
            "line": 37,
            "name": "a pending firmware update record for an ssld",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.FirmwareFileSteps.aPendingFirmwareUpdateRecordForAnSsld(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareModuleVersionFunc",
                  "FUNCTIONAL"
                ]
              },
              {
                "cells": [
                  "FirmwareVersion",
                  "0123"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "TestOrganization"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2250281,
              "status": "passed"
            },
            "line": 42,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/PendingFirmwareUpdate.feature:47)\n",
              "duration": 30031926180,
              "status": "failed"
            },
            "line": 47,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 182590,
              "status": "skipped"
            },
            "line": 49,
            "name": "the device sends a confirm register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAConfirmRegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 114894,
              "status": "skipped"
            },
            "line": 52,
            "name": "the confirm register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theConfirmRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 99048,
              "status": "skipped"
            },
            "line": 54,
            "name": "a get firmware version \"OSLP ELSTER\" message is sent to device \"TEST1024010101010\" with deviceUid \"eHW0eEFzN0R2Okd5\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 24
                },
                {
                  "val": "TEST1024010101010",
                  "offset": 64
                },
                {
                  "val": "eHW0eEFzN0R2Okd5",
                  "offset": 99
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetFirmwareVersionOslpMessageIsSentToSpecificDevice(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126095,
              "status": "skipped"
            },
            "line": 55,
            "name": "the device firmware file exists",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceFirmwareFileSteps.theDeviceFirmwareFileExists(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024010101010"
                ]
              },
              {
                "cells": [
                  "FirmwareFilename",
                  "Firmware"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@PendingFirmwareUpdate"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "FirmwareManagement pending firmware update",
    "description": "  As grid operator\n  I want to have an updated firmware history upon registration of an SSLD after a firmware update\n  In order to improve the firmware management process",
    "id": "firmwaremanagement-pending-firmware-update",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/PendingFirmwareUpdate.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@FirmwareManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@PendingFirmwareUpdate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 47
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:27:12.435Z",
        "before": [
          {
            "result": {
              "duration": 22221215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4440041,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8741822,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 740274,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 86334,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 31,
        "name": "Update firmware",
        "description": "",
        "id": "firmwaremanagement-update-firmware;update-firmware;;2",
        "after": [
          {
            "result": {
              "duration": 60962,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4783,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4009,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12928006,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "Organization",
                  "TestOrganization"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1055048,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a update firmware \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 38
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 48
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAUpdateFirmwareOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 543984313,
              "status": "passed"
            },
            "line": 19,
            "name": "receiving an update firmware request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.firmwaremanagement.UpdateFirmwareSteps.receivingAnUpdateFirmwareRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "FirmwareIdentification",
                  "F01"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 703236,
              "status": "passed"
            },
            "line": 22,
            "name": "the update firmware async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.firmwaremanagement.UpdateFirmwareSteps.theUpdateFirmwareAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000894804,
              "status": "passed"
            },
            "line": 24,
            "name": "an update firmware \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 20
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.anUpdateFirmwareOslpMessageIsSentToTheDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FirmwareUrl",
                  "/firmware/F01"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(SetRebootSteps.java:111)\n\tat ✽.the platform buffers a set reboot response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/UpdateFirmware.feature:26)\n",
              "duration": 30182316123,
              "status": "failed"
            },
            "line": 26,
            "name": "the platform buffers a set reboot response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Publiclighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@UpdateFirmware"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@UpdateFirmwareDefault"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:27:44.222Z",
        "before": [
          {
            "result": {
              "duration": 24951196,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4780022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9258118,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 451707,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 34,
        "name": "Update the firmware for an unknown firmware",
        "description": "",
        "id": "firmwaremanagement-update-firmware;update-the-firmware-for-an-unknown-firmware",
        "after": [
          {
            "result": {
              "duration": 17746,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4684,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6356,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33357823,
              "status": "passed"
            },
            "line": 35,
            "name": "receiving an update firmware request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.firmwaremanagement.UpdateFirmwareSteps.receivingAnUpdateFirmwareRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "unknown"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 663499,
              "status": "passed"
            },
            "line": 37,
            "name": "the update firmware response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.firmwaremanagement.UpdateFirmwareSteps.theUpdateFirmwareResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Publiclighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@FirmwareManagement"
          },
          {
            "name": "@UpdateFirmware"
          },
          {
            "name": "@UpdateFirmwareUnknownFirmware"
          }
        ]
      }
    ],
    "name": "FirmwareManagement update firmware",
    "description": "  As OSGP \n  I want to manage the firmware of a device\n  In order to ...",
    "id": "firmwaremanagement-update-firmware",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-core/Firmwaremanagement/UpdateFirmware.feature",
    "tags": [
      {
        "name": "@Publiclighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@FirmwareManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@UpdateFirmware",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 47
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:27:44.302Z",
        "before": [
          {
            "result": {
              "duration": 21500837,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5556637,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7163912,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 711104,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 11,
        "name": "Find all devices, only SSLD present",
        "description": "",
        "id": "publiclightingadhocmanagement-findalldevices;find-all-devices--only-ssld-present",
        "after": [
          {
            "result": {
              "duration": 32369,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11161,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7131,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8287919,
              "status": "passed"
            },
            "line": 12,
            "name": "a device model",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceModelSteps.aDeviceModel(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ModelCode",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "Manufacturer",
                  "Test"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10993427,
              "status": "passed"
            },
            "line": 15,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Alias",
                  "ALIAS_SSLD"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AA"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "containerMunicipality",
                  ""
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceModel",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95989514,
              "status": "passed"
            },
            "line": 31,
            "name": "receiving a find all device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.receivingAFindAllDevicesRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Page",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 255990,
              "status": "passed"
            },
            "line": 33,
            "name": "the find all device response contains \"1\" devices",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 38
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsDevices(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1631817,
              "status": "passed"
            },
            "line": 34,
            "name": "the find all device response contains at index \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 47
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsAtIndex(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AA"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:27:44.464Z",
        "before": [
          {
            "result": {
              "duration": 20870089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3968461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7024736,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 432417,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 47,
        "name": "Find all devices, only LMD present",
        "description": "",
        "id": "publiclightingadhocmanagement-findalldevices;find-all-devices--only-lmd-present",
        "after": [
          {
            "result": {
              "duration": 15403,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4192,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4194,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5022113,
              "status": "passed"
            },
            "line": 48,
            "name": "a device model",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceModelSteps.aDeviceModel(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ModelCode",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "Manufacturer",
                  "Test"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15248097,
              "status": "passed"
            },
            "line": 51,
            "name": "a light measurement device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.LightMeasurementDeviceSteps.aLightMeasurementDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000002"
                ]
              },
              {
                "cells": [
                  "Alias",
                  "ALIAS_LMD"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AB"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "containerMunicipality",
                  ""
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "true"
                ]
              },
              {
                "cells": [
                  "DeviceModel",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "LMD"
                ]
              },
              {
                "cells": [
                  "Description",
                  "LMD-ORIGINAL"
                ]
              },
              {
                "cells": [
                  "Code",
                  "E-01"
                ]
              },
              {
                "cells": [
                  "Color",
                  "#eec9c9"
                ]
              },
              {
                "cells": [
                  "DigitalInput",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25346094,
              "status": "passed"
            },
            "line": 69,
            "name": "receiving a find all device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.receivingAFindAllDevicesRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Page",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 164324,
              "status": "passed"
            },
            "line": 71,
            "name": "the find all device response contains \"1\" devices",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 38
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsDevices(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 388590,
              "status": "passed"
            },
            "line": 72,
            "name": "the find all device response contains at index \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 47
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsAtIndex(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000002"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AB"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "LMD"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "true"
                ]
              },
              {
                "cells": [
                  "Description",
                  "LMD-ORIGINAL"
                ]
              },
              {
                "cells": [
                  "Code",
                  "E-01"
                ]
              },
              {
                "cells": [
                  "Color",
                  "#eec9c9"
                ]
              },
              {
                "cells": [
                  "DigitalInput",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:27:44.549Z",
        "before": [
          {
            "result": {
              "duration": 18396347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4568664,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7965729,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 391593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 87,
        "name": "Find all devices, LMD and SSLD present",
        "description": "",
        "id": "publiclightingadhocmanagement-findalldevices;find-all-devices--lmd-and-ssld-present",
        "after": [
          {
            "result": {
              "duration": 16907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7616,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5930264,
              "status": "passed"
            },
            "line": 88,
            "name": "a device model",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceModelSteps.aDeviceModel(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ModelCode",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "Manufacturer",
                  "Test"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11839481,
              "status": "passed"
            },
            "line": 91,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Alias",
                  "ALIAS_SSLD"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AA"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "containerMunicipality",
                  ""
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceModel",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8828861,
              "status": "passed"
            },
            "line": 107,
            "name": "a light measurement device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.LightMeasurementDeviceSteps.aLightMeasurementDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000002"
                ]
              },
              {
                "cells": [
                  "Alias",
                  "ALIAS_LMD"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AB"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "containerMunicipality",
                  ""
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "true"
                ]
              },
              {
                "cells": [
                  "DeviceModel",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "LMD"
                ]
              },
              {
                "cells": [
                  "Description",
                  "LMD-ORIGINAL"
                ]
              },
              {
                "cells": [
                  "Code",
                  "E-01"
                ]
              },
              {
                "cells": [
                  "Color",
                  "#eec9c9"
                ]
              },
              {
                "cells": [
                  "DigitalInput",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25378195,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a find all device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.receivingAFindAllDevicesRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Page",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 230115,
              "status": "passed"
            },
            "line": 127,
            "name": "the find all device response contains \"2\" devices",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 38
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsDevices(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 547456,
              "status": "passed"
            },
            "line": 128,
            "name": "the find all device response contains at index \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 47
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsAtIndex(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AA"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "0"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 496219,
              "status": "passed"
            },
            "line": 140,
            "name": "the find all device response contains at index \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 47
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsAtIndex(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000002"
                ]
              },
              {
                "cells": [
                  "containerPostalCode",
                  "1234AB"
                ]
              },
              {
                "cells": [
                  "containerCity",
                  "Maastricht"
                ]
              },
              {
                "cells": [
                  "containerStreet",
                  "Stationsstraat"
                ]
              },
              {
                "cells": [
                  "containerNumber",
                  "12"
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  "1"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "LMD"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "true"
                ]
              },
              {
                "cells": [
                  "Description",
                  "LMD-ORIGINAL"
                ]
              },
              {
                "cells": [
                  "Code",
                  "E-01"
                ]
              },
              {
                "cells": [
                  "Color",
                  "#eec9c9"
                ]
              },
              {
                "cells": [
                  "DigitalInput",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:27:44.639Z",
        "before": [
          {
            "result": {
              "duration": 21617630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4985405,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5335809,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 642197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 155,
        "name": "Find all devices, no devices present",
        "description": "",
        "id": "publiclightingadhocmanagement-findalldevices;find-all-devices--no-devices-present",
        "after": [
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4323,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5360870,
              "status": "passed"
            },
            "line": 156,
            "name": "a device model",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceModelSteps.aDeviceModel(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ModelCode",
                  "Test Model"
                ]
              },
              {
                "cells": [
                  "Manufacturer",
                  "Test"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16327755,
              "status": "passed"
            },
            "line": 159,
            "name": "receiving a find all device request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.receivingAFindAllDevicesRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Page",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177097,
              "status": "passed"
            },
            "line": 161,
            "name": "the find all device response contains \"0\" devices",
            "match": {
              "arguments": [
                {
                  "val": "\"0\"",
                  "offset": 38
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.FindAllDevicesSteps.theFindAllDevicesResponseContainsDevices(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement FindAllDevices",
    "description": "  As a ...\n  I want to be able to perform FindAllDevices operation\n  So that ...",
    "id": "publiclightingadhocmanagement-findalldevices",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/FindAllDevices.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:27:44.699Z",
        "before": [
          {
            "result": {
              "duration": 19735765,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4765550,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5612023,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 516617,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 95949,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 37,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 59032,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4805,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4047,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14392600,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1093713,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96667124,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 399747,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000591651,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30363754126,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:28:16.222Z",
        "before": [
          {
            "result": {
              "duration": 24673794,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4659262,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9361968,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 938174,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 83464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;3",
        "after": [
          {
            "result": {
              "duration": 89957,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7475,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14918436,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 857003,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97533399,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 506692,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000624221,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30238616602,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:28:47.630Z",
        "before": [
          {
            "result": {
              "duration": 23622419,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7556864,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9200247,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 638478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 77667,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;4",
        "after": [
          {
            "result": {
              "duration": 55537,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5370,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11761,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17621149,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2219314,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103170179,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 409254,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000731474,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30232374166,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:29:19.034Z",
        "before": [
          {
            "result": {
              "duration": 21790722,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4427806,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12324972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 974990,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 185513,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;5",
        "after": [
          {
            "result": {
              "duration": 37358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4489,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4234,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14633510,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1162985,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90944663,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 376266,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000645614,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30216820623,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:29:50.406Z",
        "before": [
          {
            "result": {
              "duration": 23215500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6402443,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8968712,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 550968,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 67869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;6",
        "after": [
          {
            "result": {
              "duration": 39035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5758,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4607,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12811379,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2004039,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 160875107,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401390,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000766698,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30198118221,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:30:21.827Z",
        "before": [
          {
            "result": {
              "duration": 22994678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6165734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12185887,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 656257,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 92250,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;7",
        "after": [
          {
            "result": {
              "duration": 51252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5532,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5065,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18341251,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 930598,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105271992,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 607722,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000682285,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30227192313,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:30:53.230Z",
        "before": [
          {
            "result": {
              "duration": 21748071,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3947257,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9610811,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 503960,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;8",
        "after": [
          {
            "result": {
              "duration": 68306,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5354,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13396915,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 880698,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102362519,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401221,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000670932,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30217541343,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:31:24.606Z",
        "before": [
          {
            "result": {
              "duration": 19676372,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6300661,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10018824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 718713,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 105704,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;9",
        "after": [
          {
            "result": {
              "duration": 36500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4537,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4189,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16031860,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1645775,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101376699,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 397364,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000583760,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30253210642,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:31:56.024Z",
        "before": [
          {
            "result": {
              "duration": 22951755,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4531762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7444521,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 511543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 113286,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;10",
        "after": [
          {
            "result": {
              "duration": 45446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3962,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3756,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14629916,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 863704,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87171661,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 395781,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000582362,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30588989474,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:32:27.759Z",
        "before": [
          {
            "result": {
              "duration": 24925732,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4019579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13664097,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 513022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 60138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;11",
        "after": [
          {
            "result": {
              "duration": 40500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5574,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4529,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14839947,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 849595,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185366215,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 383324,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000662535,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30434973293,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:32:59.448Z",
        "before": [
          {
            "result": {
              "duration": 21413757,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4212332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10187552,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 498086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64773,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;12",
        "after": [
          {
            "result": {
              "duration": 69153,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5378,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21095,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14677187,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1065125,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105178908,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 451355,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000606760,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30385274818,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:33:31.001Z",
        "before": [
          {
            "result": {
              "duration": 19456205,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5401624,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10338493,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 469832,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;13",
        "after": [
          {
            "result": {
              "duration": 46713,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4262,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12535330,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 844279,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113540936,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 802663,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001014128,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30345919133,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:34:02.519Z",
        "before": [
          {
            "result": {
              "duration": 18569981,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3468276,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8285054,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 467885,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 58449,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;14",
        "after": [
          {
            "result": {
              "duration": 44900,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4689,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12021399,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 999815,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99462348,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 560558,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000761934,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30266795788,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:34:33.936Z",
        "before": [
          {
            "result": {
              "duration": 19805308,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3992723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8715414,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 497043,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 71066,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;15",
        "after": [
          {
            "result": {
              "duration": 36174,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4937,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4389,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12988854,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 861087,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99172435,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 411242,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000736438,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30230307253,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:35:05.320Z",
        "before": [
          {
            "result": {
              "duration": 20937128,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3995762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9169044,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 461613,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;16",
        "after": [
          {
            "result": {
              "duration": 35516,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5778,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4182,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11860410,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 881480,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83428559,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 385970,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000665303,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30216614025,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:35:36.675Z",
        "before": [
          {
            "result": {
              "duration": 19810316,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4612304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8525747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 695527,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;17",
        "after": [
          {
            "result": {
              "duration": 66225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4633,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3981,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17642503,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 849714,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84424242,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 408216,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000635935,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30186634290,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:36:08.005Z",
        "before": [
          {
            "result": {
              "duration": 17494057,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3616752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11092250,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 426857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 53905,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;18",
        "after": [
          {
            "result": {
              "duration": 41235,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12568280,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 910321,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89561579,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 384240,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000631255,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30176375465,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:36:39.324Z",
        "before": [
          {
            "result": {
              "duration": 16845149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3808045,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9235634,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 380631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 52561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;19",
        "after": [
          {
            "result": {
              "duration": 60183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4053,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11699342,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 927593,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83251095,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 408097,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000563189,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30188751577,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:37:10.645Z",
        "before": [
          {
            "result": {
              "duration": 21270841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3860717,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7887861,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 457562,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 65654,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 55,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;20",
        "after": [
          {
            "result": {
              "duration": 72055,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4191,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4128,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11800542,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 776686,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100264612,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 515471,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000739029,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30151873366,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:37:41.952Z",
        "before": [
          {
            "result": {
              "duration": 19524764,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4176966,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12241361,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 381806,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 45686,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 56,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;21",
        "after": [
          {
            "result": {
              "duration": 34876,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11794133,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 818931,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180703571,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 578686,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000661323,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30147617990,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:38:13.337Z",
        "before": [
          {
            "result": {
              "duration": 20309270,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3692287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8952405,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 646981,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 57,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;22",
        "after": [
          {
            "result": {
              "duration": 34516,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4623,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4179,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11071497,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 814187,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98763699,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 477362,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000584596,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30138163080,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:38:44.627Z",
        "before": [
          {
            "result": {
              "duration": 21554563,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4199375,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9651199,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 703024,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 63946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 58,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;23",
        "after": [
          {
            "result": {
              "duration": 35591,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5813,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11981010,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 752161,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83908953,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 396930,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000670997,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30162672304,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:39:15.930Z",
        "before": [
          {
            "result": {
              "duration": 22042371,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3948775,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7676466,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 477612,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 66445,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 59,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;24",
        "after": [
          {
            "result": {
              "duration": 34065,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5879,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13219434,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 827193,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92700486,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 376018,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000685809,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30144671704,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:39:47.223Z",
        "before": [
          {
            "result": {
              "duration": 18604970,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3890698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9478463,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 379817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 46042,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 60,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;25",
        "after": [
          {
            "result": {
              "duration": 32930,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4574,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11787365,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 704082,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83687171,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 543407,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000894312,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30137461250,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:40:18.497Z",
        "before": [
          {
            "result": {
              "duration": 19436313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4334093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7567744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 401987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 68166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 61,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;26",
        "after": [
          {
            "result": {
              "duration": 43180,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4873,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4369,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12433764,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 732855,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99755965,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 440594,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000642419,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30266404298,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:40:49.916Z",
        "before": [
          {
            "result": {
              "duration": 25527172,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4592096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10742451,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 512954,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 109108,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 62,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;27",
        "after": [
          {
            "result": {
              "duration": 38932,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4778,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14214240,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1935356,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99715059,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 409185,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000712805,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30314627980,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:41:21.397Z",
        "before": [
          {
            "result": {
              "duration": 21231914,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5910066,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9523400,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1100723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 178563,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 63,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;28",
        "after": [
          {
            "result": {
              "duration": 50519,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13787169,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 961814,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92955583,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 617094,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000749830,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30237805557,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:41:52.787Z",
        "before": [
          {
            "result": {
              "duration": 23131165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4286461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8106328,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 364296,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 43773,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 64,
        "name": "Get Status from a device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-from-a-device;;29",
        "after": [
          {
            "result": {
              "duration": 54854,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6625,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4202,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13563454,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 876748,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "1,true,100;2,true,100;3,true,100;4,true,100;5,true,100;6,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116741516,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 385592,
              "status": "passed"
            },
            "line": 26,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000654110,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:29)\n",
              "duration": 30199361558,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.164Z",
        "before": [
          {
            "result": {
              "duration": 26428840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3976997,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8707151,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 984416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 66,
        "name": "Get status as an unknown organization",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 23384,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4018,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33675208,
              "status": "passed"
            },
            "line": 67,
            "name": "receiving a get status request by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequestByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1019274,
              "status": "passed"
            },
            "line": 69,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.244Z",
        "before": [
          {
            "result": {
              "duration": 16960302,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3913636,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4944100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 335311,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 72,
        "name": "Get status for an unknown device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 17665,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4760,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4362,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18361543,
              "status": "passed"
            },
            "line": 73,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 626893,
              "status": "passed"
            },
            "line": 75,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.293Z",
        "before": [
          {
            "result": {
              "duration": 15370614,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3837784,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4753797,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 346993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 90,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-for-an-inactive-device;;2",
        "after": [
          {
            "result": {
              "duration": 29429,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10452137,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34432815,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1108163,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.371Z",
        "before": [
          {
            "result": {
              "duration": 22811565,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5117797,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8692695,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 468753,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 91,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-for-an-inactive-device;;3",
        "after": [
          {
            "result": {
              "duration": 63234,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15969,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14485057,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34125191,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1168238,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.466Z",
        "before": [
          {
            "result": {
              "duration": 20110416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4301389,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6853070,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 375225,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 92,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-for-an-inactive-device;;4",
        "after": [
          {
            "result": {
              "duration": 20129,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4306,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8452686,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21775630,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 649595,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.532Z",
        "before": [
          {
            "result": {
              "duration": 16318258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4019388,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5854374,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 378734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 94,
        "name": "Get status for an unregistered device",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;get-status-for-an-unregistered-device",
        "after": [
          {
            "result": {
              "duration": 21877,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4749,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3829,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8252054,
              "status": "passed"
            },
            "line": 95,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23997408,
              "status": "passed"
            },
            "line": 98,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 708328,
              "status": "passed"
            },
            "line": 100,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNREGISTERED_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:42:24.598Z",
        "before": [
          {
            "result": {
              "duration": 18331551,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4364092,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5790505,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 401841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 103,
        "name": "getting the device status updates the last known status, but not the last switching event status",
        "description": "",
        "id": "publiclightingadhocmanagement-getstatus;getting-the-device-status-updates-the-last-known-status--but-not-the-last-switching-event-status",
        "after": [
          {
            "result": {
              "duration": 87232,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12176,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4672,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12759516,
              "status": "passed"
            },
            "line": 104,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21616084,
              "status": "passed"
            },
            "line": 106,
            "name": "a device relay status",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.aDeviceRelayStatus(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-01T10:00:00"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastKnownStateTime",
                  "2018-08-01T10:00:00"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1020503,
              "status": "passed"
            },
            "line": 113,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108101427,
              "status": "passed"
            },
            "line": 118,
            "name": "receiving a get status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 897422,
              "status": "passed"
            },
            "line": 120,
            "name": "the get status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000803892,
              "status": "passed"
            },
            "line": 122,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(GetStatusSteps.java:192)\n\tat ✽.the platform buffers a get status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature:123)\n",
              "duration": 30201189528,
              "status": "failed"
            },
            "line": 123,
            "name": "the platform buffers a get status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 203250,
              "status": "skipped"
            },
            "line": 125,
            "name": "there is a device relay status with a recent last known state time",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.thereIsADeviceRelayStatusWithARecentLastKnownTime(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-01T10:00:00"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "On"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement GetStatus",
    "description": "  As a platform \n  I want to asynchronously handle get status requests\n  In order to ...",
    "id": "publiclightingadhocmanagement-getstatus",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/GetLightStatus.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:42:55.983Z",
        "before": [
          {
            "result": {
              "duration": 26552515,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4456374,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7766389,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 429365,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 50945,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 32,
        "name": "Resume Schedule",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 40341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5342,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7005,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11444890,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1451327,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187218022,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1455584,
              "status": "passed"
            },
            "line": 22,
            "name": "the resume schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000922392,
              "status": "passed"
            },
            "line": 24,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(ResumeScheduleSteps.java:121)\n\tat ✽.the platform buffers a resume schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/ResumeSchedule.feature:27)\n",
              "duration": 30165601395,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a resume schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 68
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:43:27.400Z",
        "before": [
          {
            "result": {
              "duration": 19403692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4050566,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8245649,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 659888,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 52933,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 33,
        "name": "Resume Schedule",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule;;3",
        "after": [
          {
            "result": {
              "duration": 93846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8072,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5088,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11470065,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 801713,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96359852,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 415662,
              "status": "passed"
            },
            "line": 22,
            "name": "the resume schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000684479,
              "status": "passed"
            },
            "line": 24,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(ResumeScheduleSteps.java:121)\n\tat ✽.the platform buffers a resume schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/ResumeSchedule.feature:27)\n",
              "duration": 30168768089,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a resume schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 68
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:43:58.718Z",
        "before": [
          {
            "result": {
              "duration": 20362965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5113165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10033860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 554889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72591,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 34,
        "name": "Resume Schedule",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule;;4",
        "after": [
          {
            "result": {
              "duration": 65123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4898,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3901,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12041756,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 820600,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94276290,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 404300,
              "status": "passed"
            },
            "line": 22,
            "name": "the resume schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000741910,
              "status": "passed"
            },
            "line": 24,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(ResumeScheduleSteps.java:121)\n\tat ✽.the platform buffers a resume schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/ResumeSchedule.feature:27)\n",
              "duration": 30165175769,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a resume schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 68
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:44:30.035Z",
        "before": [
          {
            "result": {
              "duration": 21523263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5585277,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11039527,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 560531,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48449,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 35,
        "name": "Resume Schedule",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule;;5",
        "after": [
          {
            "result": {
              "duration": 37480,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4769,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13352962,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 725147,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85328350,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "6"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 416441,
              "status": "passed"
            },
            "line": 22,
            "name": "the resume schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000851578,
              "status": "passed"
            },
            "line": 24,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Index",
                  "6"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(ResumeScheduleSteps.java:121)\n\tat ✽.the platform buffers a resume schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/ResumeSchedule.feature:27)\n",
              "duration": 30188092972,
              "status": "failed"
            },
            "line": 27,
            "name": "the platform buffers a resume schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 68
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thenThePlatformBuffersAResumeScheduleResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:01.368Z",
        "before": [
          {
            "result": {
              "duration": 23203288,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4510205,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7424869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 534502,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 97630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Resume Schedule for a device with no has schedule",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule-for-a-device-with-no-has-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 103516,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12804,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10256,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12553404,
              "status": "passed"
            },
            "line": 39,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 97321106,
              "status": "passed"
            },
            "line": 43,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419223,
              "status": "passed"
            },
            "line": 47,
            "name": "the resume schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 723138205,
              "status": "passed"
            },
            "line": 49,
            "name": "the platform buffers a get resume schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.thePlatformBuffersAGetResumeScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultString",
                  "UNSCHEDULED_DEVICE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:02.246Z",
        "before": [
          {
            "result": {
              "duration": 18577293,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3731308,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8698670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 438789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 56,
        "name": "Resume Schedule as an unknown organization",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 18086,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4606,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3931,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14879573,
              "status": "passed"
            },
            "line": 57,
            "name": "receiving a set resume schedule by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingASetResumeScheduleByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 813765,
              "status": "passed"
            },
            "line": 59,
            "name": "the resume schedule async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:02.297Z",
        "before": [
          {
            "result": {
              "duration": 15618360,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4174911,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4917588,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 478311,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 62,
        "name": "Resume Schedule for an unknown device",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 17006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4787,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18250655,
              "status": "passed"
            },
            "line": 63,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 579790,
              "status": "passed"
            },
            "line": 66,
            "name": "the resume schedule async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:02.345Z",
        "before": [
          {
            "result": {
              "duration": 13339409,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3510849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4326985,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 473107,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 84,
        "name": "Resume Schedule With Invalid Index",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule-with-invalid-index;;2",
        "after": [
          {
            "result": {
              "duration": 17019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4945,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3971,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8739508,
              "status": "passed"
            },
            "line": 70,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13600651,
              "status": "passed"
            },
            "line": 73,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "-1"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 448038,
              "status": "passed"
            },
            "line": 77,
            "name": "the resume schedule async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-minInclusive-valid: Value \u0027-1\u0027 is not facet-valid with respect to minInclusive \u00270\u0027 for type \u0027#AnonType_IndexResumeScheduleRequest\u0027.;cvc-type.3.1.3: The value \u0027-1\u0027 of element \u0027ns2:Index\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:02.395Z",
        "before": [
          {
            "result": {
              "duration": 15026089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3771487,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4811545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 391956,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 85,
        "name": "Resume Schedule With Invalid Index",
        "description": "",
        "id": "publiclightingadhocmanagement-resume-schedule;resume-schedule-with-invalid-index;;3",
        "after": [
          {
            "result": {
              "duration": 17670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4187,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10013139,
              "status": "passed"
            },
            "line": 70,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "true"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12633557,
              "status": "passed"
            },
            "line": 73,
            "name": "receiving a resume schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.receivingAResumeScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "7"
                ]
              },
              {
                "cells": [
                  "IsImmediate",
                  "true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 518809,
              "status": "passed"
            },
            "line": 77,
            "name": "the resume schedule async response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.ResumeScheduleSteps.theResumeScheduleAsyncResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-maxInclusive-valid: Value \u00277\u0027 is not facet-valid with respect to maxInclusive \u00276\u0027 for type \u0027#AnonType_IndexResumeScheduleRequest\u0027.;cvc-type.3.1.3: The value \u00277\u0027 of element \u0027ns2:Index\u0027 is not valid."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement Resume Schedule",
    "description": "  As a platform \n  I want to asynchronously handle set light requests\n  In order to ...",
    "id": "publiclightingadhocmanagement-resume-schedule",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/ResumeSchedule.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5123665,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:02.448Z",
        "before": [
          {
            "result": {
              "duration": 23168552,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4543322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5125657,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 392684,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 136601,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;2",
        "after": [
          {
            "result": {
              "duration": 48825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4008,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13106296,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1542272,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 295001,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 135189779,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 622020,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001046390,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31012618592,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174708,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165866,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4736923,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:45:34.663Z",
        "before": [
          {
            "result": {
              "duration": 22466941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4613408,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9326665,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 452006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57891,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;3",
        "after": [
          {
            "result": {
              "duration": 114081,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11468,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4850,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15826932,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 959222,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 231241,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120793958,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 492151,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000858210,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31011379582,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165988,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 175136,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4900381,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:46:06.865Z",
        "before": [
          {
            "result": {
              "duration": 23145503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4979250,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9418490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 570915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 93303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;4",
        "after": [
          {
            "result": {
              "duration": 32397,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 24955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12919977,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 809298,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307644,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116948492,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "6"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 430794,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000782542,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "6"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31010726735,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 195780,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137165,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "6"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4418703,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:46:39.059Z",
        "before": [
          {
            "result": {
              "duration": 21564077,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4926433,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10225595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1021006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 75934,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;5",
        "after": [
          {
            "result": {
              "duration": 79388,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 30935,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 135292,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11034695,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 624000,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 211580,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110131610,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "false"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 698316,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000970480,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "false"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31013583956,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 235128,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155547,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4303337,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:47:11.245Z",
        "before": [
          {
            "result": {
              "duration": 21608631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4080875,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9633587,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 447473,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54409,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;6",
        "after": [
          {
            "result": {
              "duration": 31115,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4051,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11500110,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 698630,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261488,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104688667,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "1"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 478853,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000762761,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31011880210,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180615,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134053,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3872158,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:47:43.423Z",
        "before": [
          {
            "result": {
              "duration": 21735662,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4376696,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9689515,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 431102,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48133,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;7",
        "after": [
          {
            "result": {
              "duration": 35046,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4978,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3703,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11887340,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 718890,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 223484,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185660707,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "75"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 375554,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000819186,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "75"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31011204031,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154624,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156629,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4552232,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:15.682Z",
        "before": [
          {
            "result": {
              "duration": 20193547,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3982478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8590311,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 507964,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 78238,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 55,
        "name": "Receive A Set Light Request With A Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-a-single-light-value;;8",
        "after": [
          {
            "result": {
              "duration": 31619,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4080,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11571540,
              "status": "passed"
            },
            "line": 20,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 682231,
              "status": "passed"
            },
            "line": 22,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218047,
              "status": "passed"
            },
            "line": 23,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98143520,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "100"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 462999,
              "status": "passed"
            },
            "line": 29,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000868264,
              "status": "passed"
            },
            "line": 31,
            "name": "a set light \"OSLP ELSTER\" message with one light value is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithOneLightvalueIsSentToTheDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "100"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:36)\n",
              "duration": 31011444818,
              "status": "failed"
            },
            "line": 36,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 159488,
              "status": "skipped"
            },
            "line": 40,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171669,
              "status": "skipped"
            },
            "line": 42,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3994497,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:47.849Z",
        "before": [
          {
            "result": {
              "duration": 18297158,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4369947,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8966017,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 631315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 70,
        "name": "Receive A Set Light Request With An Invalid Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value;;2",
        "after": [
          {
            "result": {
              "duration": 15179,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4265,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3727,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7695896,
              "status": "passed"
            },
            "line": 58,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22999615,
              "status": "passed"
            },
            "line": 60,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "0"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 322314,
              "status": "passed"
            },
            "line": 65,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4096861,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:47.921Z",
        "before": [
          {
            "result": {
              "duration": 15830487,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4346890,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6151388,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 348532,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 71,
        "name": "Receive A Set Light Request With An Invalid Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value;;3",
        "after": [
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4578,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3932,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8459359,
              "status": "passed"
            },
            "line": 58,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10460644,
              "status": "passed"
            },
            "line": 60,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "-1"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "1"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 389558,
              "status": "passed"
            },
            "line": 65,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4406810,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:47.975Z",
        "before": [
          {
            "result": {
              "duration": 14725358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4177936,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6337596,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 339275,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 72,
        "name": "Receive A Set Light Request With An Invalid Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value;;4",
        "after": [
          {
            "result": {
              "duration": 29901,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3952,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3888,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9389419,
              "status": "passed"
            },
            "line": 58,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11077731,
              "status": "passed"
            },
            "line": 60,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "7"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "1"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 337586,
              "status": "passed"
            },
            "line": 65,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4877129,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:48.031Z",
        "before": [
          {
            "result": {
              "duration": 16183783,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4373198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6251576,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 500644,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 73,
        "name": "Receive A Set Light Request With An Invalid Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value;;5",
        "after": [
          {
            "result": {
              "duration": 33329,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5090,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4352,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9394961,
              "status": "passed"
            },
            "line": 58,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11063114,
              "status": "passed"
            },
            "line": 60,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "-1"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 459866,
              "status": "passed"
            },
            "line": 65,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4386917,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:48.089Z",
        "before": [
          {
            "result": {
              "duration": 16158378,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4006698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5375399,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 329920,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 74,
        "name": "Receive A Set Light Request With An Invalid Single Light Value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value;;6",
        "after": [
          {
            "result": {
              "duration": 14744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13982,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5473,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10063454,
              "status": "passed"
            },
            "line": 58,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10348340,
              "status": "passed"
            },
            "line": 60,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "On",
                  "true"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "101"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 338369,
              "status": "passed"
            },
            "line": 65,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5665410,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:48.144Z",
        "before": [
          {
            "result": {
              "duration": 17043925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4781237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4828077,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 299591,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 76,
        "name": "Receive A Set Light Request With An Invalid Single Light Value due to the On value",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-an-invalid-single-light-value-due-to-the-on-value",
        "after": [
          {
            "result": {
              "duration": 17339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7849849,
              "status": "passed"
            },
            "line": 77,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17892867,
              "status": "passed"
            },
            "line": 79,
            "name": "receiving a set light request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "On",
                  "false"
                ]
              },
              {
                "cells": [
                  "DimValue",
                  "75"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1231931,
              "status": "passed"
            },
            "line": 84,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "VALIDATION_ERROR"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5194664,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:48:48.208Z",
        "before": [
          {
            "result": {
              "duration": 15693178,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4003489,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6633389,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 355528,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51749,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 114,
        "name": "Receive A Set Light Request With Multiple Light Values",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-multiple-light-values;;2",
        "after": [
          {
            "result": {
              "duration": 36678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6163,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3890,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12144560,
              "status": "passed"
            },
            "line": 89,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "relayType",
                  "LIGHT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 647418,
              "status": "passed"
            },
            "line": 92,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239888,
              "status": "passed"
            },
            "line": 93,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86138014,
              "status": "passed"
            },
            "line": 94,
            "name": "receiving a set light request with \"2\" light values",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 36
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequestWithLightValues(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 416943,
              "status": "passed"
            },
            "line": 96,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001031414,
              "status": "passed"
            },
            "line": 98,
            "name": "a set light \"OSLP ELSTER\" message with \"2\" lightvalues is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithLightValuesIsSentToTheDevice(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:99)\n",
              "duration": 31015245739,
              "status": "failed"
            },
            "line": 99,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218323,
              "status": "skipped"
            },
            "line": 103,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 182155,
              "status": "skipped"
            },
            "line": 105,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "2,3"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "2"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5822372,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:49:20.365Z",
        "before": [
          {
            "result": {
              "duration": 22377670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4115065,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9660674,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 440705,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55447,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 115,
        "name": "Receive A Set Light Request With Multiple Light Values",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-multiple-light-values;;3",
        "after": [
          {
            "result": {
              "duration": 34868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4722,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5180,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15507367,
              "status": "passed"
            },
            "line": 89,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "relayType",
                  "LIGHT"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 900854,
              "status": "passed"
            },
            "line": 92,
            "name": "the device returns a set light response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 41
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 51
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 260733,
              "status": "passed"
            },
            "line": 93,
            "name": "the device returns a resume schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAResumeScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107911769,
              "status": "passed"
            },
            "line": 94,
            "name": "receiving a set light request with \"3\" light values",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 36
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingASetLightRequestWithLightValues(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 454068,
              "status": "passed"
            },
            "line": 96,
            "name": "the set light async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001398921,
              "status": "passed"
            },
            "line": 98,
            "name": "a set light \"OSLP ELSTER\" message with \"3\" lightvalues is sent to the device",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 13
                },
                {
                  "val": "3",
                  "offset": 40
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightOslpMessageWithLightValuesIsSentToTheDevice(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(OslpDeviceSteps.java:192)\n\tat ✽.a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature:99)\n",
              "duration": 31012463112,
              "status": "failed"
            },
            "line": 99,
            "name": "a resume schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 19
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 59
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aResumeScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Immediate",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185755,
              "status": "skipped"
            },
            "line": 103,
            "name": "the platform buffers a set light response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.thePlatformBuffersASetLightResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 168035,
              "status": "skipped"
            },
            "line": 105,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "2,3,4"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "3"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5901651,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:49:52.553Z",
        "before": [
          {
            "result": {
              "duration": 21000355,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5073283,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8773111,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 646975,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 127,
        "name": "Receive A Set Light Request With Invalid Multiple Light Values",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-invalid-multiple-light-values;;2",
        "after": [
          {
            "result": {
              "duration": 15142,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3609,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8985037,
              "status": "passed"
            },
            "line": 118,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31066375,
              "status": "passed"
            },
            "line": 120,
            "name": "receiving a set light request with \"0\" valid lightvalues and \"0\" invalid lightvalues",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 36
                },
                {
                  "val": "0",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingAsetLightRequestWithValidLightValuesAndInvalidLightValues(java.lang.Integer,java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 408963,
              "status": "passed"
            },
            "line": 122,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4982719,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:49:52.642Z",
        "before": [
          {
            "result": {
              "duration": 20951848,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5813469,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7012478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 674630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 128,
        "name": "Receive A Set Light Request With Invalid Multiple Light Values",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-invalid-multiple-light-values;;3",
        "after": [
          {
            "result": {
              "duration": 19733,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4042,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5674,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10047017,
              "status": "passed"
            },
            "line": 118,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12183835,
              "status": "passed"
            },
            "line": 120,
            "name": "receiving a set light request with \"7\" valid lightvalues and \"0\" invalid lightvalues",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 36
                },
                {
                  "val": "0",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingAsetLightRequestWithValidLightValuesAndInvalidLightValues(java.lang.Integer,java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 371077,
              "status": "passed"
            },
            "line": 122,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      },
      {
        "line": 11,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5486077,
              "status": "passed"
            },
            "line": 12,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "Name",
                  "LianderNetManagement"
                ]
              },
              {
                "cells": [
                  "PlatformFunctionGroup",
                  "ADMIN"
                ]
              },
              {
                "cells": [
                  "Domains",
                  "COMMON"
                ]
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:49:52.711Z",
        "before": [
          {
            "result": {
              "duration": 17631845,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5554986,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5868817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 734133,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 129,
        "name": "Receive A Set Light Request With Invalid Multiple Light Values",
        "description": "",
        "id": "publiclightingadhocmanagement-set-light;receive-a-set-light-request-with-invalid-multiple-light-values;;4",
        "after": [
          {
            "result": {
              "duration": 32803,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6413,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21333,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9972340,
              "status": "passed"
            },
            "line": 118,
            "name": "a device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.aDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19567498,
              "status": "passed"
            },
            "line": 120,
            "name": "receiving a set light request with \"2\" valid lightvalues and \"1\" invalid lightvalues",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 36
                },
                {
                  "val": "1",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.receivingAsetLightRequestWithValidLightValuesAndInvalidLightValues(java.lang.Integer,java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1016790,
              "status": "passed"
            },
            "line": 122,
            "name": "the set light response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetLightSteps.theSetLightResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "MESSAGE",
                  "VALIDATION_ERROR"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetLight"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement Set Light",
    "description": "  As a platform \n  I want to asynchronously handle set light requests\n  In order to ...",
    "id": "publiclightingadhocmanagement-set-light",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetLight.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@SetLight",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 58
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:49:52.783Z",
        "before": [
          {
            "result": {
              "duration": 17884535,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5294293,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7114627,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 387636,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 71908,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 27,
        "name": "Set reboot",
        "description": "",
        "id": "publiclightingadhocmanagement-set-reboot;set-reboot;;2",
        "after": [
          {
            "result": {
              "duration": 40109,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4835,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12405709,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1458485,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set reboot response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132972027,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set reboot request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 697265,
              "status": "passed"
            },
            "line": 19,
            "name": "the set reboot async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001055378,
              "status": "passed"
            },
            "line": 21,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:105)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:92)\n\tat org.opensmartgridplatform.cucumber.core.Wait.until(Wait.java:88)\n\tat org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(SetRebootSteps.java:111)\n\tat ✽.the platform buffers a set reboot response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetReboot.feature:22)\n",
              "duration": 30033626237,
              "status": "failed"
            },
            "line": 22,
            "name": "the platform buffers a set reboot response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.thenThePlatformBuffersASetRebootResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:24.005Z",
        "before": [
          {
            "result": {
              "duration": 27738270,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3850950,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8543617,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 802094,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 29,
        "name": "Set reboot as an unknown organization",
        "description": "",
        "id": "publiclightingadhocmanagement-set-reboot;set-reboot-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 61245,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 22151,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20412,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36318158,
              "status": "passed"
            },
            "line": 30,
            "name": "receiving a set reboot request by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequestByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 262830,
              "status": "passed"
            },
            "line": 32,
            "name": "the set reboot async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:24.087Z",
        "before": [
          {
            "result": {
              "duration": 17712935,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4396018,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5219067,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 342250,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 35,
        "name": "Set reboot for an unknown device",
        "description": "",
        "id": "publiclightingadhocmanagement-set-reboot;set-reboot-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 27949,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 62203,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20604189,
              "status": "passed"
            },
            "line": 36,
            "name": "receiving a set reboot request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.receivingASetRebootRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 233009,
              "status": "passed"
            },
            "line": 39,
            "name": "the set reboot async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.adhocmanagement.SetRebootSteps.theSetRebootAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement Set Reboot",
    "description": "  As OSGP\n  I want to asynchronously handle set reboot requests\n  In order to reboot devices As a platform",
    "id": "publiclightingadhocmanagement-set-reboot",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetReboot.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:50:24.142Z",
        "before": [
          {
            "result": {
              "duration": 16559870,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3944857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4793585,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 296841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48936,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 32,
        "name": "Set Transition",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition;;2",
        "after": [
          {
            "result": {
              "duration": 33463,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2923,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13894159,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 719519,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107123868,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 703629,
              "status": "passed"
            },
            "line": 22,
            "name": "the set transition async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000716953,
              "status": "passed"
            },
            "line": 24,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 273107148,
              "status": "passed"
            },
            "line": 27,
            "name": "the platform does not buffer a set transition response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.thePlatformDoesNotBufferASetTransitionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_FOUND"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:25.572Z",
        "before": [
          {
            "result": {
              "duration": 22455028,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4038928,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9943495,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 738315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73966,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 33,
        "name": "Set Transition",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition;;3",
        "after": [
          {
            "result": {
              "duration": 37004,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4542,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5392,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13457030,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1473625,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 118398143,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              },
              {
                "cells": [
                  "Time",
                  "200000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 463552,
              "status": "passed"
            },
            "line": 22,
            "name": "the set transition async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000846916,
              "status": "passed"
            },
            "line": 24,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              },
              {
                "cells": [
                  "Time",
                  "200000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171680708,
              "status": "passed"
            },
            "line": 27,
            "name": "the platform does not buffer a set transition response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.thePlatformDoesNotBufferASetTransitionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_FOUND"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:26.922Z",
        "before": [
          {
            "result": {
              "duration": 26072495,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4725028,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9626429,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 719373,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 104803,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 34,
        "name": "Set Transition",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition;;4",
        "after": [
          {
            "result": {
              "duration": 86156,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9117,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7741,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13263943,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 793842,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103567639,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "NIGHT_DAY"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 561907,
              "status": "passed"
            },
            "line": 22,
            "name": "the set transition async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000979504,
              "status": "passed"
            },
            "line": 24,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "NIGHT_DAY"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174880251,
              "status": "passed"
            },
            "line": 27,
            "name": "the platform does not buffer a set transition response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.thePlatformDoesNotBufferASetTransitionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_FOUND"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:28.264Z",
        "before": [
          {
            "result": {
              "duration": 24594442,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6318198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9377245,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 687606,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 99077,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 35,
        "name": "Set Transition",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition;;5",
        "after": [
          {
            "result": {
              "duration": 34383,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4191,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3374,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16122402,
              "status": "passed"
            },
            "line": 14,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 756288,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set transition response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 46
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 56
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theSpecificDeviceReturnsASetTransitionResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94433710,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "NIGHT_DAY"
                ]
              },
              {
                "cells": [
                  "Time",
                  "080000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 487604,
              "status": "passed"
            },
            "line": 22,
            "name": "the set transition async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000991997,
              "status": "passed"
            },
            "line": 24,
            "name": "a set transition \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 18
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 58
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTransitionOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "TransitionType",
                  "NIGHT_DAY"
                ]
              },
              {
                "cells": [
                  "Time",
                  "080000"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187991449,
              "status": "passed"
            },
            "line": 27,
            "name": "the platform does not buffer a set transition response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.thePlatformDoesNotBufferASetTransitionResponseMessage(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_FOUND"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:29.612Z",
        "before": [
          {
            "result": {
              "duration": 22588509,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5018964,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9663661,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 554837,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 37,
        "name": "Set transition as an unknown organization",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 14092,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4253,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3686,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15938189,
              "status": "passed"
            },
            "line": 38,
            "name": "receiving a set transition request by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequestByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 269107,
              "status": "passed"
            },
            "line": 41,
            "name": "the set transition async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:29.670Z",
        "before": [
          {
            "result": {
              "duration": 17610177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4169483,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5512087,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 381373,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 44,
        "name": "Set transition for an unknown device",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 14151,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4391,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3116,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17755501,
              "status": "passed"
            },
            "line": 45,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  "DAY_NIGHT"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 273499,
              "status": "passed"
            },
            "line": 48,
            "name": "the set transition async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:29.720Z",
        "before": [
          {
            "result": {
              "duration": 19374443,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5363620,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6272082,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 415267,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 64,
        "name": "Set Transition with invalid data",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition-with-invalid-data;;2",
        "after": [
          {
            "result": {
              "duration": 14272,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11978476,
              "status": "passed"
            },
            "line": 52,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16781759,
              "status": "passed"
            },
            "line": 54,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 322983,
              "status": "passed"
            },
            "line": 58,
            "name": "the set transition async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Message",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:50:29.787Z",
        "before": [
          {
            "result": {
              "duration": 24573783,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4831567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7035771,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 569590,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 65,
        "name": "Set Transition with invalid data",
        "description": "",
        "id": "publiclightingadhocmanagement-set-transition;set-transition-with-invalid-data;;3",
        "after": [
          {
            "result": {
              "duration": 12846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3179,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10068514,
              "status": "passed"
            },
            "line": 52,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12660329,
              "status": "passed"
            },
            "line": 54,
            "name": "receiving a set transition request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.receivingASetTransitionRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "TransitionType",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "200000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242266,
              "status": "passed"
            },
            "line": 58,
            "name": "the set transition async response contains a soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.SetTransitionSteps.theSetTransitionAsyncResponseContainsASoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Message",
                  "Validation error"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingAdhocManagement"
          },
          {
            "name": "@SetTransition"
          }
        ]
      }
    ],
    "name": "PublicLightingAdhocManagement Set Transition",
    "description": "  As OSGP \n  I want clients to be able to send night-day and day-night transition notifications to a device\n  In order to ...\n  NOTE: Authorisation is tested in Basic OSGP Functions - PBI119",
    "id": "publiclightingadhocmanagement-set-transition",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/AdHocManagement/SetTransition.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@SetTransition",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 58
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T12:50:29.854Z",
        "before": [
          {
            "result": {
              "duration": 17098201,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4187965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6179979,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 664849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 65524,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 144478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3141,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13623951,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1994595,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 141358141,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 646800,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000995377,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30046574691,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:51:01.107Z",
        "before": [
          {
            "result": {
              "duration": 31096180,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4800744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8800505,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 575826,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 85268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;3",
        "after": [
          {
            "result": {
              "duration": 36855,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5231,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13463395,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1440995,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86269285,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 438003,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000969103,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30496925675,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:51:32.758Z",
        "before": [
          {
            "result": {
              "duration": 22652887,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4771301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9442592,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10872393,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 92060,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;4",
        "after": [
          {
            "result": {
              "duration": 52896,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4410,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 16778,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11953775,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 698757,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154692883,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 393105,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001165274,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30392450959,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:52:04.376Z",
        "before": [
          {
            "result": {
              "duration": 33462897,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 15224976,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10260912,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 491363,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 65341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;5",
        "after": [
          {
            "result": {
              "duration": 39350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4470,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3058,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15514252,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 715435,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85390787,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 477177,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001099032,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30002717193,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:52:35.549Z",
        "before": [
          {
            "result": {
              "duration": 27765278,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5841810,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8302618,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1005449,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73724,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;6",
        "after": [
          {
            "result": {
              "duration": 59704,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21167,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6564,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13918935,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 701172,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95753843,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 411197,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000811311,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30489350503,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:53:07.199Z",
        "before": [
          {
            "result": {
              "duration": 23414748,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5257249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8448164,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 692533,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;7",
        "after": [
          {
            "result": {
              "duration": 37030,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4207,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13086008,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 776027,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81501156,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 477670,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001229837,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30353779134,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:53:38.694Z",
        "before": [
          {
            "result": {
              "duration": 22316988,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4128565,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8272170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 413902,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55848,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;8",
        "after": [
          {
            "result": {
              "duration": 37167,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3444,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12514203,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 664159,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124048150,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 424854,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001098745,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30349345908,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:54:10.225Z",
        "before": [
          {
            "result": {
              "duration": 27663483,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4338644,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11476980,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 451999,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64378,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;9",
        "after": [
          {
            "result": {
              "duration": 31462,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3550,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3116,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17317330,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 682452,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95371713,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 532999,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001073957,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30342694996,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:54:41.734Z",
        "before": [
          {
            "result": {
              "duration": 19079494,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4181301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8045716,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 315980,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44880,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;10",
        "after": [
          {
            "result": {
              "duration": 97090,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5297,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3072,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12393376,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 554263,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91004177,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 394151,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001159254,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30349417765,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:55:13.226Z",
        "before": [
          {
            "result": {
              "duration": 22181977,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5911630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8499279,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 435860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 52918,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;11",
        "after": [
          {
            "result": {
              "duration": 31917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3259,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12614679,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 616301,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85349395,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 494294,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001162467,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30325050568,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:55:44.693Z",
        "before": [
          {
            "result": {
              "duration": 18987135,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6055799,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8765233,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 338675,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;12",
        "after": [
          {
            "result": {
              "duration": 33757,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4212,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11109065,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 631525,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82621470,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 443738,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001068108,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30310022473,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:56:16.139Z",
        "before": [
          {
            "result": {
              "duration": 20553072,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3814240,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7564574,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 374431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44344,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;13",
        "after": [
          {
            "result": {
              "duration": 37734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4308,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3454,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10250565,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 649384,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97852878,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 607480,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000987360,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30310210880,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:56:47.598Z",
        "before": [
          {
            "result": {
              "duration": 18979197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3743567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7179477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 392332,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47716,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;14",
        "after": [
          {
            "result": {
              "duration": 36295,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4219,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12104958,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 790779,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171295529,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 394841,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001048382,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30317401145,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:57:19.136Z",
        "before": [
          {
            "result": {
              "duration": 19704754,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4033076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7630001,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 316663,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 43982,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 55,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;15",
        "after": [
          {
            "result": {
              "duration": 45485,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4132,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12066977,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 732519,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79306214,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 433024,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001018251,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30405318218,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:57:50.673Z",
        "before": [
          {
            "result": {
              "duration": 26432543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6165191,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9491061,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 586006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 70917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 56,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;16",
        "after": [
          {
            "result": {
              "duration": 47679,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4261,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14204814,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 916901,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89953813,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 393396,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001055656,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30479251743,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:58:22.310Z",
        "before": [
          {
            "result": {
              "duration": 26949645,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4099595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8599530,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 436481,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72607,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 57,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;17",
        "after": [
          {
            "result": {
              "duration": 26353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4387,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3041,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11698502,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1013337,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.springframework.ws.client.WebServiceTransportException: Service Unavailable [503]\n\tat org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:666)\n\tat org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:588)\n\tat org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:391)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:385)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:375)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.support.ws.publiclighting.PublicLightingScheduleManagementClient.setSchedule(PublicLightingScheduleManagementClient.java:38)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.callAddSchedule(SetLightScheduleSteps.java:166)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(SetLightScheduleSteps.java:62)\n\tat ✽.receiving a set light schedule request(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:17)\n",
              "duration": 8897299,
              "status": "failed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 143861,
              "status": "skipped"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 211888,
              "status": "skipped"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134460,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:58:22.378Z",
        "before": [
          {
            "result": {
              "duration": 17938503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5129604,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9763926,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 345415,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 58362,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 58,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;18",
        "after": [
          {
            "result": {
              "duration": 35644,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4236,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 19293,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11732856,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 666374,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.springframework.ws.client.WebServiceTransportException: Service Unavailable [503]\n\tat org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:666)\n\tat org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:588)\n\tat org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:391)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:385)\n\tat org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:375)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.support.ws.publiclighting.PublicLightingScheduleManagementClient.setSchedule(PublicLightingScheduleManagementClient.java:38)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.callAddSchedule(SetLightScheduleSteps.java:166)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(SetLightScheduleSteps.java:62)\n\tat ✽.receiving a set light schedule request(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:17)\n",
              "duration": 1047913925,
              "status": "failed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 148742,
              "status": "skipped"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 236222,
              "status": "skipped"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143415,
              "status": "skipped"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:58:23.478Z",
        "before": [
          {
            "result": {
              "duration": 17591719,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4852252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8748567,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 438222,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 58694,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 59,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;19",
        "after": [
          {
            "result": {
              "duration": 47000,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4169,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2636,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11574396,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 658302,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1574895609,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 678336,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001140960,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30160351187,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:58:56.266Z",
        "before": [
          {
            "result": {
              "duration": 20742146,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4488477,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7740620,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 408974,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 39944,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 60,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;20",
        "after": [
          {
            "result": {
              "duration": 33573,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3855,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11081438,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 697524,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103552810,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "42,42"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 428750,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000861761,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "42,42"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30037914813,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:59:27.461Z",
        "before": [
          {
            "result": {
              "duration": 20085092,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4835259,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8499002,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 325729,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 61,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;21",
        "after": [
          {
            "result": {
              "duration": 54017,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4994,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3091,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10051880,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 548797,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94755195,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "150,150"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 386251,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001068899,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "150,150"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30094867281,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T12:59:58.703Z",
        "before": [
          {
            "result": {
              "duration": 20158728,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3904209,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8949064,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 440089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55484,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 62,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;22",
        "after": [
          {
            "result": {
              "duration": 70413,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5761,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3517,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12884477,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 688439,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91559634,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 391943,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001020786,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,;3,true,50"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30068476639,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:00:29.919Z",
        "before": [
          {
            "result": {
              "duration": 20250807,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4458978,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9289957,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 527872,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 98495,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 63,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;23",
        "after": [
          {
            "result": {
              "duration": 34150,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4153,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4810,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12740152,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 987911,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107644850,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 429813,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001073907,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30451173262,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:01:01.534Z",
        "before": [
          {
            "result": {
              "duration": 21163248,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5442979,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7074337,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 323399,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 41840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 64,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;24",
        "after": [
          {
            "result": {
              "duration": 42172,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 96448,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10250917,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 637942,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94113858,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,50;3,true,75"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 459807,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000808320,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,50;3,true,75"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30435350418,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:01:33.118Z",
        "before": [
          {
            "result": {
              "duration": 19812305,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4417358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8850340,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 458175,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 53703,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 65,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;25",
        "after": [
          {
            "result": {
              "duration": 34957,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3874,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10606544,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 720305,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90649068,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 651945,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000875632,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,;3,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30401461338,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:02:04.662Z",
        "before": [
          {
            "result": {
              "duration": 18874456,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4155138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8268046,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 317889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 42815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 66,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;26",
        "after": [
          {
            "result": {
              "duration": 36288,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6139,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10492561,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 642426,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144128082,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419491,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001003917,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30358649926,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:02:36.214Z",
        "before": [
          {
            "result": {
              "duration": 20532754,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4399672,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6753718,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 377172,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51816,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 67,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;27",
        "after": [
          {
            "result": {
              "duration": 51235,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 13885,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 20913,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12779277,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 758298,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103784640,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 585801,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000952657,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30389260787,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:03:07.761Z",
        "before": [
          {
            "result": {
              "duration": 18133647,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3434352,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6924863,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 352745,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48573,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 68,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;28",
        "after": [
          {
            "result": {
              "duration": 32930,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3703,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10605186,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 896987,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91030646,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 445040,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001206678,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30364125213,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:03:39.266Z",
        "before": [
          {
            "result": {
              "duration": 18047100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5392630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9356542,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 368054,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 69,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;29",
        "after": [
          {
            "result": {
              "duration": 34379,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3726,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9798103,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 662475,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 151224189,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 431265,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000993159,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30382604764,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:04:10.852Z",
        "before": [
          {
            "result": {
              "duration": 21477105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4150123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9244384,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 350831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51382,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 70,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;30",
        "after": [
          {
            "result": {
              "duration": 52449,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5574,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3390,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11903360,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 794823,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91759368,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 648265,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001455109,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30399595445,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:04:42.402Z",
        "before": [
          {
            "result": {
              "duration": 20826900,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3882810,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10236959,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 495571,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 71642,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 71,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;31",
        "after": [
          {
            "result": {
              "duration": 35664,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4041,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3364,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13146808,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 812260,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107225866,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 496101,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001040565,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30430102049,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:05:13.997Z",
        "before": [
          {
            "result": {
              "duration": 21820767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5621894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10080413,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 781894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 144921,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 72,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;32",
        "after": [
          {
            "result": {
              "duration": 41304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3516,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13013649,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 715155,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102654604,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 555706,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001496974,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30365855646,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:05:45.526Z",
        "before": [
          {
            "result": {
              "duration": 18649842,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3697010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7627754,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 614764,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 76359,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 73,
        "name": "Set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule;;33",
        "after": [
          {
            "result": {
              "duration": 85808,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13933358,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 848570,
              "status": "passed"
            },
            "line": 16,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88276933,
              "status": "passed"
            },
            "line": 17,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 416820,
              "status": "passed"
            },
            "line": 27,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001003743,
              "status": "passed"
            },
            "line": 29,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2013-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "60,90"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:38)\n",
              "duration": 30328430011,
              "status": "failed"
            },
            "line": 38,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:06:16.997Z",
        "before": [
          {
            "result": {
              "duration": 39233455,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5379110,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8991357,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 388540,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47860,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 79,
        "name": "Set light schedule with astronomical offsets",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-astronomical-offsets",
        "after": [
          {
            "result": {
              "duration": 45426,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18868,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3367,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11947211,
              "status": "passed"
            },
            "line": 80,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1262422,
              "status": "passed"
            },
            "line": 83,
            "name": "the device returns a get configuration status over \"OSLP_ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP_ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetConfigurationStatusOverOslp(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "DcLights",
                  ""
                ]
              },
              {
                "cells": [
                  "DcMap",
                  ""
                ]
              },
              {
                "cells": [
                  "RelayConf",
                  ""
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "OsgpIpAddress",
                  "10.20.30.40"
                ]
              },
              {
                "cells": [
                  "OsgpPort",
                  "12122"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272924,
              "status": "passed"
            },
            "line": 92,
            "name": "the device returns a set configuration status \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 47
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 57
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetConfigurationStatusWithStatusOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 191534,
              "status": "passed"
            },
            "line": 93,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112697810,
              "status": "passed"
            },
            "line": 94,
            "name": "receiving a set light schedule request with astronomical offsets",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestWithAstronomicalOffsets(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "SunriseOffset",
                  "-15"
                ]
              },
              {
                "cells": [
                  "SunsetOffset",
                  "45"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 392166,
              "status": "passed"
            },
            "line": 98,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 331161,
              "status": "passed"
            },
            "line": 100,
            "name": "the device returns a set reboot response \"OK\" over \"OLSP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OLSP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetRebootResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000663762,
              "status": "passed"
            },
            "line": 101,
            "name": "a get configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Polling for a request failed, no request found\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForRequest(MockOslpServer.java:210)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToSpecificDevice(OslpDeviceSteps.java:494)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(OslpDeviceSteps.java:480)\n\tat ✽.a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:103)\n",
              "duration": 31010720332,
              "status": "failed"
            },
            "line": 103,
            "name": "a set reboot \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetRebootOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205066,
              "status": "skipped"
            },
            "line": 104,
            "name": "a set configuration \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 21
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetConfigurationOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "SunriseOffset",
                  "-900"
                ]
              },
              {
                "cells": [
                  "SunsetOffset",
                  "2700"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 162082,
              "status": "skipped"
            },
            "line": 109,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138315,
              "status": "skipped"
            },
            "line": 111,
            "name": "the device sends a confirm register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 73
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAConfirmRegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163536,
              "status": "skipped"
            },
            "line": 114,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 121081,
              "status": "skipped"
            },
            "line": 119,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@AstronomicalSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:06:49.196Z",
        "before": [
          {
            "result": {
              "duration": 19024543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6128669,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7982404,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 375220,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 42317,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 123,
        "name": "Set light schedule with astronomical offsets is blocked when a previous request with astronomical offsets is in progress",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-astronomical-offsets-is-blocked-when-a-previous-request-with-astronomical-offsets-is-in-progress",
        "after": [
          {
            "result": {
              "duration": 45555,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18823,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2980,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10569425,
              "status": "passed"
            },
            "line": 124,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12415870,
              "status": "passed"
            },
            "line": 127,
            "name": "a pending set schedule request that expires within \"5\" minutes",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.aPendingSetScheduleRequest(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99897967,
              "status": "passed"
            },
            "line": 129,
            "name": "receiving a set light schedule request with astronomical offsets",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestWithAstronomicalOffsets(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "SunriseOffset",
                  "-15"
                ]
              },
              {
                "cells": [
                  "SunsetOffset",
                  "45"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 564187,
              "status": "passed"
            },
            "line": 133,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 539091683,
              "status": "passed"
            },
            "line": 135,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  "SET_SCHEDULE_WITH_ASTRONOMICAL_OFFSETS_IN_PROGRESS"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@AstronomicalSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:06:49.897Z",
        "before": [
          {
            "result": {
              "duration": 16007386,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3708706,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8927139,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 429686,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54704,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 140,
        "name": "Set light schedule when a previous request with astronomical offsets is in progress",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-when-a-previous-request-with-astronomical-offsets-is-in-progress",
        "after": [
          {
            "result": {
              "duration": 45088,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5329,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4741,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11126605,
              "status": "passed"
            },
            "line": 141,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4563808,
              "status": "passed"
            },
            "line": 144,
            "name": "a pending set schedule request that expires within \"5\" minutes",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.aPendingSetScheduleRequest(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89863687,
              "status": "passed"
            },
            "line": 146,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 417132,
              "status": "passed"
            },
            "line": 153,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 532932103,
              "status": "passed"
            },
            "line": 155,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  "SET_SCHEDULE_WITH_ASTRONOMICAL_OFFSETS_IN_PROGRESS"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          },
          {
            "name": "@AstronomicalSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:06:50.570Z",
        "before": [
          {
            "result": {
              "duration": 15186479,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6168701,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7978618,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 380115,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 50490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 194,
        "name": "Failed set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;failed-set-light-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 32905,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3809,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10431711,
              "status": "passed"
            },
            "line": 162,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 635301,
              "status": "passed"
            },
            "line": 165,
            "name": "the device returns a set light schedule response \"FAILURE\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "FAILURE",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99186045,
              "status": "passed"
            },
            "line": 166,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 404906,
              "status": "passed"
            },
            "line": 176,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000929274,
              "status": "passed"
            },
            "line": 178,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:188)\n",
              "duration": 30343024684,
              "status": "failed"
            },
            "line": 188,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Device reports failure"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:22.061Z",
        "before": [
          {
            "result": {
              "duration": 22636700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4466093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7852693,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 532574,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44557,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 230,
        "name": "Rejected set light schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;rejected-set-light-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 35091,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4001,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3476,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10638118,
              "status": "passed"
            },
            "line": 198,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 627434,
              "status": "passed"
            },
            "line": 201,
            "name": "the device returns a set light schedule response \"REJECTED\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "REJECTED",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91639384,
              "status": "passed"
            },
            "line": 202,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 540704,
              "status": "passed"
            },
            "line": 212,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001036598,
              "status": "passed"
            },
            "line": 214,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:224)\n",
              "duration": 30379082430,
              "status": "failed"
            },
            "line": 224,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "NOT_OK"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Device reports rejected"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.589Z",
        "before": [
          {
            "result": {
              "duration": 19975723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6570945,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8515710,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 414563,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 252,
        "name": "Set light schedule with invalid schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-invalid-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 17711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4106,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3434,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8157390,
              "status": "passed"
            },
            "line": 233,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30339010,
              "status": "passed"
            },
            "line": 235,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1189951,
              "status": "passed"
            },
            "line": 245,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: startDay may not be null when weekDay is set to ABSOLUTEDAY;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.670Z",
        "before": [
          {
            "result": {
              "duration": 15710019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3776835,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4826609,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 279230,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 253,
        "name": "Set light schedule with invalid schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-invalid-schedule;;3",
        "after": [
          {
            "result": {
              "duration": 39409,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6305,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6918195,
              "status": "passed"
            },
            "line": 233,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12840835,
              "status": "passed"
            },
            "line": 235,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1020007,
              "status": "passed"
            },
            "line": 245,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: triggerWindow may not be null when actionTime is set to SUNRISE or SUNSET and triggerType is LIGHT_TRIGGER;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.720Z",
        "before": [
          {
            "result": {
              "duration": 15706540,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3904896,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5201148,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 452906,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 254,
        "name": "Set light schedule with invalid schedule",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-invalid-schedule;;4",
        "after": [
          {
            "result": {
              "duration": 16557,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3524,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3118,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11332101,
              "status": "passed"
            },
            "line": 233,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13197491,
              "status": "passed"
            },
            "line": 235,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 708516,
              "status": "passed"
            },
            "line": 245,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: triggerWindow may not be null when actionTime is set to SUNRISE or SUNSET and triggerType is LIGHT_TRIGGER;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.775Z",
        "before": [
          {
            "result": {
              "duration": 16578344,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3758237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4914704,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 284492,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 277,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;2",
        "after": [
          {
            "result": {
              "duration": 18662,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4276,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2875,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7984505,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18608624,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 691878,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.834Z",
        "before": [
          {
            "result": {
              "duration": 14177338,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5214374,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4900431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 265318,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 278,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;3",
        "after": [
          {
            "result": {
              "duration": 17839,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4157,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2956,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8693834,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "READY_FOR_USE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19409158,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 648060,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.891Z",
        "before": [
          {
            "result": {
              "duration": 15244777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3820346,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4977831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 399903,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 279,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;4",
        "after": [
          {
            "result": {
              "duration": 17713,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3888,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9833256,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17634051,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 615724,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:53.948Z",
        "before": [
          {
            "result": {
              "duration": 14143126,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3677499,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4549922,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 334380,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 280,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;5",
        "after": [
          {
            "result": {
              "duration": 17040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3973,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7102839,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "RETURNED_TO_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20077261,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 681522,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:54.004Z",
        "before": [
          {
            "result": {
              "duration": 17868028,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3920401,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5457280,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 483636,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 281,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;6",
        "after": [
          {
            "result": {
              "duration": 17909,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4352,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 76039,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7985264,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "UNDER_TEST"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21125813,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 633036,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:54.066Z",
        "before": [
          {
            "result": {
              "duration": 15070838,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5392397,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5821315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 354781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 282,
        "name": "Set light schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;7",
        "after": [
          {
            "result": {
              "duration": 17056,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3627,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11174,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8606016,
              "status": "passed"
            },
            "line": 257,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19916825,
              "status": "passed"
            },
            "line": 260,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 644703,
              "status": "passed"
            },
            "line": 270,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:54.126Z",
        "before": [
          {
            "result": {
              "duration": 17432799,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4393956,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4835407,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 323503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 284,
        "name": "Set light schedule for inactive or unregistered device (is activated false)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-inactive-or-unregistered-device-(is-activated-false)",
        "after": [
          {
            "result": {
              "duration": 16873,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3495,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2691,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8279696,
              "status": "passed"
            },
            "line": 285,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22038146,
              "status": "passed"
            },
            "line": 288,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 794892,
              "status": "passed"
            },
            "line": 298,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:54.189Z",
        "before": [
          {
            "result": {
              "duration": 16050966,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4120407,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4960866,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 506492,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 303,
        "name": "Set light schedule for unregistered device (public key missing)",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-for-unregistered-device-(public-key-missing)",
        "after": [
          {
            "result": {
              "duration": 17099,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3724,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3293,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9458781,
              "status": "passed"
            },
            "line": 304,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17351394,
              "status": "passed"
            },
            "line": 307,
            "name": "receiving a set light schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  ""
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 707357,
              "status": "passed"
            },
            "line": 317,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "UNREGISTERED_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not registered"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:07:54.247Z",
        "before": [
          {
            "result": {
              "duration": 14270460,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3759696,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4584356,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 283249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 41992,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 366,
        "name": "Set light schedule with 50 schedules # Success",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-50-schedules-#-success;;2",
        "after": [
          {
            "result": {
              "duration": 27376,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3438,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3056,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11344773,
              "status": "passed"
            },
            "line": 325,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 727986,
              "status": "passed"
            },
            "line": 328,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218636,
              "status": "passed"
            },
            "line": 329,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 228131,
              "status": "passed"
            },
            "line": 330,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 164683,
              "status": "passed"
            },
            "line": 331,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154541,
              "status": "passed"
            },
            "line": 332,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 151505,
              "status": "passed"
            },
            "line": 333,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 151872,
              "status": "passed"
            },
            "line": 334,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155821,
              "status": "passed"
            },
            "line": 335,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169010,
              "status": "passed"
            },
            "line": 336,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154795,
              "status": "passed"
            },
            "line": 337,
            "name": "the device returns a set light schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 50
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 60
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetLightScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173767774,
              "status": "passed"
            },
            "line": 338,
            "name": "receiving a set light schedule request for 50 schedules",
            "match": {
              "arguments": [
                {
                  "val": "50",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 383107,
              "status": "passed"
            },
            "line": 348,
            "name": "the set light schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7001345211,
              "status": "passed"
            },
            "line": 350,
            "name": "I wait 7 seconds",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 7
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.common.WaitSteps.iWaitXSeconds(java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1040968,
              "status": "passed"
            },
            "line": 351,
            "name": "a set light schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 22
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 62
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetLightScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              },
              {
                "cells": [
                  "ScheduledTime",
                  "2016-12-15"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(SetLightScheduleSteps.java:298)\n\tat ✽.the platform buffers a set light schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature:361)\n",
              "duration": 30386097423,
              "status": "failed"
            },
            "line": 361,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:31.857Z",
        "before": [
          {
            "result": {
              "duration": 20126216,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4395009,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8938147,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 373525,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 388,
        "name": "Set light schedule with 2 schedules containing illegal combinations of ActionTime, TriggerWindow and TriggerType # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-2-schedules-containing-illegal-combinations-of-actiontime--triggerwindow-and-triggertype-#-fail;;2",
        "after": [
          {
            "result": {
              "duration": 37928,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5641,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10589074,
              "status": "passed"
            },
            "line": 369,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 87320205,
              "status": "passed"
            },
            "line": 372,
            "name": "receiving a set light schedule request for 2 schedules",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22085344,
              "status": "passed"
            },
            "line": 382,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:32.020Z",
        "before": [
          {
            "result": {
              "duration": 27331942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9204966,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11272353,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 874105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 389,
        "name": "Set light schedule with 2 schedules containing illegal combinations of ActionTime, TriggerWindow and TriggerType # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-2-schedules-containing-illegal-combinations-of-actiontime--triggerwindow-and-triggertype-#-fail;;3",
        "after": [
          {
            "result": {
              "duration": 25586,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5460,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2819,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18844843,
              "status": "passed"
            },
            "line": 369,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16899964,
              "status": "passed"
            },
            "line": 372,
            "name": "receiving a set light schedule request for 2 schedules",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13454559,
              "status": "passed"
            },
            "line": 382,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:32.124Z",
        "before": [
          {
            "result": {
              "duration": 15202678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3681795,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7492670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 347289,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 390,
        "name": "Set light schedule with 2 schedules containing illegal combinations of ActionTime, TriggerWindow and TriggerType # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-2-schedules-containing-illegal-combinations-of-actiontime--triggerwindow-and-triggertype-#-fail;;4",
        "after": [
          {
            "result": {
              "duration": 26978,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3948,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4021,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11131057,
              "status": "passed"
            },
            "line": 369,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14041441,
              "status": "passed"
            },
            "line": 372,
            "name": "receiving a set light schedule request for 2 schedules",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16097315,
              "status": "passed"
            },
            "line": 382,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:32.199Z",
        "before": [
          {
            "result": {
              "duration": 24985287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10837708,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11394867,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 765430,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 391,
        "name": "Set light schedule with 2 schedules containing illegal combinations of ActionTime, TriggerWindow and TriggerType # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-2-schedules-containing-illegal-combinations-of-actiontime--triggerwindow-and-triggertype-#-fail;;5",
        "after": [
          {
            "result": {
              "duration": 23665,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3973,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16885749,
              "status": "passed"
            },
            "line": 369,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 99119914,
              "status": "passed"
            },
            "line": 372,
            "name": "receiving a set light schedule request for 2 schedules",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNRISE"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11341359,
              "status": "passed"
            },
            "line": 382,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:32.379Z",
        "before": [
          {
            "result": {
              "duration": 19518695,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4363347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8961312,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 455173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 392,
        "name": "Set light schedule with 2 schedules containing illegal combinations of ActionTime, TriggerWindow and TriggerType # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-2-schedules-containing-illegal-combinations-of-actiontime--triggerwindow-and-triggertype-#-fail;;6",
        "after": [
          {
            "result": {
              "duration": 24460,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3834,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 18272,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12102842,
              "status": "passed"
            },
            "line": 369,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88548209,
              "status": "passed"
            },
            "line": 372,
            "name": "receiving a set light schedule request for 2 schedules",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ALL"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "SUNSET"
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "2,false,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "ASTRONOMICAL"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13966499,
              "status": "passed"
            },
            "line": 382,
            "name": "the platform buffers a set light schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.thePlatformBuffersASetLightScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:08:32.533Z",
        "before": [
          {
            "result": {
              "duration": 19220212,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4992941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7842078,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 321185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 415,
        "name": "Set light schedule with 51 schedules # Fail",
        "description": "",
        "id": "publiclightingschedulemanagement-set-light-schedule;set-light-schedule-with-51-schedules-#-fail;;2",
        "after": [
          {
            "result": {
              "duration": 20638,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5539,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4170,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11647848,
              "status": "passed"
            },
            "line": 395,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19254089,
              "status": "passed"
            },
            "line": 397,
            "name": "receiving a set light schedule request for 51 schedules",
            "match": {
              "arguments": [
                {
                  "val": "51",
                  "offset": 43
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.receivingASetLightScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "ActionTime",
                  "ABSOLUTETIME"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "LightValues",
                  "0,true,"
                ]
              },
              {
                "cells": [
                  "TriggerType",
                  "LIGHT_TRIGGER"
                ]
              },
              {
                "cells": [
                  "TriggerWindow",
                  "30,30"
                ]
              },
              {
                "cells": [
                  "ScheduledTime",
                  "2016-12-15"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 616747,
              "status": "passed"
            },
            "line": 408,
            "name": "the set light schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.schedulemanagement.SetLightScheduleSteps.theSetLightScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.e: \u0027ns2:Schedules\u0027 can occur a maximum of \u002750\u0027 times in the current sequence. This limit was exceeded. At this point one of \u0027{\"http://www.opensmartgridplatform.org/schemas/publiclighting/schedulemanagement/2014/10\":scheduled_time}\u0027 is expected."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@PublicLightingSetLightSchedule"
          }
        ]
      }
    ],
    "name": "PublicLightingScheduleManagement Set Light Schedule",
    "description": "  In order to ...\n  As a platform\n  I want to ...",
    "id": "publiclightingschedulemanagement-set-light-schedule",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/ScheduleManagement/SetLightSchedule.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@PublicLightingSetLightSchedule",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:08:32.607Z",
        "before": [
          {
            "result": {
              "duration": 16932986,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3917754,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6807304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 275358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 11,
        "name": "Do not clean non-obsolete response data",
        "description": "",
        "id": "publiclighting-housekeeping---response-data-cleanup-job;do-not-clean-non-obsolete-response-data",
        "after": [
          {
            "result": {
              "duration": 22820,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3904,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11605955,
              "status": "passed"
            },
            "line": 12,
            "name": "a public lighting response data record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.aPublicLightingResponseDataRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CreationTime",
                  "now"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org-TEST1024000000001-NOW-000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "5"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "DeviceIdentifcation",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "ResultType",
                  "OK"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5338463,
              "status": "passed"
            },
            "line": 20,
            "name": "the response data cleanup job runs",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.housekeeping.PublicLightingResponseDataCleanupJobSteps.theResponseDataCleanupJobRuns()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 65005017706,
              "status": "passed"
            },
            "line": 21,
            "name": "the public lighting cleanup job should not have removed the response data with correlation uid \"test-org-TEST1024000000001-NOW-000000000\"",
            "match": {
              "arguments": [
                {
                  "val": "test-org-TEST1024000000001-NOW-000000000",
                  "offset": 96
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.housekeeping.PublicLightingResponseDataCleanupJobSteps.thePublicLightingCleanupJobShouldNotHaveRemovedTheResponseData(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@NightlyBuildOnly"
          },
          {
            "name": "@Housekeeping"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:09:37.662Z",
        "before": [
          {
            "result": {
              "duration": 20985139,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3948947,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6175030,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 427668,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Clean obsolete response data",
        "description": "",
        "id": "publiclighting-housekeeping---response-data-cleanup-job;clean-obsolete-response-data",
        "after": [
          {
            "result": {
              "duration": 38297,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7635,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7465,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3930814,
              "status": "passed"
            },
            "line": 24,
            "name": "a public lighting response data record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.aPublicLightingResponseDataRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CreationTime",
                  "now - 1 months"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org-TEST1024000000001-20170101000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "5"
                ]
              },
              {
                "cells": [
                  "OrganizationIdentification",
                  "test-org"
                ]
              },
              {
                "cells": [
                  "DeviceIdentifcation",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "ResultType",
                  "OK"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 591804,
              "status": "passed"
            },
            "line": 32,
            "name": "the response data cleanup job runs",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.housekeeping.PublicLightingResponseDataCleanupJobSteps.theResponseDataCleanupJobRuns()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 23047865194,
              "status": "passed"
            },
            "line": 33,
            "name": "the public lighting cleanup job should have removed the response data with correlation uid \"test-org-TEST1024000000001-20170101000000000\"",
            "match": {
              "arguments": [
                {
                  "val": "test-org-TEST1024000000001-20170101000000000",
                  "offset": 92
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.housekeeping.PublicLightingResponseDataCleanupJobSteps.thePublicLightingCleanupJobShouldHaveRemovedTheResponseData(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@NightlyBuildOnly"
          },
          {
            "name": "@Housekeeping"
          }
        ]
      }
    ],
    "name": "PublicLighting Housekeeping - Response Data Cleanup Job",
    "description": "  As open smart grid platform\n  I want to clean up the response data\n  So that obsolete data is removed",
    "id": "publiclighting-housekeeping---response-data-cleanup-job",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/housekeeping/PublicLightingResponseDataCleanupJob.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@NightlyBuildOnly",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      },
      {
        "name": "@Housekeeping",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 45
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:10:00.753Z",
        "before": [
          {
            "result": {
              "duration": 15915105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3987280,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8379921,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 886146,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 11,
        "name": "Resend missed notifications",
        "description": "",
        "id": "publiclighting-notifications---resend-notifications;resend-missed-notifications",
        "after": [
          {
            "result": {
              "duration": 26530,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12999,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2723,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4788803,
              "status": "passed"
            },
            "line": 12,
            "name": "a public lighting response data record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.aPublicLightingResponseDataRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "CreationTime",
                  "now - 2 minutes"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170101000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59265768440,
              "status": "passed"
            },
            "line": 20,
            "name": "a notification is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.notification.PublicLightingNotificationSteps.aNotificationIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170101000000000"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 205118458,
              "status": "passed"
            },
            "line": 22,
            "name": "the public lighting response data has values",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.thePublicLightingResponseDataHasValues(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170101000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@ResendNotifications"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:11:00.264Z",
        "before": [
          {
            "result": {
              "duration": 18026944,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5343016,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5853179,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 372410,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 28,
        "name": "Don\u0027t send notifications when the configurable time has not passed",
        "description": "",
        "id": "publiclighting-notifications---resend-notifications;don-t-send-notifications-when-the-configurable-time-has-not-passed",
        "after": [
          {
            "result": {
              "duration": 19692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3732,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2665,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4272489,
              "status": "passed"
            },
            "line": 29,
            "name": "a public lighting response data record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.aPublicLightingResponseDataRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CreationTime",
                  "now + 5 minutes"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170201000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65001216796,
              "status": "passed"
            },
            "line": 36,
            "name": "no notification is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.notification.PublicLightingNotificationSteps.noNotificationIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170201000000000"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2591861,
              "status": "passed"
            },
            "line": 38,
            "name": "the public lighting response data has values",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.thePublicLightingResponseDataHasValues(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170201000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@ResendNotifications"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:12:05.305Z",
        "before": [
          {
            "result": {
              "duration": 16719919,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4455367,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5184974,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 415545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 44,
        "name": "Don\u0027t send notifications when the maximum of notifications sent has been reached",
        "description": "",
        "id": "publiclighting-notifications---resend-notifications;don-t-send-notifications-when-the-maximum-of-notifications-sent-has-been-reached",
        "after": [
          {
            "result": {
              "duration": 18579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3474,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5097978,
              "status": "passed"
            },
            "line": 45,
            "name": "a public lighting response data record",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.aPublicLightingResponseDataRecord(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "CreationTime",
                  "now - 5 minutes"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170301000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "3"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65000786010,
              "status": "passed"
            },
            "line": 53,
            "name": "no notification is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.notification.PublicLightingNotificationSteps.noNotificationIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170301000000000"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1688053,
              "status": "passed"
            },
            "line": 55,
            "name": "the public lighting response data has values",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.ws.WsPublicLightingResponseDataSteps.thePublicLightingResponseDataHasValues(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "MessageType",
                  "SET_LIGHT_SCHEDULE"
                ]
              },
              {
                "cells": [
                  "CorrelationUid",
                  "test-org|||TEST1024000000001|||20170301000000000"
                ]
              },
              {
                "cells": [
                  "NumberOfNotificationsSent",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@ResendNotifications"
          }
        ]
      }
    ],
    "name": "PublicLighting Notifications - Resend notifications",
    "description": "  As an OSGP user\n  I want the platform to resend missed notifications\n  So the notification mechanism is more robust",
    "id": "publiclighting-notifications---resend-notifications",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-publiclighting/notifications/PublicLightingResendNotifications.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@ResendNotifications",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:13:10.345Z",
        "before": [
          {
            "result": {
              "duration": 15880768,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4368363,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4761593,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 561211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 37,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;2",
        "after": [
          {
            "result": {
              "duration": 30228,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4645,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3034,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12790349,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 879652,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161398001,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 611285,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000622203,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30297214456,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:13:41.858Z",
        "before": [
          {
            "result": {
              "duration": 26248955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3483393,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8075046,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 748603,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;3",
        "after": [
          {
            "result": {
              "duration": 29320,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3368,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2523,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13443944,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 766961,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93665821,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 410394,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000580038,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30268713113,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:14:13.281Z",
        "before": [
          {
            "result": {
              "duration": 17992495,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5840469,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7689579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 361545,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47468,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;4",
        "after": [
          {
            "result": {
              "duration": 62744,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3145,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11840071,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 675915,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165691571,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 408600,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000558222,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30228314470,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:14:44.727Z",
        "before": [
          {
            "result": {
              "duration": 23068240,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5285261,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9737811,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 398899,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;5",
        "after": [
          {
            "result": {
              "duration": 29036,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12040995,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 711148,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134090617,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 449913,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000639220,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30176168993,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:15:16.095Z",
        "before": [
          {
            "result": {
              "duration": 18214696,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4587257,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8364770,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 533924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72164,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;6",
        "after": [
          {
            "result": {
              "duration": 36941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12656266,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 953194,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 114180942,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 478412,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000614814,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30171060652,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:15:47.434Z",
        "before": [
          {
            "result": {
              "duration": 21487621,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3976490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8212206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 699772,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49483,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;7",
        "after": [
          {
            "result": {
              "duration": 26590,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5424,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11906231,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1372285,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120338797,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 413645,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000652733,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30138752599,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:16:18.749Z",
        "before": [
          {
            "result": {
              "duration": 17601768,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4963464,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7606521,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 411488,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48867,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;8",
        "after": [
          {
            "result": {
              "duration": 26711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12265777,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 832124,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89337165,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 500688,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000682526,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30198371916,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:16:50.088Z",
        "before": [
          {
            "result": {
              "duration": 17610734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3829653,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8030390,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 554841,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44138,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;9",
        "after": [
          {
            "result": {
              "duration": 29001,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3405,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 17542,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12274458,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 796744,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91480567,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 749738,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000642886,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30205397866,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:17:21.436Z",
        "before": [
          {
            "result": {
              "duration": 22182846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4559698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7953239,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 518970,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 79469,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;10",
        "after": [
          {
            "result": {
              "duration": 41766,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12857039,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1213326,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85602633,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 398373,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000792020,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30168027036,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:17:52.747Z",
        "before": [
          {
            "result": {
              "duration": 16800126,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3965501,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 11223799,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 631281,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 50659,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;11",
        "after": [
          {
            "result": {
              "duration": 48739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 9083,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3734,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11752586,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 786201,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90160811,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 515842,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001198123,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30161896984,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:18:24.053Z",
        "before": [
          {
            "result": {
              "duration": 19396846,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3975283,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9146237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 494207,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 62137,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;12",
        "after": [
          {
            "result": {
              "duration": 26754,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 19260,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2910,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13096168,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2167911,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116850810,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 662398,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001649899,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30109911638,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:18:55.337Z",
        "before": [
          {
            "result": {
              "duration": 18417347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3598997,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9959666,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 684183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 60961,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;13",
        "after": [
          {
            "result": {
              "duration": 24583,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5345,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2949,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11357961,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 857465,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95472402,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 366976,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000641260,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30128348951,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:19:26.613Z",
        "before": [
          {
            "result": {
              "duration": 22302816,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3941919,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7333678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 479084,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 75789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;14",
        "after": [
          {
            "result": {
              "duration": 25123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2687,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13355021,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 770102,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 203559280,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 538752,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000582848,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30178686432,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:19:58.051Z",
        "before": [
          {
            "result": {
              "duration": 22278120,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4694917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7459256,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 668909,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 115935,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;15",
        "after": [
          {
            "result": {
              "duration": 24504,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13078265,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 856468,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123675662,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 476786,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000609185,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30111253508,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:20:29.343Z",
        "before": [
          {
            "result": {
              "duration": 19734510,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4524096,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8522628,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 609907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 46358,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 51,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;16",
        "after": [
          {
            "result": {
              "duration": 38624,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4401,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11193101,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 808927,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93483997,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 661270,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000766444,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30142771256,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:21:00.632Z",
        "before": [
          {
            "result": {
              "duration": 25132339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4556960,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10209702,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 608531,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 78310,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 52,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;17",
        "after": [
          {
            "result": {
              "duration": 46420,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7428,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13503937,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 948319,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83980863,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 860446,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000645306,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30153781212,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:21:31.933Z",
        "before": [
          {
            "result": {
              "duration": 39708310,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4544392,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9441815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 883967,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55948,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 53,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;18",
        "after": [
          {
            "result": {
              "duration": 27498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5582,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2421,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14649238,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981181,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99570690,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 876872,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001006588,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30123196970,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:22:03.234Z",
        "before": [
          {
            "result": {
              "duration": 23756793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5923186,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9713101,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 474379,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57753,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 54,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;19",
        "after": [
          {
            "result": {
              "duration": 173741,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6153,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13256832,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 798421,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92145061,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 513397,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000672775,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30137443701,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:22:34.530Z",
        "before": [
          {
            "result": {
              "duration": 35176512,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5936551,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 12634265,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 1748412,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 302689,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 55,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;20",
        "after": [
          {
            "result": {
              "duration": 77866,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 22339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6350,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16269665,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1535631,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107055365,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 524311,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000735847,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30194431397,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:23:05.914Z",
        "before": [
          {
            "result": {
              "duration": 20757184,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4080762,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7414820,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 400716,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 50763,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 56,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;21",
        "after": [
          {
            "result": {
              "duration": 64569,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 8192,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3722,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16172978,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 736070,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100344019,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 455116,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000672497,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30121985103,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:23:37.194Z",
        "before": [
          {
            "result": {
              "duration": 23568638,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13729511,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9995969,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 526199,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 90562,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 57,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;22",
        "after": [
          {
            "result": {
              "duration": 26288,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5304,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3092,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14475816,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1136791,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115606212,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 389604,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000544414,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30111998015,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "GPRS"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:24:08.492Z",
        "before": [
          {
            "result": {
              "duration": 18734248,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4357965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8382906,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 340185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44917,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 58,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;23",
        "after": [
          {
            "result": {
              "duration": 26533,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2680,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10941299,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 715128,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "HARDWARE_FAILURE"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110571235,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 379178,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000629840,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30105007762,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:24:39.757Z",
        "before": [
          {
            "result": {
              "duration": 20152535,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4685243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9279287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 356977,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 43845,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 59,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;24",
        "after": [
          {
            "result": {
              "duration": 24093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2758,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11425213,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 790744,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "LIGHT_EVENTS,TARIFF_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157175107,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 470014,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000621621,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30135606906,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "RELAY"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:25:11.105Z",
        "before": [
          {
            "result": {
              "duration": 17811946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5373277,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7503208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 445979,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 58269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 60,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;25",
        "after": [
          {
            "result": {
              "duration": 25508,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3383,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2491,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12113730,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 940797,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  "DIAG_EVENTS,HARDWARE_FAILURE,LIGHT_EVENTS,TARIFF_EVENTS,MONITOR_EVENTS,FIRMWARE_EVENTS,COMM_EVENTS"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94278723,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 632219,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000595964,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30126234087,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:25:42.377Z",
        "before": [
          {
            "result": {
              "duration": 20617777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4064057,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8899443,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 391662,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 45098,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 61,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;26",
        "after": [
          {
            "result": {
              "duration": 28165,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4143,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3294,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11439048,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 691638,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77354583,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 407892,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000629021,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30086836840,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "ETHERNET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:26:13.594Z",
        "before": [
          {
            "result": {
              "duration": 21772712,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4149624,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7519402,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 412433,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49728,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 62,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;27",
        "after": [
          {
            "result": {
              "duration": 90431,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2270,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13438863,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 729555,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103923571,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419485,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000651678,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30066829704,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "ONE_TO_TEN_VOLT_REVERSE"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:26:44.821Z",
        "before": [
          {
            "result": {
              "duration": 19117830,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3792729,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6860882,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 332226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 59789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 63,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;28",
        "after": [
          {
            "result": {
              "duration": 27360,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4453,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2772,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10430144,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 691586,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103957388,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 536771,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000643237,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30062994127,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "CDMA"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "DALI"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:16.035Z",
        "before": [
          {
            "result": {
              "duration": 19781705,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4290703,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7820014,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 439026,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 64,
        "name": "Get Status from a device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-from-a-device;;29",
        "after": [
          {
            "result": {
              "duration": 32671,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2707,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14961873,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Status",
                  "Active"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "LIGHT"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1024326,
              "status": "passed"
            },
            "line": 18,
            "name": "the device returns a get status response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 42
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsAGetStatusResponseWithResultOverOslp(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "PreferredLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  "LINK_NOT_SET"
                ]
              },
              {
                "cells": [
                  "LightType",
                  "LT_NOT_SET"
                ]
              },
              {
                "cells": [
                  "EventNotifications",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true;2,true;3,true;4,true;5,true;6,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156021540,
              "status": "passed"
            },
            "line": 24,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 393170,
              "status": "passed"
            },
            "line": 26,
            "name": "the get tariff status async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetTariffStatusAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000672983,
              "status": "passed"
            },
            "line": 28,
            "name": "a get status \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 14
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 54
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aGetStatusOslpMessageIsSentToDevice(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(GetStatusSteps.java:292)\n\tat ✽.the platform buffers a get tariff status response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature:29)\n",
              "duration": 30280507831,
              "status": "failed"
            },
            "line": 29,
            "name": "the platform buffers a get tariff status response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 70
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.thePlatformBuffersAGetTariffStatusResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              },
              {
                "cells": [
                  "PreferredLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "ActualLinkType",
                  ""
                ]
              },
              {
                "cells": [
                  "LightType",
                  ""
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.527Z",
        "before": [
          {
            "result": {
              "duration": 19835400,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3927794,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7903375,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 409110,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 66,
        "name": "Get status as an unknown organization",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-as-an-unknown-organization",
        "after": [
          {
            "result": {
              "duration": 19764,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2988,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33399080,
              "status": "passed"
            },
            "line": 67,
            "name": "receiving a get tariff status request by an unknown organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequestByAnUnknownOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1469507,
              "status": "passed"
            },
            "line": 69,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_ORGANISATION"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.598Z",
        "before": [
          {
            "result": {
              "duration": 18599820,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4556305,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6312851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 404637,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 72,
        "name": "Get status for an unknown device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-for-an-unknown-device",
        "after": [
          {
            "result": {
              "duration": 33859,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5429,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4368,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21705994,
              "status": "passed"
            },
            "line": 73,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 694579,
              "status": "passed"
            },
            "line": 75,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNKNOWN_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.657Z",
        "before": [
          {
            "result": {
              "duration": 17969536,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5542887,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7224672,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 351776,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 90,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-for-an-inactive-device;;2",
        "after": [
          {
            "result": {
              "duration": 14857,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3472,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2874,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11219902,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27739802,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 622593,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.733Z",
        "before": [
          {
            "result": {
              "duration": 16396922,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4542602,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6644387,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 575900,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 91,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-for-an-inactive-device;;3",
        "after": [
          {
            "result": {
              "duration": 15087,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3728,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3252,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7509310,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28711168,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 678559,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.803Z",
        "before": [
          {
            "result": {
              "duration": 17238823,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4817824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5759663,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 402805,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 92,
        "name": "Get status for an inactive device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-for-an-inactive-device;;4",
        "after": [
          {
            "result": {
              "duration": 14490,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3799,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3147,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8059027,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25754375,
              "status": "passed"
            },
            "line": 83,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 602835,
              "status": "passed"
            },
            "line": 85,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "INACTIVE_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:27:47.870Z",
        "before": [
          {
            "result": {
              "duration": 14524315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5197693,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5386215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 308131,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 94,
        "name": "Get status for an unregistered device",
        "description": "",
        "id": "tariffswitchingadhocmanagement-gettariffstatus;get-status-for-an-unregistered-device",
        "after": [
          {
            "result": {
              "duration": 16258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6051,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3682,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7173060,
              "status": "passed"
            },
            "line": 95,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25432118,
              "status": "passed"
            },
            "line": 98,
            "name": "receiving a get tariff status request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.receivingAGetTariffStatusRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 649067,
              "status": "passed"
            },
            "line": 100,
            "name": "the get status response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.publiclighting.adhocmanagement.GetStatusSteps.theGetStatusResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "UNREGISTERED_DEVICE"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingAdhocManagement"
          }
        ]
      }
    ],
    "name": "TariffSwitchingAdhocManagement GetTariffStatus",
    "description": "  As a platform \n  I want to asynchronously handle get tariff status requests\n  In order to ...",
    "id": "tariffswitchingadhocmanagement-gettariffstatus",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/AdHocManagement/GetTariffStatus.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@TariffSwitchingAdhocManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:27:47.935Z",
        "before": [
          {
            "result": {
              "duration": 14569946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4089078,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4462460,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 282010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48112,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 25501,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2706,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11382931,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 707923,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138058442,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 717129,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000862110,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30170027365,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:28:19.290Z",
        "before": [
          {
            "result": {
              "duration": 20500609,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5242954,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7939652,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 415442,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 85600,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;3",
        "after": [
          {
            "result": {
              "duration": 40591,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 21410,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10625093,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 735095,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108147550,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "WEEKDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "21:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 656769,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001007093,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "WEEKDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "21:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30027032618,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:28:50.481Z",
        "before": [
          {
            "result": {
              "duration": 18607270,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4368713,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8151406,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 394573,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55969,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;4",
        "after": [
          {
            "result": {
              "duration": 26937,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3525,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2706,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13179053,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 608442,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83766873,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 460124,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000976306,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30118626350,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:29:21.736Z",
        "before": [
          {
            "result": {
              "duration": 18521772,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4404465,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7406418,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 431069,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 55839,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;5",
        "after": [
          {
            "result": {
              "duration": 47093,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4164,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2842,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15165783,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 659776,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 118157408,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 386507,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000917343,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30494751160,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:29:53.403Z",
        "before": [
          {
            "result": {
              "duration": 21089448,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4228835,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8539369,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 408854,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54226,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;6",
        "after": [
          {
            "result": {
              "duration": 26241,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2582,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11553992,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 750622,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94052065,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 486958,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000897139,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30434980677,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:24.987Z",
        "before": [
          {
            "result": {
              "duration": 23356010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4326503,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7229842,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 381712,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule;;7",
        "after": [
          {
            "result": {
              "duration": 44421,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3341,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2661,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10611249,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 590384,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99762077,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 423792,
              "status": "passed"
            },
            "line": 25,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000874987,
              "status": "passed"
            },
            "line": 27,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(SetReverseTariffScheduleSteps.java:62)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:33)\n",
              "duration": 30441951643,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:56.582Z",
        "before": [
          {
            "result": {
              "duration": 22791496,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5058005,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10692121,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 641635,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 102197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 73,
        "name": "Failed set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;failed-set-reverse-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 22263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3572,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2575,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16100144,
              "status": "passed"
            },
            "line": 47,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1306596,
              "status": "passed"
            },
            "line": 51,
            "name": "the device returns a set reverse tariff schedule response \"FAILURE\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "FAILURE",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 74
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112493247,
              "status": "passed"
            },
            "line": 52,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 574832,
              "status": "passed"
            },
            "line": 59,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001166118,
              "status": "passed"
            },
            "line": 61,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (1 failure)\n-- failure 1 --\n[Message] \nExpecting:\n \u003c\"CorrelationUid is unknown.\"\u003e\nto be equal to:\n \u003c\"Device reports failure\"\u003e\nbut was not.\nat GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:114)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:116)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:42)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(SetTariffScheduleSteps.java:273)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(SetReverseTariffScheduleSteps.java:72)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:68)\n",
              "duration": 24755152,
              "status": "failed"
            },
            "line": 68,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports failure"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:57.786Z",
        "before": [
          {
            "result": {
              "duration": 19758335,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4210465,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8000540,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 547579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 73739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 103,
        "name": "Rejected set reverse tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;rejected-set-reverse-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 36211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4774,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3489,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12754846,
              "status": "passed"
            },
            "line": 77,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 562573,
              "status": "passed"
            },
            "line": 81,
            "name": "the device returns a set reverse tariff schedule response \"REJECTED\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "REJECTED",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 75
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88740777,
              "status": "passed"
            },
            "line": 82,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 406630,
              "status": "passed"
            },
            "line": 89,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000856844,
              "status": "passed"
            },
            "line": 91,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (1 failure)\n-- failure 1 --\n[Message] \nExpecting:\n \u003c\"CorrelationUid is unknown.\"\u003e\nto be equal to:\n \u003c\"Device reports rejected\"\u003e\nbut was not.\nat GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:114)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:116)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:42)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(SetTariffScheduleSteps.java:273)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(SetReverseTariffScheduleSteps.java:72)\n\tat ✽.the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature:98)\n",
              "duration": 18456152,
              "status": "failed"
            },
            "line": 98,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports rejected"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:58.949Z",
        "before": [
          {
            "result": {
              "duration": 22136403,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4959470,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10976248,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 666869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 105,
        "name": "Set reverse tariff schedule with invalid schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-with-invalid-schedule",
        "after": [
          {
            "result": {
              "duration": 15089,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 7218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 6185,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12833279,
              "status": "passed"
            },
            "line": 106,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22258241,
              "status": "passed"
            },
            "line": 109,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 641824,
              "status": "passed"
            },
            "line": 116,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: startDay may not be null when weekDay is set to ABSOLUTEDAY;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.031Z",
        "before": [
          {
            "result": {
              "duration": 15822142,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5396043,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7920173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 574793,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 139,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;2",
        "after": [
          {
            "result": {
              "duration": 15042,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4370,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3155,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9979063,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28139624,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 703896,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.106Z",
        "before": [
          {
            "result": {
              "duration": 15835782,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4712388,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5491810,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 338657,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 140,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;3",
        "after": [
          {
            "result": {
              "duration": 15502,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3463,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3151,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9528909,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "READY_FOR_USE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21901625,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 623998,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.169Z",
        "before": [
          {
            "result": {
              "duration": 17416940,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5189378,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4886268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 305955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 141,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;4",
        "after": [
          {
            "result": {
              "duration": 15739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3804,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2967,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7599919,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21463659,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 652468,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.231Z",
        "before": [
          {
            "result": {
              "duration": 15796183,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3838987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4741969,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 347623,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 142,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;5",
        "after": [
          {
            "result": {
              "duration": 16745,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3646,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3134,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9467239,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "RETURNED_TO_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19711876,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 797302,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.291Z",
        "before": [
          {
            "result": {
              "duration": 15069109,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3883243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4694725,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 278255,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 143,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;6",
        "after": [
          {
            "result": {
              "duration": 16044,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3953,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2806,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8651454,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "UNDER_TEST"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18601748,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 627697,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.347Z",
        "before": [
          {
            "result": {
              "duration": 15309883,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3715517,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5086315,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 307253,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 144,
        "name": "Set reverse tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;7",
        "after": [
          {
            "result": {
              "duration": 16913,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3890,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2544,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8715491,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25986337,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 773968,
              "status": "passed"
            },
            "line": 132,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.411Z",
        "before": [
          {
            "result": {
              "duration": 16109821,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4166382,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7298629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 541539,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 146,
        "name": "Set reverse tariff schedule for inactive or unregistered device (is activated false)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-inactive-or-unregistered-device-(is-activated-false)",
        "after": [
          {
            "result": {
              "duration": 15777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3672,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3007,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8474645,
              "status": "passed"
            },
            "line": 147,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20949254,
              "status": "passed"
            },
            "line": 150,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 716760,
              "status": "passed"
            },
            "line": 157,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.475Z",
        "before": [
          {
            "result": {
              "duration": 13948074,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3672237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5330726,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 279777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 162,
        "name": "Set reverse tariff schedule for unregistered device (public key missing)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-for-unregistered-device-(public-key-missing)",
        "after": [
          {
            "result": {
              "duration": 15310,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3066,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3137,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8568793,
              "status": "passed"
            },
            "line": 163,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18048443,
              "status": "passed"
            },
            "line": 166,
            "name": "receiving a set reverse tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 798318,
              "status": "passed"
            },
            "line": 173,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "UNREGISTERED_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not registered"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:30:59.530Z",
        "before": [
          {
            "result": {
              "duration": 14123500,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3682566,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4652478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 269602,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 41098,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 207,
        "name": "Set reverse tariff schedule with 50 schedules # Success",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-with-50-schedules-#-success;;2",
        "after": [
          {
            "result": {
              "duration": 21849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4135,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10774456,
              "status": "passed"
            },
            "line": 181,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 761042,
              "status": "passed"
            },
            "line": 185,
            "name": "the device returns a set reverse tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 59
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetReverseTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120145237,
              "status": "passed"
            },
            "line": 186,
            "name": "receiving a set reverse tariff schedule request for 50 schedules",
            "match": {
              "arguments": [
                {
                  "val": "50",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1069415,
              "status": "passed"
            },
            "line": 193,
            "name": "the set reverse tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001901847,
              "status": "passed"
            },
            "line": 195,
            "name": "a set reverse tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 31
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 71
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetReverseTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33998055,
              "status": "passed"
            },
            "line": 201,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "CorrelationUid is unknown."
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:31:00.729Z",
        "before": [
          {
            "result": {
              "duration": 18861177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4420633,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9275716,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 631091,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 209,
        "name": "Set reverse tariff schedule with 51 schedules # Fail",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule;set-reverse-tariff-schedule-with-51-schedules-#-fail",
        "after": [
          {
            "result": {
              "duration": 13365,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10827088,
              "status": "passed"
            },
            "line": 210,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF_REVERSED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21616701,
              "status": "passed"
            },
            "line": 213,
            "name": "receiving a set reverse tariff schedule request for 51 schedules",
            "match": {
              "arguments": [
                {
                  "val": "51",
                  "offset": 52
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.receivingASetReverseTariffScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              },
              {
                "cells": [
                  "ScheduledTime",
                  "2016-12-15"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 411858,
              "status": "passed"
            },
            "line": 221,
            "name": "the set reverse tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.theSetReverseTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.e: \u0027ns2:Schedules\u0027 can occur a maximum of \u002750\u0027 times in the current sequence. This limit was exceeded. At this point one of \u0027{\"http://www.opensmartgridplatform.org/schemas/tariffswitching/schedulemanagement/2014/10\":Page, \"http://www.opensmartgridplatform.org/schemas/tariffswitching/schedulemanagement/2014/10\":scheduled_time}\u0027 is expected."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      }
    ],
    "name": "TariffSwitchingScheduleManagement Set Reverse Tariff Schedule",
    "description": "  In order to ... \n  As a platform \n  I want to ...",
    "id": "tariffswitchingschedulemanagement-set-reverse-tariff-schedule",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetReverseTariffSchedule.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@TariffSwitchingScheduleManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:31:00.801Z",
        "before": [
          {
            "result": {
              "duration": 14168742,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4633370,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6117348,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 480408,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 83122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 45548,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5450,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2855,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15729992,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 625059,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72052260,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 417744,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000796443,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "08:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30388552324,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:31:32.315Z",
        "before": [
          {
            "result": {
              "duration": 26607298,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3757082,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8993281,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 418690,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 56894,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;3",
        "after": [
          {
            "result": {
              "duration": 23913,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3423,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2927,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13055262,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 712655,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92456827,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "WEEKDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "21:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 400153,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000846287,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "WEEKDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "21:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30387684898,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:32:03.857Z",
        "before": [
          {
            "result": {
              "duration": 22289171,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5419546,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8958543,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 345580,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 45261,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;4",
        "after": [
          {
            "result": {
              "duration": 25450,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3702,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3141,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12547488,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 773540,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84224106,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401744,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001244206,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30369500771,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:32:35.368Z",
        "before": [
          {
            "result": {
              "duration": 18360211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5374237,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8253812,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 485607,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 59805,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;5",
        "after": [
          {
            "result": {
              "duration": 23123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 19854,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2381,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10644721,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 610345,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79226677,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 447112,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001103198,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2013-03-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30333665234,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:33:06.833Z",
        "before": [
          {
            "result": {
              "duration": 17977076,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4019010,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6860211,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 335003,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 46705,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;6",
        "after": [
          {
            "result": {
              "duration": 25831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4026,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3057,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12420816,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 581935,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94835011,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 473349,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000820353,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  ""
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "1,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30359385022,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:33:38.337Z",
        "before": [
          {
            "result": {
              "duration": 20346603,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5402004,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7019208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 352875,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48178,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule;;7",
        "after": [
          {
            "result": {
              "duration": 24616,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3111,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2833,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10180113,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 735181,
              "status": "passed"
            },
            "line": 17,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90308408,
              "status": "passed"
            },
            "line": 18,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 495155,
              "status": "passed"
            },
            "line": 25,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000907059,
              "status": "passed"
            },
            "line": 27,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(SetTariffScheduleSteps.java:236)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:33)\n",
              "duration": 30334744507,
              "status": "failed"
            },
            "line": 33,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDevice(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Result",
                  "OK"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:09.815Z",
        "before": [
          {
            "result": {
              "duration": 22450078,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3914641,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9340068,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 402461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 59373,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 73,
        "name": "Failed set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;failed-set-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 22526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3883,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10840063,
              "status": "passed"
            },
            "line": 47,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 953450,
              "status": "passed"
            },
            "line": 51,
            "name": "the device returns a set tariff schedule response \"FAILURE\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "FAILURE",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 66
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86690450,
              "status": "passed"
            },
            "line": 52,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 499540,
              "status": "passed"
            },
            "line": 59,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000854525,
              "status": "passed"
            },
            "line": 61,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (1 failure)\n-- failure 1 --\n[Message] \nExpecting:\n \u003c\"CorrelationUid is unknown.\"\u003e\nto be equal to:\n \u003c\"Device reports failure\"\u003e\nbut was not.\nat GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:114)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:116)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:42)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(SetTariffScheduleSteps.java:273)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:68)\n",
              "duration": 26544692,
              "status": "failed"
            },
            "line": 68,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports failure"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:10.984Z",
        "before": [
          {
            "result": {
              "duration": 19348508,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4275111,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6731929,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 340000,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 44529,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 103,
        "name": "Rejected set tariff schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;rejected-set-tariff-schedule;;2",
        "after": [
          {
            "result": {
              "duration": 31446,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4777,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11462847,
              "status": "passed"
            },
            "line": 77,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 564104,
              "status": "passed"
            },
            "line": 81,
            "name": "the device returns a set tariff schedule response \"REJECTED\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "REJECTED",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 67
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83093866,
              "status": "passed"
            },
            "line": 82,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 505208,
              "status": "passed"
            },
            "line": 89,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000963256,
              "status": "passed"
            },
            "line": 91,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (1 failure)\n-- failure 1 --\n[Message] \nExpecting:\n \u003c\"CorrelationUid is unknown.\"\u003e\nto be equal to:\n \u003c\"Device reports rejected\"\u003e\nbut was not.\nat GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:114)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.assertFaultDetailMap(GenericResponseSteps.java:116)\n\tat org.opensmartgridplatform.cucumber.platform.glue.steps.ws.GenericResponseSteps.verifySoapFault(GenericResponseSteps.java:42)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(SetTariffScheduleSteps.java:273)\n\tat ✽.the platform buffers a set tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault(classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature:98)\n",
              "duration": 13129813,
              "status": "failed"
            },
            "line": 98,
            "name": "the platform buffers a set tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 72
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.thePlatformBuffersASetTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Device reports rejected"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.132Z",
        "before": [
          {
            "result": {
              "duration": 17049947,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3575650,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7855683,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 722491,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 105,
        "name": "Set tariff schedule with invalid schedule",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-with-invalid-schedule",
        "after": [
          {
            "result": {
              "duration": 14859,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 12869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2800,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8151108,
              "status": "passed"
            },
            "line": 106,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11365283,
              "status": "passed"
            },
            "line": 109,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 711041,
              "status": "passed"
            },
            "line": 116,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "VALIDATION_ERROR"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Validation Exception, violations: startDay may not be null when weekDay is set to ABSOLUTEDAY;"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.185Z",
        "before": [
          {
            "result": {
              "duration": 19864788,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4495438,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4451404,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 299289,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 139,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;2",
        "after": [
          {
            "result": {
              "duration": 14992,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3827,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3548,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6864836,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "NEW_IN_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16738063,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 774254,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.244Z",
        "before": [
          {
            "result": {
              "duration": 13495869,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3563004,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4649325,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 279896,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 140,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;3",
        "after": [
          {
            "result": {
              "duration": 17889,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3853,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6744191,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "READY_FOR_USE"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17199453,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 728750,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.295Z",
        "before": [
          {
            "result": {
              "duration": 15210058,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4585384,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4734241,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 475377,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 141,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;4",
        "after": [
          {
            "result": {
              "duration": 14421,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3820,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 15133,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7524048,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "REGISTERED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18046076,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 706918,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.351Z",
        "before": [
          {
            "result": {
              "duration": 16819650,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3504908,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5097840,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 297339,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 142,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;5",
        "after": [
          {
            "result": {
              "duration": 13781,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4071,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3016,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7957113,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "RETURNED_TO_INVENTORY"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23745747,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 606841,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.413Z",
        "before": [
          {
            "result": {
              "duration": 14306123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3930551,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5385776,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 336766,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 143,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;6",
        "after": [
          {
            "result": {
              "duration": 16323,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3831,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2496,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8952861,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "UNDER_TEST"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17603975,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 787471,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.469Z",
        "before": [
          {
            "result": {
              "duration": 13044479,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3520316,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4503362,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 321940,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 144,
        "name": "Set tariff schedule for inactive or unregistered device (device lifecycle state)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(device-lifecycle-state);;7",
        "after": [
          {
            "result": {
              "duration": 15149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3397,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3047,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8973609,
              "status": "passed"
            },
            "line": 122,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "DeviceLifecycleStatus",
                  "DESTROYED"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17504461,
              "status": "passed"
            },
            "line": 125,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 882514,
              "status": "passed"
            },
            "line": 132,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.522Z",
        "before": [
          {
            "result": {
              "duration": 16850284,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3873443,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4382684,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 274930,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 146,
        "name": "Set tariff schedule for inactive or unregistered device (is activated false)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-inactive-or-unregistered-device-(is-activated-false)",
        "after": [
          {
            "result": {
              "duration": 15876,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3907,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2412,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6989403,
              "status": "passed"
            },
            "line": 147,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Activated",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19091037,
              "status": "passed"
            },
            "line": 150,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 711956,
              "status": "passed"
            },
            "line": 157,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "INACTIVE_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not active in the platform"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.578Z",
        "before": [
          {
            "result": {
              "duration": 13558416,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3524886,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4371629,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 275799,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 162,
        "name": "Set tariff schedule for unregistered device (public key missing)",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-for-unregistered-device-(public-key-missing)",
        "after": [
          {
            "result": {
              "duration": 34173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3493,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2536,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6521267,
              "status": "passed"
            },
            "line": 163,
            "name": "an ssld device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.SsldDeviceSteps.anSsldDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "PublicKeyPresent",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16920409,
              "status": "passed"
            },
            "line": 166,
            "name": "receiving a set tariff schedule request",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequest(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "MONDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  ""
                ]
              },
              {
                "cells": [
                  "EndDay",
                  ""
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 653461,
              "status": "passed"
            },
            "line": 173,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "UNREGISTERED_DEVICE"
                ]
              },
              {
                "cells": [
                  "InnerMessage",
                  "Device TEST1024000000001 is not registered"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:12.629Z",
        "before": [
          {
            "result": {
              "duration": 15706833,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3619267,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4490924,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 340105,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 57959,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 208,
        "name": "Set tariff schedule with 50 schedules # Success",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-with-50-schedules-#-success;;2",
        "after": [
          {
            "result": {
              "duration": 29915,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 24767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4206,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9854348,
              "status": "passed"
            },
            "line": 181,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 554643,
              "status": "passed"
            },
            "line": 185,
            "name": "the device returns a set tariff schedule response \"OK\" over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 51
                },
                {
                  "val": "OSLP ELSTER",
                  "offset": 61
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceReturnsASetTariffScheduleResponseOverOslp(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89611697,
              "status": "passed"
            },
            "line": 186,
            "name": "receiving a set tariff schedule request for 50 schedules",
            "match": {
              "arguments": [
                {
                  "val": "50",
                  "offset": 44
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 536473,
              "status": "passed"
            },
            "line": 193,
            "name": "the set tariff schedule async response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleAsyncResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001107849,
              "status": "passed"
            },
            "line": 195,
            "name": "a set tariff schedule \"OSLP ELSTER\" message is sent to device \"TEST1024000000001\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 23
                },
                {
                  "val": "TEST1024000000001",
                  "offset": 63
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.aSetTariffScheduleOslpMessageIsSentToDevice(java.lang.String,java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              },
              {
                "cells": [
                  "ScheduledTime",
                  "2016-12-15"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14157726,
              "status": "passed"
            },
            "line": 202,
            "name": "the platform buffers a set reverse tariff schedule response message for device \"TEST1024000000001\" that contains a soap fault",
            "match": {
              "arguments": [
                {
                  "val": "TEST1024000000001",
                  "offset": 80
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetReverseTariffScheduleSteps.thePlatformBuffersASetReverseTariffScheduleResponseMessageForDeviceContainsSoapFault(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Server"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "CorrelationUid is unknown."
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:13.777Z",
        "before": [
          {
            "result": {
              "duration": 18701040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3915655,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8146700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 483974,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 229,
        "name": "Set tariff schedule with 51 schedules # Fail",
        "description": "",
        "id": "tariffswitchingschedulemanagement-set-tariff-schedule;set-tariff-schedule-with-51-schedules-#-fail;;2",
        "after": [
          {
            "result": {
              "duration": 12849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3221,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2721,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12326759,
              "status": "passed"
            },
            "line": 211,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "RelayType",
                  "TARIFF"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14585988,
              "status": "passed"
            },
            "line": 214,
            "name": "receiving a set tariff schedule request for 51 schedules",
            "match": {
              "arguments": [
                {
                  "val": "51",
                  "offset": 44
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.receivingASetTariffScheduleRequestForSchedules(java.lang.Integer,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "WeekDay",
                  "ABSOLUTEDAY"
                ]
              },
              {
                "cells": [
                  "StartDay",
                  "2016-01-01"
                ]
              },
              {
                "cells": [
                  "EndDay",
                  "2016-12-31"
                ]
              },
              {
                "cells": [
                  "Time",
                  "18:00:00.000"
                ]
              },
              {
                "cells": [
                  "TariffValues",
                  "0,true"
                ]
              },
              {
                "cells": [
                  "ScheduledTime",
                  "2016-12-15"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 399121,
              "status": "passed"
            },
            "line": 222,
            "name": "the set tariff schedule response contains soap fault",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.ws.tariffswitching.schedulemanagement.SetTariffScheduleSteps.theSetTariffScheduleResponseContainsSoapFault(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "FaultCode",
                  "SOAP-ENV:Client"
                ]
              },
              {
                "cells": [
                  "FaultString",
                  "Validation error"
                ]
              },
              {
                "cells": [
                  "ValidationErrors",
                  "cvc-complex-type.2.4.e: \u0027ns2:Schedules\u0027 can occur a maximum of \u002750\u0027 times in the current sequence. This limit was exceeded. At this point one of \u0027{\"http://www.opensmartgridplatform.org/schemas/tariffswitching/schedulemanagement/2014/10\":Page, \"http://www.opensmartgridplatform.org/schemas/tariffswitching/schedulemanagement/2014/10\":scheduled_time}\u0027 is expected."
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@TariffSwitchingScheduleManagement"
          }
        ]
      }
    ],
    "name": "TariffSwitchingScheduleManagement Set Tariff Schedule",
    "description": "  In order to ... \n  As a platform \n  I want to ...",
    "id": "tariffswitchingschedulemanagement-set-tariff-schedule",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/osgp-adapter-ws-tariffswitching/ScheduleManagement/SetTariffSchedule.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@TariffSwitchingScheduleManagement",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:34:13.842Z",
        "before": [
          {
            "result": {
              "duration": 19817283,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4724268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8928346,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 545411,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 111379,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 33,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;2",
        "after": [
          {
            "result": {
              "duration": 17664,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4305,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3119,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12190034,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 3934241,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 139545,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 161125,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:13.903Z",
        "before": [
          {
            "result": {
              "duration": 14372273,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5752450,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9036173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 416127,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 72912,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 34,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;3",
        "after": [
          {
            "result": {
              "duration": 13612,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4187,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2805,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11213916,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 3413301,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "HARDWARE_FAILURE_RELAY"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 147715,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 167645,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "HARDWARE_FAILURE_RELAY"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:13.953Z",
        "before": [
          {
            "result": {
              "duration": 14128269,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4281731,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7333286,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 340145,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54941,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 35,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;4",
        "after": [
          {
            "result": {
              "duration": 14849,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4620,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 83631,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13463558,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2703056,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_DALI_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 142405,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 169848,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_DALI_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.000Z",
        "before": [
          {
            "result": {
              "duration": 15863001,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3799854,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9285575,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 306685,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49775,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 36,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;5",
        "after": [
          {
            "result": {
              "duration": 10309,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4208,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2962,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11061235,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2775703,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_BALLAST"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 132015,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 165517,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_BALLAST"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.048Z",
        "before": [
          {
            "result": {
              "duration": 13742357,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5351386,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7259348,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 300287,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49518,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 37,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;6",
        "after": [
          {
            "result": {
              "duration": 11752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3740,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2588,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9565125,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2914742,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 178191,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173097,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.093Z",
        "before": [
          {
            "result": {
              "duration": 12674370,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4184133,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7076886,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 414852,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54112,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 38,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;7",
        "after": [
          {
            "result": {
              "duration": 15220,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3597,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2478,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12854641,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2741639,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 225311,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 284319,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.138Z",
        "before": [
          {
            "result": {
              "duration": 15077854,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3772607,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7631626,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 302281,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 46817,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 39,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;8",
        "after": [
          {
            "result": {
              "duration": 11085,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3691,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2552,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11618562,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2604486,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "MONITOR_EVENTS_LONG_BUFFER_FULL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 149692,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 170970,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "MONITOR_EVENTS_LONG_BUFFER_FULL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.183Z",
        "before": [
          {
            "result": {
              "duration": 13615526,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3961461,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10343589,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 452637,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 51965,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 40,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;9",
        "after": [
          {
            "result": {
              "duration": 7910,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3942,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2139,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10107067,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2365028,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_ACTIVATING"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140428,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 174250,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_ACTIVATING"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.229Z",
        "before": [
          {
            "result": {
              "duration": 13017003,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3660119,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6778419,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 273150,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 42302,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 41,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;10",
        "after": [
          {
            "result": {
              "duration": 9113,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3380,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2367,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9198631,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2424875,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_DOWNLOAD_NOTFOUND"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128570,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 158888,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_DOWNLOAD_NOTFOUND"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.269Z",
        "before": [
          {
            "result": {
              "duration": 13065533,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3636751,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9889992,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 527579,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 60835,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 42,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;11",
        "after": [
          {
            "result": {
              "duration": 9146,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2798,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10560,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11184394,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2416001,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_DOWNLOAD_FAILED"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 153412,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 185899,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "FIRMWARE_EVENTS_DOWNLOAD_FAILED"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.315Z",
        "before": [
          {
            "result": {
              "duration": 13931480,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4117123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7714743,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 384396,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 40451,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 43,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;12",
        "after": [
          {
            "result": {
              "duration": 9235,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2687,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10749132,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2473939,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_TARIFF_SWITCH_ATTEMPT"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137222,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 162726,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_TARIFF_SWITCH_ATTEMPT"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.359Z",
        "before": [
          {
            "result": {
              "duration": 14102785,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4147821,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9518243,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 323960,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 53173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 44,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;13",
        "after": [
          {
            "result": {
              "duration": 9712,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3435,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2789,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11805820,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2453734,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "TARIFF_EVENTS_TARIFF_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128027,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 157460,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "TARIFF_EVENTS_TARIFF_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.406Z",
        "before": [
          {
            "result": {
              "duration": 12421621,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3433691,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8413821,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 299748,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 39952,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 45,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;14",
        "after": [
          {
            "result": {
              "duration": 29507,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3321,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2366,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10282581,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2568933,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "TARIFF_EVENTS_TARIFF_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125704,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 170294,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "TARIFF_EVENTS_TARIFF_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.448Z",
        "before": [
          {
            "result": {
              "duration": 13174662,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5069741,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7195872,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 270268,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 36302,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 46,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;15",
        "after": [
          {
            "result": {
              "duration": 9458,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3520,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2289,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9981648,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2410113,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "MONITOR_FAILURE_P1_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 123636,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 152233,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "MONITOR_FAILURE_P1_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.491Z",
        "before": [
          {
            "result": {
              "duration": 14902209,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3588822,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7022804,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 296851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 40910,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 47,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;16",
        "after": [
          {
            "result": {
              "duration": 10825,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2808,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9491153,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2380112,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "COMM_EVENTS_ALTERNATIVE_CHANNEL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 167824,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 164385,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "COMM_EVENTS_ALTERNATIVE_CHANNEL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.533Z",
        "before": [
          {
            "result": {
              "duration": 13747630,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4658254,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7170447,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 310728,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 46833,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 48,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;17",
        "after": [
          {
            "result": {
              "duration": 14102,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4637,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 5986,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10472622,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 3002108,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "COMM_EVENTS_RECOVERED_CHANNEL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140247,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 180184,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "COMM_EVENTS_RECOVERED_CHANNEL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "EMPTY"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.578Z",
        "before": [
          {
            "result": {
              "duration": 15096215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3640187,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6893438,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 310032,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 47058,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 49,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;18",
        "after": [
          {
            "result": {
              "duration": 10513,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3504,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2980,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11004680,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2491560,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 178592,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 216301,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "DIAG_EVENTS_GENERAL"
                ]
              },
              {
                "cells": [
                  "Description",
                  "General problem"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.623Z",
        "before": [
          {
            "result": {
              "duration": 13666006,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3723507,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8543747,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 327792,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 64624,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 50,
        "name": "Successfully receive event notifications",
        "description": "",
        "id": "oslpadapter-event-notifications;successfully-receive-event-notifications;;19",
        "after": [
          {
            "result": {
              "duration": 9851,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3394,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2730,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9687588,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:16)\n",
              "duration": 2503456,
              "status": "failed"
            },
            "line": 16,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_DALI_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Light is broken"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 148818,
              "status": "skipped"
            },
            "line": 22,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 160724,
              "status": "skipped"
            },
            "line": 24,
            "name": "the event is stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Event",
                  "LIGHT_FAILURE_DALI_COMMUNICATION"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Light is broken"
                ]
              },
              {
                "cells": [
                  "Index",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.666Z",
        "before": [
          {
            "result": {
              "duration": 13249749,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3504083,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7343752,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 319155,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 69922,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 72,
        "name": "Succesfully receive multiple event notifications in one request",
        "description": "",
        "id": "oslpadapter-event-notifications;succesfully-receive-multiple-event-notifications-in-one-request;;2",
        "after": [
          {
            "result": {
              "duration": 34658,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3301,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2438,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9808018,
              "status": "passed"
            },
            "line": 54,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(OslpDeviceSteps.java:1374)\n\tat ✽.the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:57)\n",
              "duration": 2751293,
              "status": "failed"
            },
            "line": 57,
            "name": "the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 76
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "0"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138567,
              "status": "skipped"
            },
            "line": 61,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 174095,
              "status": "skipped"
            },
            "line": 63,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "0"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.710Z",
        "before": [
          {
            "result": {
              "duration": 13523013,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4019556,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7458580,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 532829,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 67700,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 73,
        "name": "Succesfully receive multiple event notifications in one request",
        "description": "",
        "id": "oslpadapter-event-notifications;succesfully-receive-multiple-event-notifications-in-one-request;;3",
        "after": [
          {
            "result": {
              "duration": 15258,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3375,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2494,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14327058,
              "status": "passed"
            },
            "line": 54,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(OslpDeviceSteps.java:1374)\n\tat ✽.the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:57)\n",
              "duration": 2694705,
              "status": "failed"
            },
            "line": 57,
            "name": "the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 76
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128384,
              "status": "skipped"
            },
            "line": 61,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 162187,
              "status": "skipped"
            },
            "line": 63,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "1"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.757Z",
        "before": [
          {
            "result": {
              "duration": 14683626,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4137291,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 10095561,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 298229,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 35177,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 74,
        "name": "Succesfully receive multiple event notifications in one request",
        "description": "",
        "id": "oslpadapter-event-notifications;succesfully-receive-multiple-event-notifications-in-one-request;;4",
        "after": [
          {
            "result": {
              "duration": 8215,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2946,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2417,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10141488,
              "status": "passed"
            },
            "line": 54,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(OslpDeviceSteps.java:1374)\n\tat ✽.the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:57)\n",
              "duration": 2966323,
              "status": "failed"
            },
            "line": 57,
            "name": "the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 76
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,2"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 131784,
              "status": "skipped"
            },
            "line": 61,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 159396,
              "status": "skipped"
            },
            "line": 63,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,2"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "2"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.805Z",
        "before": [
          {
            "result": {
              "duration": 13205437,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3453196,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6904662,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 276043,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 33870,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 75,
        "name": "Succesfully receive multiple event notifications in one request",
        "description": "",
        "id": "oslpadapter-event-notifications;succesfully-receive-multiple-event-notifications-in-one-request;;5",
        "after": [
          {
            "result": {
              "duration": 7294,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2724,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 10611,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9761739,
              "status": "passed"
            },
            "line": 54,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(OslpDeviceSteps.java:1374)\n\tat ✽.the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:57)\n",
              "duration": 2713830,
              "status": "failed"
            },
            "line": 57,
            "name": "the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 76
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,2,4"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 129672,
              "status": "skipped"
            },
            "line": 61,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 164629,
              "status": "skipped"
            },
            "line": 63,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_ON, LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,2,4"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "3"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.846Z",
        "before": [
          {
            "result": {
              "duration": 12889042,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3478354,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8282415,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 379402,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 54670,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 76,
        "name": "Succesfully receive multiple event notifications in one request",
        "description": "",
        "id": "oslpadapter-event-notifications;succesfully-receive-multiple-event-notifications-in-one-request;;6",
        "after": [
          {
            "result": {
              "duration": 8424,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3828,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2570,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12027572,
              "status": "passed"
            },
            "line": 54,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(OslpDeviceSteps.java:1374)\n\tat ✽.the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:57)\n",
              "duration": 2568591,
              "status": "failed"
            },
            "line": 57,
            "name": "the device sends multiple event notifications request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 76
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsMultipleEventNotificationsRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, HARDWARE_FAILURE_RELAY"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 130012,
              "status": "skipped"
            },
            "line": 61,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 155925,
              "status": "skipped"
            },
            "line": 63,
            "name": "the events are stored",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.EventSteps.theEventIsStored(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Events",
                  "LIGHT_EVENTS_LIGHT_ON, HARDWARE_FAILURE_RELAY"
                ]
              },
              {
                "cells": [
                  "Indexes",
                  "1,1"
                ]
              },
              {
                "cells": [
                  "NumberOfEvents",
                  "2"
                ]
              },
              {
                "cells": [
                  "NumberOfStatuses",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.891Z",
        "before": [
          {
            "result": {
              "duration": 13166647,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3974949,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8694692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 443462,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 78,
        "name": "receiving an event updates the last event status and the last known status",
        "description": "",
        "id": "oslpadapter-event-notifications;receiving-an-event-updates-the-last-event-status-and-the-last-known-status",
        "after": [
          {
            "result": {
              "duration": 8284,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3320,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2812,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9142788,
              "status": "passed"
            },
            "line": 79,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18783393,
              "status": "passed"
            },
            "line": 81,
            "name": "a device relay status",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.aDeviceRelayStatus(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-01T10:00:00Z"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastKnownStateTime",
                  "2018-08-01T10:00:00Z"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:88)\n",
              "duration": 2437683,
              "status": "failed"
            },
            "line": 88,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "TimeStamp",
                  "20180831100000"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 131154,
              "status": "skipped"
            },
            "line": 94,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 176173,
              "status": "skipped"
            },
            "line": 96,
            "name": "there is a device relay status",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.thereIsADeviceRelayStatus(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "On"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-31T10:00:00Z"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "On"
                ]
              },
              {
                "cells": [
                  "LastKnownStateTime",
                  "2018-08-31T10:00:00Z"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:14.952Z",
        "before": [
          {
            "result": {
              "duration": 12873094,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4663853,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7131295,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 242476,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          }
        ],
        "line": 104,
        "name": "receiving an event adds the relay status, if there is no status for the relay yet",
        "description": "",
        "id": "oslpadapter-event-notifications;receiving-an-event-adds-the-relay-status--if-there-is-no-status-for-the-relay-yet",
        "after": [
          {
            "result": {
              "duration": 6122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2957,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2263,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9954320,
              "status": "passed"
            },
            "line": 105,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(OslpDeviceSteps.java:1329)\n\tat ✽.the device sends an event notification request to the platform over \"OSLP ELSTER\"(classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature:107)\n",
              "duration": 2180747,
              "status": "failed"
            },
            "line": 107,
            "name": "the device sends an event notification request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 69
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsAnEventNotificationRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Event",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "Some description"
                ]
              },
              {
                "cells": [
                  "Index",
                  "0"
                ]
              },
              {
                "cells": [
                  "TimeStamp",
                  "20180831100000"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 129824,
              "status": "skipped"
            },
            "line": 113,
            "name": "the event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 162198,
              "status": "skipped"
            },
            "line": 115,
            "name": "there is a device relay status",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.thereIsADeviceRelayStatus(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "2"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-31T10:00:00Z"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastKnownStateTime",
                  "2018-08-31T10:00:00Z"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161079,
              "status": "skipped"
            },
            "line": 122,
            "name": "there is a device relay status",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.RelayStatusSteps.thereIsADeviceRelayStatus(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TEST1024000000001"
                ]
              },
              {
                "cells": [
                  "Index",
                  "3"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastSwitchingEventTime",
                  "2018-08-31T10:00:00Z"
                ]
              },
              {
                "cells": [
                  "LastKnownState",
                  "Off"
                ]
              },
              {
                "cells": [
                  "LastKnownStateTime",
                  "2018-08-31T10:00:00Z"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          }
        ]
      }
    ],
    "name": "OslpAdapter Event notifications",
    "description": "  As a device\n  I want to send event notifications to OSGP\n  So that OSGP can register event notifications and use the information",
    "id": "oslpadapter-event-notifications",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/protocol-adapter-oslp/EventNotifications.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@OslpAdapter",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:34:14.995Z",
        "before": [
          {
            "result": {
              "duration": 14589196,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4105800,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6573408,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 240240,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 34845,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 34,
        "name": "A device which is installed and performs first time registration.",
        "description": "",
        "id": "protocoladapteroslp-device-registration;a-device-which-is-installed-and-performs-first-time-registration.;;2",
        "after": [
          {
            "result": {
              "duration": 12673,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3234,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2241,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9181870,
              "status": "passed"
            },
            "line": 13,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3457248,
              "status": "passed"
            },
            "line": 16,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:23)\n",
              "duration": 30024595106,
              "status": "failed"
            },
            "line": 23,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 178171,
              "status": "skipped"
            },
            "line": 25,
            "name": "the ssld oslp device contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.theSsldOslpDeviceContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:34:45.065Z",
        "before": [
          {
            "result": {
              "duration": 20287261,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4116815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8662733,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 588745,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48483,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 65,
        "name": "A device which performs subsequent registration.",
        "description": "",
        "id": "protocoladapteroslp-device-registration;a-device-which-performs-subsequent-registration.;;2",
        "after": [
          {
            "result": {
              "duration": 17871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3583,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2476,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11362787,
              "status": "passed"
            },
            "line": 38,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2887598,
              "status": "passed"
            },
            "line": 43,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1587945,
              "status": "passed"
            },
            "line": 48,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:54)\n",
              "duration": 30023827225,
              "status": "failed"
            },
            "line": 54,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 206678,
              "status": "skipped"
            },
            "line": 56,
            "name": "the ssld oslp device contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.theSsldOslpDeviceContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:35:15.145Z",
        "before": [
          {
            "result": {
              "duration": 18060271,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5746366,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8938296,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 403232,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 36083,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 96,
        "name": "Register device that already exists on the platform, without GPS metadata",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-device-that-already-exists-on-the-platform--without-gps-metadata;;2",
        "after": [
          {
            "result": {
              "duration": 31657,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4260,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 26035,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11453402,
              "status": "passed"
            },
            "line": 69,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "gpsLatitude",
                  ""
                ]
              },
              {
                "cells": [
                  "gpsLongitude",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2726440,
              "status": "passed"
            },
            "line": 75,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1730062,
              "status": "passed"
            },
            "line": 79,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:85)\n",
              "duration": 30026057680,
              "status": "failed"
            },
            "line": 85,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 227749,
              "status": "skipped"
            },
            "line": 87,
            "name": "the ssld oslp device contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.theSsldOslpDeviceContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "HasSchedule",
                  "false"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:35:45.228Z",
        "before": [
          {
            "result": {
              "duration": 18885111,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3780996,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9113993,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 755533,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 100836,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 135,
        "name": "Register device with NetworkAddress already in use by another device",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-device-with-networkaddress-already-in-use-by-another-device;;2",
        "after": [
          {
            "result": {
              "duration": 13814,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2876,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2621,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11239193,
              "status": "passed"
            },
            "line": 100,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.3"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9492972,
              "status": "passed"
            },
            "line": 106,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000003"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "sdfhDFDFLS34FDLSd"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2792432,
              "status": "passed"
            },
            "line": 112,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000003"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.3"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: Timeout after [30] seconds.\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:138)\n\tat org.opensmartgridplatform.cucumber.core.Wait.untilAndReturn(Wait.java:53)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.waitForResponse(MockOslpServer.java:630)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1416)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:118)\n",
              "duration": 30025269547,
              "status": "failed"
            },
            "line": 118,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Status",
                  "OK"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 182379,
              "status": "skipped"
            },
            "line": 120,
            "name": "the ssld oslp device contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.theSsldOslpDeviceContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000003"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "127.0.0.3"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 188675,
              "status": "skipped"
            },
            "line": 126,
            "name": "the ssld oslp device contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.theSsldOslpDeviceContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "NetworkAddress",
                  "null"
                ]
              },
              {
                "cells": [
                  "DeviceType",
                  "SSLD"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.317Z",
        "before": [
          {
            "result": {
              "duration": 16212529,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3679780,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 8721188,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 379699,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 39919,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 146,
        "name": "Register device with empty DeviceIdentification",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-device-with-empty-deviceidentification;;2",
        "after": [
          {
            "result": {
              "duration": 25513,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3099,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2166,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2390142,
              "status": "passed"
            },
            "line": 139,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: \nExpecting message to be:\n  \u003c\"Failed to receive response within timelimit 20000 ms\"\u003e\nbut was:\n  \u003c\"Unable to connect\"\u003e\n\nThrowable that failed the check:\n\njava.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(OslpDeviceSteps.java:1242)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.runTests(AppBase.java:99)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.run(AppBase.java:54)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.App.main(App.java:17)\n\n\tat jdk.internal.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1426)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:141)\n",
              "duration": 1542998,
              "status": "failed"
            },
            "line": 141,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Failed to receive response within timelimit 20000 ms"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.355Z",
        "before": [
          {
            "result": {
              "duration": 13812698,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3583856,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4670595,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 288011,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 45650,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 159,
        "name": "Register device that does not yet exist on the platform",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-device-that-does-not-yet-exist-on-the-platform;;2",
        "after": [
          {
            "result": {
              "duration": 6031,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2694,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2198,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2057768,
              "status": "passed"
            },
            "line": 150,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: \nExpecting message to be:\n  \u003c\"Failed to receive response within timelimit 20000 ms\"\u003e\nbut was:\n  \u003c\"Unable to connect\"\u003e\n\nThrowable that failed the check:\n\njava.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(OslpDeviceSteps.java:1242)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.runTests(AppBase.java:99)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.run(AppBase.java:54)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.App.main(App.java:17)\n\n\tat jdk.internal.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1426)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:153)\n",
              "duration": 409486,
              "status": "failed"
            },
            "line": 153,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Failed to receive response within timelimit 20000 ms"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145660,
              "status": "skipped"
            },
            "line": 155,
            "name": "the device with id \"TESTDEVICE0000001\" does not exist",
            "match": {
              "arguments": [
                {
                  "val": "TESTDEVICE0000001",
                  "offset": 20
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.DeviceSteps.theDeviceWithIdDoesNotExist(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.385Z",
        "before": [
          {
            "result": {
              "duration": 14530548,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3731249,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4592711,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 245776,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 27987,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 174,
        "name": "Register a device but register device request for another deviceUid",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-a-device-but-register-device-request-for-another-deviceuid;;2",
        "after": [
          {
            "result": {
              "duration": 7025,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3212,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2101,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10679467,
              "status": "passed"
            },
            "line": 163,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2117213,
              "status": "passed"
            },
            "line": 167,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFGaO1S3Ple6"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.AssertionFailedError: \nExpecting message to be:\n  \u003c\"Failed to receive response within timelimit 20000 ms\"\u003e\nbut was:\n  \u003c\"Unable to connect\"\u003e\n\nThrowable that failed the check:\n\njava.io.IOException: Unable to connect\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpChannelHandler.send(MockOslpChannelHandler.java:342)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.mocks.oslpdevice.MockOslpServer.send(MockOslpServer.java:224)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.send(OslpDeviceSteps.java:1473)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(OslpDeviceSteps.java:1242)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.runTests(AppBase.java:99)\n\tat org.opensmartgridplatform.cucumber.execution.AppBase.run(AppBase.java:54)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.App.main(App.java:17)\n\n\tat jdk.internal.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(OslpDeviceSteps.java:1426)\n\tat ✽.the register device response contains(classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature:169)\n",
              "duration": 399196,
              "status": "failed"
            },
            "line": 169,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "Failed to receive response within timelimit 20000 ms"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.426Z",
        "before": [
          {
            "result": {
              "duration": 13605282,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3733617,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6839725,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 284838,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 37692,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 189,
        "name": "Register a device but register device request for an empty deviceUid",
        "description": "",
        "id": "protocoladapteroslp-device-registration;register-a-device-but-register-device-request-for-an-empty-deviceuid;;2",
        "after": [
          {
            "result": {
              "duration": 5948,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2940,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 1939,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9706022,
              "status": "passed"
            },
            "line": 178,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 964878,
              "status": "passed"
            },
            "line": 182,
            "name": "the device sends a register device request to the platform over \"OSLP ELSTER\"",
            "match": {
              "arguments": [
                {
                  "val": "OSLP ELSTER",
                  "offset": 65
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theDeviceSendsARegisterDeviceRequestToThePlatform(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceUid",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 184346,
              "status": "passed"
            },
            "line": 184,
            "name": "the register device response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.mocks.OslpDeviceSteps.theRegisterDeviceResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Message",
                  "ManufacturerId + DeviceId is not of expected Length: 12"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "ProtocolAdapterOSLP Device Registration",
    "description": "  As a ...\n  I want to be able to perform DeviceInstallation operations on a device\n  In order to ...",
    "id": "protocoladapteroslp-device-registration",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/protocol-adapter-oslp/RegisterDevice.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@OslpAdapter",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2025-04-04T13:36:15.469Z",
        "before": [
          {
            "result": {
              "duration": 16993824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3534149,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6582483,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 257048,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 150,
        "name": "Filter retrieved event notifications on device",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;filter-retrieved-event-notifications-on-device;;2",
        "after": [
          {
            "result": {
              "duration": 9644,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 11732,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2625,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3978177,
              "status": "passed"
            },
            "line": 113,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "Heerlen"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9422179,
              "status": "passed"
            },
            "line": 115,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFG0M1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10372525,
              "status": "passed"
            },
            "line": 119,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5434915,
              "status": "passed"
            },
            "line": 123,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3332329,
              "status": "passed"
            },
            "line": 127,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 182222047,
              "status": "passed"
            },
            "line": 131,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31006381,
              "status": "passed"
            },
            "line": 133,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12596669,
              "status": "passed"
            },
            "line": 135,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 339271,
              "status": "passed"
            },
            "line": 139,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1535073,
              "status": "passed"
            },
            "line": 143,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  ""
                ]
              },
              {
                "cells": [
                  "Result",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.766Z",
        "before": [
          {
            "result": {
              "duration": 16425480,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3680322,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7185004,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 400313,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 30597,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 151,
        "name": "Filter retrieved event notifications on device",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;filter-retrieved-event-notifications-on-device;;3",
        "after": [
          {
            "result": {
              "duration": 9255,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3961,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2928,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4930543,
              "status": "passed"
            },
            "line": 113,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "Heerlen"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9932074,
              "status": "passed"
            },
            "line": 115,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFG0M1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10439245,
              "status": "passed"
            },
            "line": 119,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3422118,
              "status": "passed"
            },
            "line": 123,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4110446,
              "status": "passed"
            },
            "line": 127,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24854000,
              "status": "passed"
            },
            "line": 131,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 21966013,
              "status": "passed"
            },
            "line": 133,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 470207,
              "status": "passed"
            },
            "line": 135,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 686416,
              "status": "passed"
            },
            "line": 139,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1924329,
              "status": "passed"
            },
            "line": 143,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.881Z",
        "before": [
          {
            "result": {
              "duration": 15443994,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3561682,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6925463,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 326300,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 30935,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 152,
        "name": "Filter retrieved event notifications on device",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;filter-retrieved-event-notifications-on-device;;4",
        "after": [
          {
            "result": {
              "duration": 9347,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2951,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2527,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3653866,
              "status": "passed"
            },
            "line": 113,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "Heerlen"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10673317,
              "status": "passed"
            },
            "line": 115,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFG0M1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9670560,
              "status": "passed"
            },
            "line": 119,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3648868,
              "status": "passed"
            },
            "line": 123,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4040608,
              "status": "passed"
            },
            "line": 127,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26050193,
              "status": "passed"
            },
            "line": 131,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27414064,
              "status": "passed"
            },
            "line": 133,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 517112,
              "status": "passed"
            },
            "line": 135,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 253917,
              "status": "passed"
            },
            "line": 139,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1249941,
              "status": "passed"
            },
            "line": 143,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "Result",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:15.999Z",
        "before": [
          {
            "result": {
              "duration": 17395977,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3860764,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7269197,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 373580,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 224294,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 153,
        "name": "Filter retrieved event notifications on device",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;filter-retrieved-event-notifications-on-device;;5",
        "after": [
          {
            "result": {
              "duration": 9306,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3383,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2751,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4103945,
              "status": "passed"
            },
            "line": 113,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "Heerlen"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11214629,
              "status": "passed"
            },
            "line": 115,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "fIX1fFG0M1S3Ple6"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9872065,
              "status": "passed"
            },
            "line": 119,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "DeviceUid",
                  "eHW0eEFzN0R2Okd5"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3808346,
              "status": "passed"
            },
            "line": 123,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4563957,
              "status": "passed"
            },
            "line": 127,
            "name": "1 event",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26489292,
              "status": "passed"
            },
            "line": 131,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24511009,
              "status": "passed"
            },
            "line": 133,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 526344,
              "status": "passed"
            },
            "line": 135,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 263588,
              "status": "passed"
            },
            "line": 139,
            "name": "the retrieve event notification response contains",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationResponseContains(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000002"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_OFF"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is off"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1213915,
              "status": "passed"
            },
            "line": 143,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000003"
                ]
              },
              {
                "cells": [
                  "Result",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:16.121Z",
        "before": [
          {
            "result": {
              "duration": 14394821,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3522218,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9644547,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 346828,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 48815,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 178,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;2",
        "after": [
          {
            "result": {
              "duration": 10902,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3148,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2687,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3851491,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12956022,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 627767,
              "status": "passed"
            },
            "line": 162,
            "name": "0 events",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26237181,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "1"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "10"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 341979,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 0 pages",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1008537,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "0"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:16.202Z",
        "before": [
          {
            "result": {
              "duration": 13035931,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3486019,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 13044584,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 316866,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 33517,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 179,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;3",
        "after": [
          {
            "result": {
              "duration": 12081,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3613,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2914,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4347502,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10048450,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3817342,
              "status": "passed"
            },
            "line": 162,
            "name": "1 events",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24735112,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "1"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "10"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 374286,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 1 pages",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1225191,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:16.282Z",
        "before": [
          {
            "result": {
              "duration": 13642824,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 5066190,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7354040,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 262767,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 27871,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 180,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;4",
        "after": [
          {
            "result": {
              "duration": 98173,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4123,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3122,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3555412,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10562713,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41742803,
              "status": "passed"
            },
            "line": 162,
            "name": "15 events",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22244870,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "1"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "10"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 364572,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 2 pages",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1418116,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "15"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:16.393Z",
        "before": [
          {
            "result": {
              "duration": 13244245,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3430318,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 6934448,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 300739,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 29678,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 181,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;5",
        "after": [
          {
            "result": {
              "duration": 10839,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 4024,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2615,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4814359,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11529268,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48080710,
              "status": "passed"
            },
            "line": 162,
            "name": "15 events",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24018316,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "2"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "10"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 305352,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 2 pages",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1154436,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "15"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:16.512Z",
        "before": [
          {
            "result": {
              "duration": 15222022,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 3361450,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 9477303,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 482591,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 50720,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 182,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;6",
        "after": [
          {
            "result": {
              "duration": 11557,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3498,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2669,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5688901,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10113729,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1806627063,
              "status": "passed"
            },
            "line": 162,
            "name": "500 events",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28715095,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "1"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "30"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 360870,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 17 pages",
            "match": {
              "arguments": [
                {
                  "val": "17",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3623499,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      },
      {
        "start_timestamp": "2025-04-04T13:36:18.401Z",
        "before": [
          {
            "result": {
              "duration": 14951955,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 4879061,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 7854091,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 368972,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.protocol.iec60870.glue.hooks.ScenarioHooks.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 49367,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.OslpMockServerHooks.resetServer()"
            }
          }
        ],
        "line": 183,
        "name": "Retrieve multiple event notifications",
        "description": "",
        "id": "oslpadapter-retrieve-received-event-notifications;retrieve-multiple-event-notifications;;7",
        "after": [
          {
            "result": {
              "duration": 13623,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 3925,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.hooks.ScenarioHooks.afterScenario()"
            }
          },
          {
            "result": {
              "duration": 2780,
              "status": "passed"
            },
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.hooks.ScenarioHooks.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3973677,
              "status": "passed"
            },
            "line": 157,
            "name": "an organization",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.glue.steps.database.core.OrganizationSteps.anOrganization(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "OrganizationIdentification",
                  "GemeenteArnhem"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9117866,
              "status": "passed"
            },
            "line": 159,
            "name": "an ssld oslp device",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.publiclighting.glue.steps.database.adapterprotocoloslp.OslpDeviceSteps.anSsldOslpDevice(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Protocol",
                  "OSLP ELSTER"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1562871802,
              "status": "passed"
            },
            "line": 162,
            "name": "500 events",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 0
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.anEvent(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "EventType",
                  "LIGHT_EVENTS_LIGHT_ON"
                ]
              },
              {
                "cells": [
                  "Description",
                  "light is on"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40509304,
              "status": "passed"
            },
            "line": 166,
            "name": "a retrieve event notification request is sent",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.aRetrieveEventNotificationRequestIsSent(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "RequestedPage",
                  "1"
                ]
              },
              {
                "cells": [
                  "PageSize",
                  "400"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 322480,
              "status": "passed"
            },
            "line": 170,
            "name": "the retrieve event notification request response should contain 2 pages",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 64
                }
              ],
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theRetrieveEventNotificationRequestIsReceived(int,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3650524,
              "status": "passed"
            },
            "line": 172,
            "name": "the stored events are filtered and retrieved",
            "match": {
              "location": "org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.core.devicemanagement.RetrieveReceivedEventNotifications.theStoredEventsAreFilteredAndRetrieved(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "DeviceIdentification",
                  "TESTDEVICE0000001"
                ]
              },
              {
                "cells": [
                  "Result",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@PublicLighting"
          },
          {
            "name": "@Platform"
          },
          {
            "name": "@OslpAdapter"
          },
          {
            "name": "@OslpMockServer"
          }
        ]
      }
    ],
    "name": "OslpAdapter Retrieve Received Event Notifications",
    "description": "  As a ...\n  I want to ...\n  So that ...",
    "id": "oslpadapter-retrieve-received-event-notifications",
    "keyword": "Feature",
    "uri": "classpath:features/publiclighting/protocol-adapter-oslp/RetrieveReceiveEventNotifications.feature",
    "tags": [
      {
        "name": "@PublicLighting",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      },
      {
        "name": "@Platform",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 17
        }
      },
      {
        "name": "@OslpAdapter",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 27
        }
      }
    ]
  }
]